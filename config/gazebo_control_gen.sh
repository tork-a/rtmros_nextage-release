#!/bin/bash

# Software License Agreement (BSD License)
#
# Copyright (c) 2015, Tokyo Opensource Robotics Kyokai Association (TORK)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of Tokyo Opensource Robotics Kyokai Association. nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

DATE=`date`
cat <<EOF
###
### THIS FILE IS AUTOMATICALLY GENERATED by $0 ${PWD} ${DATE}
###
# Publish all joint states -----------------------------------
joint_state_controller:
  type: joint_state_controller/JointStateController
  publish_rate: 50
EOF

cat <<EOF

  # Position Controllers (arms) ---------------------------------------
EOF
for joint in CHEST_JOINT0 HEAD_JOINT0 HEAD_JOINT1 LARM_JOINT0 LARM_JOINT1 LARM_JOINT2 LARM_JOINT3 LARM_JOINT4 LARM_JOINT5 RARM_JOINT0 RARM_JOINT1 RARM_JOINT2 RARM_JOINT3 RARM_JOINT4 RARM_JOINT5; do
    cat <<EOF
${joint}_position_controller:
  type: effort_controllers/JointPositionController
  joint: ${joint}
  pid: {p: 100, i: 0.01, d: 5.0}
EOF
done

for conf in "larm:LARM_JOINT0 LARM_JOINT1 LARM_JOINT2 LARM_JOINT3 LARM_JOINT4 LARM_JOINT5" "rarm:RARM_JOINT0 RARM_JOINT1 RARM_JOINT2 RARM_JOINT3 RARM_JOINT4 RARM_JOINT5" "head:HEAD_JOINT0 HEAD_JOINT1" "torso:CHEST_JOINT0" ; do
    prefix="${conf%%:*}"
    joint_list="${conf##*:}"
    cat <<EOF

# Trajectory Controllers ---------------------------------------
${prefix}_controller:
  type: effort_controllers/JointTrajectoryController
  joints:
EOF
    for joint in ${joint_list}; do
    cat <<EOF
    - ${joint}
EOF
    done
    cat <<EOF
  constraints:
    goal_time: 0.5                   # Override default
    stopped_velocity_tolerance: 0.02 # Override default
EOF
    for joint in ${joint_list}; do
        cat <<EOF
    ${joint}:
      trajectory: 0.05               # Not enforced if unspecified
      goal: 0.02                     # Not enforced if unspecified
EOF
    done
    cat <<EOF

  gains: # Required because we're controlling an effort interface
EOF
    for joint in ${joint_list}; do
    cat <<EOF
    ${joint}: {p: 1500, i: 5, d: 1}
EOF
    done
    cat <<EOF
  state_publish_rate:  100            # Override default
  action_monitor_rate: 100            # Override default
  stop_trajectory_duration: 0        # Override default

EOF
done
