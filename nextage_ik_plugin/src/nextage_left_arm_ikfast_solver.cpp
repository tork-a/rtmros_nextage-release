/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-08-19 09:45:59.556366
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "nextage_ik_plugin/ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.258820826967441))*(x9));
x13=((IkReal(0.258820826967441))*(x11));
x14=((IkReal(1.00000000000000))*(x8));
x15=((IkReal(0.0300000000000000))*(x0));
x16=((IkReal(1.00000000000000))*(x5));
x17=((IkReal(0.965925348838040))*(x11));
x18=((IkReal(0.258820826967441))*(x8));
x19=((IkReal(0.0470000000000000))*(x0));
x20=((IkReal(0.965925348838040))*(x9));
x21=((IkReal(1.00000000000000))*(x9));
x22=((IkReal(0.00776462480902323))*(x7));
x23=((IkReal(0.965925348838040))*(x8));
x24=((IkReal(0.0289777604651412))*(x7));
x25=((IkReal(1.00000000000000))*(x7));
x26=((IkReal(0.235000000000000))*(x0));
x27=((IkReal(0.0470000000000000))*(x7));
x28=((IkReal(0.0900000000000000))*(x6));
x29=((IkReal(0.965925348838040))*(x10));
x30=((IkReal(1.00000000000000))*(x0));
x31=((IkReal(0.258820826967441))*(x10));
x32=((IkReal(0.0900000000000000))*(x0));
x33=((IkReal(0.0900000000000000))*(x7));
x34=((IkReal(1.00000000000000))*(x6));
x35=((x1)*(x3));
x36=((x6)*(x9));
x37=((x2)*(x4));
x38=((x4)*(x7));
x39=((IkReal(-0.0470000000000000))*(x6));
x40=((x3)*(x4));
x41=((x0)*(x5));
x42=((x1)*(x2));
x43=((x16)*(x7));
x44=((x25)*(x6));
x45=((x30)*(x37));
x46=((x25)*(x37));
x47=((((IkReal(-1.00000000000000))*(x35)))+(x37));
x48=((((IkReal(0.0470000000000000))*(x35)))+(((IkReal(-0.0470000000000000))*(x37))));
x49=((((IkReal(0.0900000000000000))*(x37)))+(((IkReal(-0.0900000000000000))*(x35))));
x50=((((IkReal(1.00000000000000))*(x42)))+(((IkReal(1.00000000000000))*(x40))));
x51=((IkReal(-1.00000000000000))*(x50));
x52=((((IkReal(0.0470000000000000))*(x40)))+(((IkReal(0.0470000000000000))*(x42))));
x53=((((IkReal(0.0900000000000000))*(x42)))+(((IkReal(0.0900000000000000))*(x40))));
x54=((((IkReal(-1.00000000000000))*(x45)))+(((x0)*(x35))));
x55=((((IkReal(-1.00000000000000))*(x46)))+(((x35)*(x7))));
x56=((x52)*(x6));
x57=((x5)*(x51));
x58=((x51)*(x6));
x59=((((IkReal(-1.00000000000000))*(x30)*(x35)))+(x45));
x60=((((IkReal(-1.00000000000000))*(x25)*(x35)))+(x46));
x61=((x30)*(((((IkReal(-1.00000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(x42))))));
x62=((x25)*(((((IkReal(-1.00000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(x42))))));
x63=((x27)*(((x42)+(x40))));
x64=((x33)*(((((IkReal(-1.00000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(x42))))));
x65=((x55)*(x6));
x66=((x54)*(x6));
x67=((x10)*(x5)*(x50));
x68=((x5)*(x59));
x69=((x41)+(x65));
x70=((((x0)*(x6)))+(((x5)*(x60))));
x71=((((IkReal(-1.00000000000000))*(x28)*(x55)))+(((IkReal(-1.00000000000000))*(x32)*(x5))));
x72=((((IkReal(-1.00000000000000))*(x16)*(x60)))+(((IkReal(-1.00000000000000))*(x30)*(x6))));
x73=((((x39)*(x55)))+(((IkReal(-0.0470000000000000))*(x41))));
x74=((x73)*(x8));
x75=((((IkReal(-1.00000000000000))*(x14)*(x47)))+(((IkReal(-1.00000000000000))*(x21)*(x50)*(x6))));
x76=((x11)*(x75));
x77=((((x21)*(((((IkReal(-1.00000000000000))*(x43)))+(((x34)*(x54)))))))+(((IkReal(-1.00000000000000))*(x14)*(x61))));
x78=((((x21)*(((((x0)*(x16)))+(((x34)*(x55)))))))+(((IkReal(-1.00000000000000))*(x14)*(x62))));
x79=((x10)*(x78));
eerot[0]=((((x8)*(((((IkReal(-1.00000000000000))*(x43)))+(x66)))))+(((x61)*(x9))));
eerot[1]=((((x10)*(((((IkReal(-1.00000000000000))*(x44)))+(x68)))))+(((x11)*(x77))));
eerot[2]=((((x10)*(x77)))+(((x11)*(((x44)+(((IkReal(-1.00000000000000))*(x16)*(x59))))))));
IkReal x80=((IkReal(1.00000000000000))*(x42));
IkReal x81=((IkReal(1.00000000000000))*(x40));
eetrans[0]=((((x9)*(((((IkReal(-1.00000000000000))*(x28)*(x54)))+(((x33)*(x5)))))))+(((x15)*(x37)))+(((x8)*(((((IkReal(-1.00000000000000))*(x32)*(x80)))+(((IkReal(-1.00000000000000))*(x32)*(x81)))))))+(((x9)*(((((x19)*(x42)))+(((x19)*(x40)))))))+(((IkReal(-0.250000000000000))*(x0)*(x4)))+(((IkReal(-1.00000000000000))*(x26)*(x80)))+(((IkReal(-1.00000000000000))*(x26)*(x81)))+(((x8)*(((((x39)*(x54)))+(((x27)*(x5)))))))+(((IkReal(-0.0950000000000000))*(x7)))+(((IkReal(-1.00000000000000))*(x15)*(x35))));
eerot[3]=((((x23)*(x69)))+(((x20)*(x62)))+(((x18)*(x58)))+(((x12)*(x47))));
eerot[4]=((((x17)*(x78)))+(((x29)*(x70)))+(((x13)*(x75)))+(((x31)*(x5)*(x50))));
eerot[5]=((((x13)*(x57)))+(((x17)*(x72)))+(((x29)*(x78)))+(((x31)*(x75))));
eetrans[1]=((IkReal(0.145000000000000))+(((IkReal(-0.0608228943373486))*(x35)))+(((IkReal(-0.226992456976939))*(x3)*(x38)))+(((x23)*(x64)))+(((IkReal(0.0917629081396138))*(x0)))+(((x20)*(x63)))+(((x12)*(x53)*(x6)))+(((x23)*(x73)))+(((x18)*(x56)))+(((x18)*(x49)))+(((IkReal(-0.226992456976939))*(x42)*(x7)))+(((IkReal(-0.241481337209510))*(x38)))+(((x20)*(x71)))+(((IkReal(-0.0647052067418602))*(x1)))+(((x12)*(x48)))+(((IkReal(-1.00000000000000))*(x24)*(x35)))+(((IkReal(0.0608228943373486))*(x37)))+(((x24)*(x37)))+(((IkReal(0.00776462480902323))*(x42)))+(((IkReal(0.00776462480902323))*(x40))));
eerot[6]=((((x20)*(x47)))+(((IkReal(-1.00000000000000))*(x18)*(x69)))+(((IkReal(-1.00000000000000))*(x12)*(x62)))+(((x23)*(x58))));
eerot[7]=((((x17)*(x75)))+(((x29)*(x5)*(x50)))+(((IkReal(-1.00000000000000))*(x31)*(x70)))+(((IkReal(-1.00000000000000))*(x13)*(x78))));
eerot[8]=((((x17)*(x57)))+(((x29)*(x75)))+(((IkReal(-1.00000000000000))*(x31)*(x78)))+(((IkReal(-1.00000000000000))*(x13)*(x72))));
IkReal x82=((IkReal(1.00000000000000))*(x12));
IkReal x83=((IkReal(1.00000000000000))*(x18));
eetrans[2]=((IkReal(0.370300000000000))+(((x20)*(x48)))+(((IkReal(-0.226992456976939))*(x35)))+(((IkReal(-1.00000000000000))*(x73)*(x83)))+(((x20)*(x53)*(x6)))+(((IkReal(-1.00000000000000))*(x71)*(x82)))+(((IkReal(-1.00000000000000))*(x63)*(x82)))+(((IkReal(0.0289777604651412))*(x42)))+(((IkReal(0.0289777604651412))*(x40)))+(((x23)*(x49)))+(((IkReal(0.226992456976939))*(x37)))+(((IkReal(0.0647052067418602))*(x38)))+(((x22)*(x35)))+(((IkReal(-1.00000000000000))*(x22)*(x37)))+(((IkReal(-0.0245879785619069))*(x0)))+(((IkReal(-0.241481337209510))*(x1)))+(((IkReal(0.0608228943373486))*(x42)*(x7)))+(((IkReal(0.0608228943373486))*(x3)*(x38)))+(((IkReal(-1.00000000000000))*(x64)*(x83)))+(((x23)*(x56))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((px)+(((IkReal(0.0470000000000000))*(r00))));
new_r10=((((IkReal(-0.965925348838040))*(r12)))+(((IkReal(0.258820826967441))*(r22))));
new_r11=((((IkReal(0.965925348838040))*(r11)))+(((IkReal(-0.258820826967441))*(r21))));
new_r12=((((IkReal(0.965925348838040))*(r10)))+(((IkReal(-0.258820826967441))*(r20))));
new_py=((IkReal(-0.0442178233554725))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(0.0453984913953879))*(r10)))+(((IkReal(-0.0121645788674697))*(r20)))+(((IkReal(-0.258820826967441))*(pz))));
new_r20=((((IkReal(-0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.965925348838040))*(r21)))+(((IkReal(0.258820826967441))*(r11))));
new_r22=((((IkReal(0.965925348838040))*(r20)))+(((IkReal(0.258820826967441))*(r10))));
new_pz=((IkReal(-0.395211176585005))+(((IkReal(0.965925348838040))*(pz)))+(((IkReal(0.258820826967441))*(py)))+(((IkReal(0.0121645788674697))*(r10)))+(((IkReal(0.0453984913953879))*(r20))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x84=((IkReal(0.650000000000000))*(npx));
IkReal x85=((IkReal(0.0600000000000000))*(npz));
IkReal x86=((IkReal(1.00000000000000))*(pp));
IkReal x87=((IkReal(0.0600000000000000))*(npy));
IkReal x88=((IkReal(0.0950000000000000))*(r22));
IkReal x89=((IkReal(0.120000000000000))*(npx));
IkReal x90=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x91=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x92=((IkReal(0.0950000000000000))*(r21));
IkReal x93=((IkReal(0.940000000000000))*(npz));
IkReal x94=((IkReal(0.190000000000000))*(r20));
IkReal x95=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x96=((IkReal(0.180000000000000))*(r21));
IkReal x97=((IkReal(0.360000000000000))*(r20));
IkReal x98=((IkReal(0.380000000000000))*(r21));
IkReal x99=((IkReal(0.290000000000000))*(npx));
IkReal x100=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x87))));
IkReal x101=((rxp0_2)+(((IkReal(-1.00000000000000))*(x88))));
IkReal x102=((IkReal(0.580000000000000))*(npy));
IkReal x103=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x87))));
IkReal x104=((IkReal(-1.30000000000000))*(npy));
IkReal x105=((IkReal(-0.0950000000000000))*(r21));
IkReal x106=((IkReal(-0.190000000000000))*(r20));
IkReal x107=((IkReal(0.00570000000000000))+(x87));
IkReal x108=((IkReal(-0.00570000000000000))+(x87));
IkReal x109=((rxp0_2)+(x88));
IkReal x110=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x111=((x88)+(((IkReal(-1.00000000000000))*(x90))));
IkReal x112=((IkReal(-0.0350000000000000))+(x84));
IkReal x113=((IkReal(0.0496000000000000))+(x85));
IkReal x114=((((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x88))));
IkReal x115=((x86)+(x85));
IkReal x116=((x89)+(x93));
IkReal x117=((x95)+(x96));
op[0]=((((IkReal(-1.00000000000000))*(x115)))+(x112));
op[1]=x107;
op[2]=x104;
op[3]=x89;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x115)))+(((IkReal(-1.00000000000000))*(x84))));
op[5]=x100;
op[6]=x111;
op[7]=x105;
op[8]=x91;
op[9]=x106;
op[10]=x109;
op[11]=x92;
op[12]=x108;
op[13]=((x112)+(x85)+(((IkReal(-1.00000000000000))*(x86))));
op[14]=x89;
op[15]=x104;
op[16]=x103;
op[17]=((IkReal(-0.0350000000000000))+(x85)+(((IkReal(-1.00000000000000))*(x84)))+(((IkReal(-1.00000000000000))*(x86))));
op[18]=x105;
op[19]=x114;
op[20]=x106;
op[21]=x91;
op[22]=x92;
op[23]=x101;
op[24]=((IkReal(-0.0108000000000000))+(x116));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((IkReal(-0.0108000000000000))+(x93)+(((IkReal(-1.00000000000000))*(x89))));
op[29]=IkReal(0);
op[30]=((x96)+(((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x95))));
op[31]=IkReal(0);
op[32]=((x98)+(x97));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x117)))+(x94));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((IkReal(0.0108000000000000))+(x93)+(((IkReal(-1.00000000000000))*(x89))));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((IkReal(0.0108000000000000))+(x116));
op[42]=IkReal(0);
op[43]=((x94)+(x96)+(((IkReal(-1.00000000000000))*(x95))));
op[44]=IkReal(0);
op[45]=((x97)+(((IkReal(-1.00000000000000))*(x98))));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x117)))+(((IkReal(-1.00000000000000))*(x94))));
op[48]=((x113)+(((IkReal(-1.00000000000000))*(x99)))+(((IkReal(-1.00000000000000))*(x86))));
op[49]=x107;
op[50]=x102;
op[51]=x89;
op[52]=((x113)+(x99)+(((IkReal(-1.00000000000000))*(x86))));
op[53]=x100;
op[54]=x101;
op[55]=x105;
op[56]=x110;
op[57]=x106;
op[58]=x114;
op[59]=x92;
op[60]=x108;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x115)))+(((IkReal(-1.00000000000000))*(x99))));
op[62]=x89;
op[63]=x102;
op[64]=x103;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x115)))+(x99));
op[66]=x105;
op[67]=x109;
op[68]=x106;
op[69]=x110;
op[70]=x92;
op[71]=x111;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j7array[16], cj7array[16], sj7array[16], j8array[16], cj8array[16], sj8array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij7 = 0; ij7 < numroots; ij7 += 3)
{
IkReal htj7 = zeror[ij7+0], htj8 = zeror[ij7+1], htj6 = zeror[ij7+2];
j7array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj7)));
j8array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj8)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x118=(htj7)*(htj7);
IkReal x119=(htj8)*(htj8);
IkReal x120=(htj6)*(htj6);
cj7array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x118))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x118)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x118))))));
cj8array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x119))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x119)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x119))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x120))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x120)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x120))))));
sj7array[numsolutions]=((IkReal(2.00000000000000))*(htj7)*(((IKabs(((IkReal(1.00000000000000))+((htj7)*(htj7)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj7)*(htj7))))):(IkReal)1.0e30)));
sj8array[numsolutions]=((IkReal(2.00000000000000))*(htj8)*(((IKabs(((IkReal(1.00000000000000))+((htj8)*(htj8)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj8)*(htj8))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
if( j8array[numsolutions] > IKPI )
{
    j8array[numsolutions]-=IK2PI;
}
else if( j8array[numsolutions] < -IKPI )
{
    j8array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j7valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj7 = 16;
_nj8 = 1;
_nj6 = 1;
for(int ij7 = 0; ij7 < numsolutions; ++ij7)
    {
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
_ij8[0] = 0; _ij8[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij7 = ij7+1; iij7 < numsolutions; ++iij7)
{
if( !j7valid[iij7] ) { continue; }
if( IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj8array[ij7]-cj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij7]-sj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij7]-cj6array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij7]-sj6array[iij7]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j7valid[iij7]=false; _ij7[1] = iij7; _ij8[1] = 0; _ij6[1] = 0;  break; 
}
}
    j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

    j8 = j8array[ij7]; cj8 = cj8array[ij7]; sj8 = sj8array[ij7];

    j6 = j6array[ij7]; cj6 = cj6array[ij7]; sj6 = sj6array[ij7];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x121=(sj8)*(sj8);
IkReal x122=(cj8)*(cj8);
IkReal x123=((r00)*(r11));
IkReal x124=((r02)*(sj7));
IkReal x125=((cj7)*(x122));
IkReal x126=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x127=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x128=((cj7)*(x121));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x126)))+(((r10)*(sj8)*(x124)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x126)))+(((x123)*(x125)))+(((x123)*(x128)))+(((IkReal(-1.00000000000000))*(x125)*(x127)))+(((cj8)*(r11)*(x124)))+(((IkReal(-1.00000000000000))*(x127)*(x128)))));
IkReal x129=(sj8)*(sj8);
IkReal x130=(cj8)*(cj8);
IkReal x131=((r00)*(r11));
IkReal x132=((r02)*(sj7));
IkReal x133=((cj7)*(x130));
IkReal x134=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x135=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x136=((cj7)*(x129));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x135)*(x136)))+(((r10)*(sj8)*(x132)))+(((IkReal(-1.00000000000000))*(x133)*(x135)))+(((x131)*(x133)))+(((x131)*(x136)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x134)))+(((cj8)*(r11)*(x132)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x134))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x137=(sj8)*(sj8);
IkReal x138=(cj8)*(cj8);
IkReal x139=((IkReal(1.00000000000000))*(r10));
IkReal x140=((cj7)*(sj8));
IkReal x141=((r00)*(r11));
IkReal x142=((cj7)*(cj8));
IkReal x143=((sj7)*(x137));
IkReal x144=((sj7)*(x138));
gconst1=IKsign(((((r01)*(r12)*(x142)))+(((IkReal(-1.00000000000000))*(r02)*(x139)*(x140)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x142)))+(((x141)*(x144)))+(((x141)*(x143)))+(((r00)*(r12)*(x140)))+(((IkReal(-1.00000000000000))*(r01)*(x139)*(x143)))+(((IkReal(-1.00000000000000))*(r01)*(x139)*(x144)))));
IkReal x145=(sj8)*(sj8);
IkReal x146=(cj8)*(cj8);
IkReal x147=((IkReal(1.00000000000000))*(r10));
IkReal x148=((cj7)*(sj8));
IkReal x149=((r00)*(r11));
IkReal x150=((cj7)*(cj8));
IkReal x151=((sj7)*(x145));
IkReal x152=((sj7)*(x146));
dummyeval[0]=((((x149)*(x152)))+(((x149)*(x151)))+(((IkReal(-1.00000000000000))*(r02)*(x147)*(x148)))+(((IkReal(-1.00000000000000))*(r01)*(x147)*(x152)))+(((IkReal(-1.00000000000000))*(r01)*(x147)*(x151)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x150)))+(((r00)*(r12)*(x148)))+(((r01)*(r12)*(x150))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x153=((IkReal(4.00000000000000))*(sj7));
IkReal x154=((npy)*(sj8));
IkReal x155=((IkReal(4.00000000000000))*(cj7));
IkReal x156=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((x153)*(x154)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x153)*(x156)))+(((npz)*(x155))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x154)*(x155)))+(((x155)*(x156)))+(((npz)*(x153)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x153)*(x154)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x153)*(x156)))+(((npz)*(x155)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x154)*(x155)))+(((x155)*(x156)))+(((npz)*(x153)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((x153)*(x154)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x153)*(x156)))+(((npz)*(x155)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x154)*(x155)))+(((x155)*(x156)))+(((npz)*(x153)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x157=((IkReal(1.00000000000000))*(sj7));
IkReal x158=((npy)*(sj8));
IkReal x159=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((cj7)*(x158)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x157)))+(((IkReal(-1.00000000000000))*(cj7)*(x159)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x157)*(x159)))+(((sj7)*(x158)))+(((IkReal(-0.250000000000000))*(IKsin(j5))))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x160=(sj8)*(sj8);
IkReal x161=(cj8)*(cj8);
IkReal x162=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst66=IKsign(((((x160)*((r00)*(r00))))+(((x161)*((r01)*(r01))))+(((x160)*((r10)*(r10))))+(((x161)*((r11)*(r11))))+(((r10)*(r11)*(x162)))+(((r00)*(r01)*(x162)))));
IkReal x163=(sj8)*(sj8);
IkReal x164=(cj8)*(cj8);
IkReal x165=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x164)*((r01)*(r01))))+(((x163)*((r00)*(r00))))+(((x164)*((r11)*(r11))))+(((x163)*((r10)*(r10))))+(((r10)*(r11)*(x165)))+(((r00)*(r01)*(x165))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x166=(sj8)*(sj8);
IkReal x167=(cj8)*(cj8);
IkReal x168=((r00)*(r11));
IkReal x169=((r02)*(sj7));
IkReal x170=((cj7)*(x167));
IkReal x171=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x172=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x173=((cj7)*(x166));
gconst67=IKsign(((((cj8)*(r11)*(x169)))+(((x168)*(x173)))+(((x168)*(x170)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x171)))+(((IkReal(-1.00000000000000))*(x170)*(x172)))+(((r10)*(sj8)*(x169)))+(((IkReal(-1.00000000000000))*(x172)*(x173)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x171)))));
IkReal x174=(sj8)*(sj8);
IkReal x175=(cj8)*(cj8);
IkReal x176=((r00)*(r11));
IkReal x177=((r02)*(sj7));
IkReal x178=((cj7)*(x175));
IkReal x179=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x180=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x181=((cj7)*(x174));
dummyeval[0]=((((cj8)*(r11)*(x177)))+(((IkReal(-1.00000000000000))*(x178)*(x180)))+(((x176)*(x181)))+(((x176)*(x178)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x179)))+(((IkReal(-1.00000000000000))*(x180)*(x181)))+(((r10)*(sj8)*(x177)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x179))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x182=((cj7)*(cj8));
IkReal x183=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(r11)*(x183)))+(((r12)*(sj7)))+(((r10)*(x182))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(r01)*(x183)))+(((r00)*(x182)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst67)*(((((IkReal(-1.00000000000000))*(r11)*(x183)))+(((r12)*(sj7)))+(((r10)*(x182)))))), ((gconst67)*(((((IkReal(-1.00000000000000))*(r01)*(x183)))+(((r00)*(x182)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x184=IKsin(j3);
IkReal x185=IKcos(j3);
IkReal x186=((IkReal(1.00000000000000))*(sj8));
IkReal x187=((IkReal(1.00000000000000))*(cj8));
IkReal x188=((r01)*(sj8));
IkReal x189=((cj8)*(r10));
IkReal x190=((sj7)*(x185));
IkReal x191=((cj7)*(x184));
IkReal x192=((r00)*(x184));
IkReal x193=((sj7)*(x184));
IkReal x194=((cj7)*(x185));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x185)*(x186)))+(((sj8)*(x192)))+(((cj8)*(r01)*(x184)))+(((IkReal(-1.00000000000000))*(r11)*(x185)*(x187))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x185)*(x186)))+(((IkReal(-1.00000000000000))*(r10)*(x184)*(x186)))+(((IkReal(-1.00000000000000))*(r11)*(x184)*(x187)))+(((IkReal(-1.00000000000000))*(r01)*(x185)*(x187))));
evalcond[2]=((((x188)*(x191)))+(((x189)*(x194)))+(((r12)*(x190)))+(((IkReal(-1.00000000000000))*(r11)*(x186)*(x194)))+(((IkReal(-1.00000000000000))*(r00)*(x187)*(x191)))+(((IkReal(-1.00000000000000))*(r02)*(x193))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x194)))+(((x188)*(x193)))+(((x189)*(x190)))+(((IkReal(-1.00000000000000))*(sj7)*(x187)*(x192)))+(((IkReal(-1.00000000000000))*(r11)*(x186)*(x190)))+(((r02)*(x191))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x195=((cj3)*(cj5));
IkReal x196=((r02)*(sj7));
IkReal x197=((cj8)*(r00));
IkReal x198=((r22)*(sj7));
IkReal x199=((cj5)*(sj3));
IkReal x200=((cj7)*(cj8));
IkReal x201=((IkReal(1.00000000000000))*(sj5));
IkReal x202=((sj3)*(sj5));
IkReal x203=((r12)*(sj7));
IkReal x204=((cj3)*(cj7)*(sj5));
IkReal x205=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x200)*(x201)))+(((IkReal(-1.00000000000000))*(r11)*(x199)*(x205)))+(((x195)*(x196)))+(((IkReal(-1.00000000000000))*(x198)*(x201)))+(((IkReal(-1.00000000000000))*(r01)*(x195)*(x205)))+(((cj7)*(x195)*(x197)))+(((r10)*(x199)*(x200)))+(((x199)*(x203))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((cj5)*(x198)))+(((r10)*(x200)*(x202)))+(((cj3)*(sj5)*(x196)))+(((cj5)*(r20)*(x200)))+(((x197)*(x204)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x201)))+(((x202)*(x203)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x201)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x205))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x200)*(x201)))+(((IkReal(-1.00000000000000))*(r11)*(x199)*(x205)))+(((x195)*(x196)))+(((IkReal(-1.00000000000000))*(x198)*(x201)))+(((IkReal(-1.00000000000000))*(r01)*(x195)*(x205)))+(((cj7)*(x195)*(x197)))+(((r10)*(x199)*(x200)))+(((x199)*(x203)))))), ((gconst70)*(((((cj5)*(x198)))+(((r10)*(x200)*(x202)))+(((cj3)*(sj5)*(x196)))+(((cj5)*(r20)*(x200)))+(((x197)*(x204)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x201)))+(((x202)*(x203)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x201)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x205)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x206=IKcos(j4);
IkReal x207=IKsin(j4);
IkReal x208=((IkReal(1.00000000000000))*(cj7));
IkReal x209=((cj8)*(r20));
IkReal x210=((cj3)*(r02));
IkReal x211=((IkReal(1.00000000000000))*(sj7));
IkReal x212=((sj3)*(sj7));
IkReal x213=((r21)*(sj8));
IkReal x214=((cj8)*(r10));
IkReal x215=((sj5)*(x206));
IkReal x216=((cj5)*(x207));
IkReal x217=((r11)*(sj3)*(sj8));
IkReal x218=((cj3)*(cj8)*(r00));
IkReal x219=((cj5)*(x206));
IkReal x220=((cj3)*(r01)*(sj8));
IkReal x221=((sj5)*(x207));
IkReal x222=((x215)+(x216));
evalcond[0]=((((cj7)*(x213)))+(((IkReal(-1.00000000000000))*(r22)*(x211)))+(((IkReal(-1.00000000000000))*(x208)*(x209)))+(x221)+(((IkReal(-1.00000000000000))*(x219))));
evalcond[1]=((x222)+(((sj7)*(x213)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x209)*(x211))));
evalcond[2]=((((cj7)*(sj3)*(x214)))+(((cj7)*(x218)))+(((r12)*(x212)))+(((IkReal(-1.00000000000000))*(x208)*(x220)))+(x222)+(((sj7)*(x210)))+(((IkReal(-1.00000000000000))*(x208)*(x217))));
evalcond[3]=((x219)+(((sj7)*(x218)))+(((x212)*(x214)))+(((IkReal(-1.00000000000000))*(x211)*(x217)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x208)))+(((IkReal(-1.00000000000000))*(x211)*(x220)))+(((IkReal(-1.00000000000000))*(x208)*(x210)))+(((IkReal(-1.00000000000000))*(x221))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x223=((r21)*(sj8));
IkReal x224=((sj5)*(sj7));
IkReal x225=((cj5)*(sj7));
IkReal x226=((cj5)*(cj7));
IkReal x227=((cj8)*(r20));
IkReal x228=((cj7)*(sj5));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x224)))+(((x223)*(x225)))+(((x223)*(x228)))+(((IkReal(-1.00000000000000))*(x225)*(x227)))+(((IkReal(-1.00000000000000))*(x227)*(x228)))+(((r22)*(x226))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((x223)*(x224)))+(((x226)*(x227)))+(((IkReal(-1.00000000000000))*(x224)*(x227)))+(((r22)*(x228)))+(((r22)*(x225)))+(((IkReal(-1.00000000000000))*(x223)*(x226))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x224)))+(((x223)*(x225)))+(((x223)*(x228)))+(((IkReal(-1.00000000000000))*(x225)*(x227)))+(((IkReal(-1.00000000000000))*(x227)*(x228)))+(((r22)*(x226)))))), ((gconst69)*(((((x223)*(x224)))+(((x226)*(x227)))+(((IkReal(-1.00000000000000))*(x224)*(x227)))+(((r22)*(x228)))+(((r22)*(x225)))+(((IkReal(-1.00000000000000))*(x223)*(x226)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x229=IKcos(j4);
IkReal x230=IKsin(j4);
IkReal x231=((IkReal(1.00000000000000))*(cj7));
IkReal x232=((cj8)*(r20));
IkReal x233=((cj3)*(r02));
IkReal x234=((IkReal(1.00000000000000))*(sj7));
IkReal x235=((sj3)*(sj7));
IkReal x236=((r21)*(sj8));
IkReal x237=((cj8)*(r10));
IkReal x238=((sj5)*(x229));
IkReal x239=((cj5)*(x230));
IkReal x240=((r11)*(sj3)*(sj8));
IkReal x241=((cj3)*(cj8)*(r00));
IkReal x242=((cj5)*(x229));
IkReal x243=((cj3)*(r01)*(sj8));
IkReal x244=((sj5)*(x230));
IkReal x245=((x238)+(x239));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x234)))+(((IkReal(-1.00000000000000))*(x242)))+(x244)+(((IkReal(-1.00000000000000))*(x231)*(x232)))+(((cj7)*(x236))));
evalcond[1]=((x245)+(((IkReal(-1.00000000000000))*(x232)*(x234)))+(((cj7)*(r22)))+(((sj7)*(x236))));
evalcond[2]=((((cj7)*(x241)))+(((IkReal(-1.00000000000000))*(x231)*(x243)))+(((IkReal(-1.00000000000000))*(x231)*(x240)))+(x245)+(((cj7)*(sj3)*(x237)))+(((sj7)*(x233)))+(((r12)*(x235))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x244)))+(((IkReal(-1.00000000000000))*(x234)*(x240)))+(((IkReal(-1.00000000000000))*(x234)*(x243)))+(x242)+(((x235)*(x237)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x231)))+(((IkReal(-1.00000000000000))*(x231)*(x233)))+(((sj7)*(x241))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x246=((sj5)*(sj7));
IkReal x247=((r21)*(sj8));
IkReal x248=((cj5)*(sj7));
IkReal x249=((cj8)*(r20));
IkReal x250=((cj5)*(cj7));
IkReal x251=((cj7)*(sj5));
if( IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x249)*(x251)))+(((IkReal(-1.00000000000000))*(x248)*(x249)))+(((r22)*(x250)))+(((x247)*(x248)))+(((IkReal(-1.00000000000000))*(r22)*(x246)))+(((x247)*(x251))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((x249)*(x250)))+(((r22)*(x248)))+(((IkReal(-1.00000000000000))*(x247)*(x250)))+(((IkReal(-1.00000000000000))*(x246)*(x249)))+(((r22)*(x251)))+(((x246)*(x247))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst68)*(((((IkReal(-1.00000000000000))*(x249)*(x251)))+(((IkReal(-1.00000000000000))*(x248)*(x249)))+(((r22)*(x250)))+(((x247)*(x248)))+(((IkReal(-1.00000000000000))*(r22)*(x246)))+(((x247)*(x251)))))), ((gconst68)*(((((x249)*(x250)))+(((r22)*(x248)))+(((IkReal(-1.00000000000000))*(x247)*(x250)))+(((IkReal(-1.00000000000000))*(x246)*(x249)))+(((r22)*(x251)))+(((x246)*(x247)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x252=IKcos(j4);
IkReal x253=IKsin(j4);
IkReal x254=((r21)*(sj8));
IkReal x255=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj7)*(x255)))+(((IkReal(-1.00000000000000))*(cj5)*(x252)))+(((cj7)*(x254)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x253))));
evalcond[1]=((((sj7)*(x254)))+(((IkReal(-1.00000000000000))*(sj7)*(x255)))+(((cj5)*(x253)))+(((sj5)*(x252)))+(((cj7)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x256=(sj8)*(sj8);
IkReal x257=(cj8)*(cj8);
IkReal x258=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst71=IKsign(((((r10)*(r11)*(x258)))+(((x256)*((r10)*(r10))))+(((x257)*((r11)*(r11))))+(((r00)*(r01)*(x258)))+(((x257)*((r01)*(r01))))+(((x256)*((r00)*(r00))))));
IkReal x259=(sj8)*(sj8);
IkReal x260=(cj8)*(cj8);
IkReal x261=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r00)*(r01)*(x261)))+(((x260)*((r01)*(r01))))+(((x260)*((r11)*(r11))))+(((x259)*((r10)*(r10))))+(((x259)*((r00)*(r00))))+(((r10)*(r11)*(x261))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x262=(sj8)*(sj8);
IkReal x263=(cj8)*(cj8);
IkReal x264=((r00)*(r11));
IkReal x265=((r02)*(sj7));
IkReal x266=((cj7)*(x263));
IkReal x267=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x268=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x269=((cj7)*(x262));
gconst72=IKsign(((((r10)*(sj8)*(x265)))+(((x264)*(x269)))+(((x264)*(x266)))+(((IkReal(-1.00000000000000))*(x268)*(x269)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x267)))+(((cj8)*(r11)*(x265)))+(((IkReal(-1.00000000000000))*(x266)*(x268)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x267)))));
IkReal x270=(sj8)*(sj8);
IkReal x271=(cj8)*(cj8);
IkReal x272=((r00)*(r11));
IkReal x273=((r02)*(sj7));
IkReal x274=((cj7)*(x271));
IkReal x275=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x276=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x277=((cj7)*(x270));
dummyeval[0]=((((x272)*(x274)))+(((x272)*(x277)))+(((IkReal(-1.00000000000000))*(x274)*(x276)))+(((r10)*(sj8)*(x273)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x275)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x275)))+(((cj8)*(r11)*(x273)))+(((IkReal(-1.00000000000000))*(x276)*(x277))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x278=((cj7)*(cj8));
IkReal x279=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r11)*(x279)))+(((r12)*(sj7)))+(((r10)*(x278))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x279)))+(((r00)*(x278))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst72)*(((((IkReal(-1.00000000000000))*(r11)*(x279)))+(((r12)*(sj7)))+(((r10)*(x278)))))), ((gconst72)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x279)))+(((r00)*(x278)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x280=IKsin(j3);
IkReal x281=IKcos(j3);
IkReal x282=((r01)*(sj8));
IkReal x283=((cj8)*(r00));
IkReal x284=((r00)*(sj8));
IkReal x285=((cj8)*(r11));
IkReal x286=((r11)*(sj8));
IkReal x287=((r10)*(sj8));
IkReal x288=((cj8)*(r10));
IkReal x289=((cj7)*(x280));
IkReal x290=((sj7)*(x281));
IkReal x291=((IkReal(1.00000000000000))*(x280));
IkReal x292=((IkReal(1.00000000000000))*(x281));
IkReal x293=((cj8)*(x280));
IkReal x294=((IkReal(1.00000000000000))*(x286));
IkReal x295=((sj7)*(x280));
IkReal x296=((cj7)*(x281));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x285)*(x292)))+(((r01)*(x293)))+(((IkReal(-1.00000000000000))*(x287)*(x292)))+(((x280)*(x284))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x284)*(x292)))+(((IkReal(-1.00000000000000))*(x285)*(x291)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x292)))+(((IkReal(-1.00000000000000))*(x287)*(x291))));
evalcond[2]=((((r12)*(x290)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x291)))+(((IkReal(-1.00000000000000))*(x283)*(x289)))+(((x282)*(x289)))+(((x288)*(x296)))+(((IkReal(-1.00000000000000))*(cj7)*(x286)*(x292))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x292)))+(((IkReal(-1.00000000000000))*(x290)*(x294)))+(((IkReal(-1.00000000000000))*(sj7)*(x283)*(x291)))+(((x282)*(x295)))+(((r02)*(x289)))+(((x288)*(x290))));
evalcond[4]=((((r12)*(x295)))+(((IkReal(-1.00000000000000))*(cj7)*(x282)*(x292)))+(((IkReal(-1.00000000000000))*(x289)*(x294)))+(((x283)*(x296)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((x288)*(x289)))+(((r02)*(x290))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x289)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x292)))+(((x283)*(x290)))+(((IkReal(-1.00000000000000))*(x282)*(x290)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(sj7)*(x286)*(x291)))+(((x288)*(x295))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst71)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x297=IKsin(j3);
IkReal x298=IKcos(j3);
IkReal x299=((r01)*(sj8));
IkReal x300=((cj8)*(r00));
IkReal x301=((r00)*(sj8));
IkReal x302=((cj8)*(r11));
IkReal x303=((r11)*(sj8));
IkReal x304=((r10)*(sj8));
IkReal x305=((cj8)*(r10));
IkReal x306=((cj7)*(x297));
IkReal x307=((sj7)*(x298));
IkReal x308=((IkReal(1.00000000000000))*(x297));
IkReal x309=((IkReal(1.00000000000000))*(x298));
IkReal x310=((cj8)*(x297));
IkReal x311=((IkReal(1.00000000000000))*(x303));
IkReal x312=((sj7)*(x297));
IkReal x313=((cj7)*(x298));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x302)*(x309)))+(((r01)*(x310)))+(((x297)*(x301)))+(((IkReal(-1.00000000000000))*(x304)*(x309))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x301)*(x309)))+(((IkReal(-1.00000000000000))*(x302)*(x308)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x309)))+(((IkReal(-1.00000000000000))*(x304)*(x308))));
evalcond[2]=((((x305)*(x313)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x308)))+(((IkReal(-1.00000000000000))*(cj7)*(x303)*(x309)))+(((x299)*(x306)))+(((IkReal(-1.00000000000000))*(x300)*(x306)))+(((r12)*(x307))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x300)*(x308)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x309)))+(((x299)*(x312)))+(((r02)*(x306)))+(((x305)*(x307)))+(((IkReal(-1.00000000000000))*(x307)*(x311))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x299)*(x309)))+(((x300)*(x313)))+(((cj5)*(sj4)))+(((r02)*(x307)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x306)*(x311)))+(((x305)*(x306)))+(((r12)*(x312))));
evalcond[5]=((((x305)*(x312)))+(((IkReal(-1.00000000000000))*(r12)*(x306)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x309)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(x299)*(x307)))+(((IkReal(-1.00000000000000))*(sj7)*(x303)*(x308)))+(((x300)*(x307)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst66)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x314=IKsin(j3);
IkReal x315=IKcos(j3);
IkReal x316=((IkReal(1.00000000000000))*(sj8));
IkReal x317=((IkReal(1.00000000000000))*(cj8));
IkReal x318=((r01)*(sj8));
IkReal x319=((cj8)*(r10));
IkReal x320=((sj7)*(x315));
IkReal x321=((cj7)*(x314));
IkReal x322=((r00)*(x314));
IkReal x323=((sj7)*(x314));
IkReal x324=((cj7)*(x315));
evalcond[0]=((IkReal(1.00000000000000))+(((cj8)*(r01)*(x314)))+(((IkReal(-1.00000000000000))*(r11)*(x315)*(x317)))+(((IkReal(-1.00000000000000))*(r10)*(x315)*(x316)))+(((sj8)*(x322))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x314)*(x316)))+(((IkReal(-1.00000000000000))*(r01)*(x315)*(x317)))+(((IkReal(-1.00000000000000))*(r11)*(x314)*(x317)))+(((IkReal(-1.00000000000000))*(r00)*(x315)*(x316))));
evalcond[2]=((((x318)*(x321)))+(((r12)*(x320)))+(((IkReal(-1.00000000000000))*(r00)*(x317)*(x321)))+(((IkReal(-1.00000000000000))*(r02)*(x323)))+(((IkReal(-1.00000000000000))*(r11)*(x316)*(x324)))+(((x319)*(x324))));
evalcond[3]=((((x318)*(x323)))+(((r02)*(x321)))+(((IkReal(-1.00000000000000))*(r12)*(x324)))+(((IkReal(-1.00000000000000))*(sj7)*(x317)*(x322)))+(((IkReal(-1.00000000000000))*(r11)*(x316)*(x320)))+(((x319)*(x320))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x325=((cj3)*(cj5));
IkReal x326=((r02)*(sj7));
IkReal x327=((cj8)*(r00));
IkReal x328=((r22)*(sj7));
IkReal x329=((cj5)*(sj3));
IkReal x330=((cj7)*(cj8));
IkReal x331=((IkReal(1.00000000000000))*(sj5));
IkReal x332=((sj3)*(sj5));
IkReal x333=((r12)*(sj7));
IkReal x334=((cj3)*(cj7)*(sj5));
IkReal x335=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((x325)*(x326)))+(((cj7)*(x325)*(x327)))+(((IkReal(-1.00000000000000))*(x328)*(x331)))+(((x329)*(x333)))+(((r10)*(x329)*(x330)))+(((IkReal(-1.00000000000000))*(r01)*(x325)*(x335)))+(((IkReal(-1.00000000000000))*(r11)*(x329)*(x335)))+(((IkReal(-1.00000000000000))*(r20)*(x330)*(x331))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x335)))+(((x332)*(x333)))+(((cj5)*(x328)))+(((x327)*(x334)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x331)))+(((cj3)*(sj5)*(x326)))+(((cj5)*(r20)*(x330)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x331)))+(((r10)*(x330)*(x332))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((x325)*(x326)))+(((cj7)*(x325)*(x327)))+(((IkReal(-1.00000000000000))*(x328)*(x331)))+(((x329)*(x333)))+(((r10)*(x329)*(x330)))+(((IkReal(-1.00000000000000))*(r01)*(x325)*(x335)))+(((IkReal(-1.00000000000000))*(r11)*(x329)*(x335)))+(((IkReal(-1.00000000000000))*(r20)*(x330)*(x331)))))), ((gconst70)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x335)))+(((x332)*(x333)))+(((cj5)*(x328)))+(((x327)*(x334)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x331)))+(((cj3)*(sj5)*(x326)))+(((cj5)*(r20)*(x330)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x331)))+(((r10)*(x330)*(x332)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x336=IKcos(j4);
IkReal x337=IKsin(j4);
IkReal x338=((IkReal(1.00000000000000))*(cj7));
IkReal x339=((cj8)*(r20));
IkReal x340=((cj3)*(r02));
IkReal x341=((IkReal(1.00000000000000))*(sj7));
IkReal x342=((sj3)*(sj7));
IkReal x343=((r21)*(sj8));
IkReal x344=((cj8)*(r10));
IkReal x345=((sj5)*(x336));
IkReal x346=((cj5)*(x337));
IkReal x347=((r11)*(sj3)*(sj8));
IkReal x348=((cj3)*(cj8)*(r00));
IkReal x349=((cj5)*(x336));
IkReal x350=((cj3)*(r01)*(sj8));
IkReal x351=((sj5)*(x337));
IkReal x352=((x346)+(x345));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x341)))+(((IkReal(-1.00000000000000))*(x338)*(x339)))+(x351)+(((cj7)*(x343)))+(((IkReal(-1.00000000000000))*(x349))));
evalcond[1]=((x352)+(((sj7)*(x343)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x339)*(x341))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x338)*(x350)))+(x352)+(((cj7)*(sj3)*(x344)))+(((cj7)*(x348)))+(((sj7)*(x340)))+(((IkReal(-1.00000000000000))*(x338)*(x347)))+(((r12)*(x342))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x341)*(x350)))+(((IkReal(-1.00000000000000))*(x351)))+(x349)+(((IkReal(-1.00000000000000))*(x341)*(x347)))+(((sj7)*(x348)))+(((IkReal(-1.00000000000000))*(x338)*(x340)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x338)))+(((x342)*(x344))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x353=((r21)*(sj8));
IkReal x354=((sj5)*(sj7));
IkReal x355=((cj5)*(sj7));
IkReal x356=((cj5)*(cj7));
IkReal x357=((cj8)*(r20));
IkReal x358=((cj7)*(sj5));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x354)))+(((IkReal(-1.00000000000000))*(x357)*(x358)))+(((x353)*(x358)))+(((x353)*(x355)))+(((r22)*(x356)))+(((IkReal(-1.00000000000000))*(x355)*(x357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((x356)*(x357)))+(((IkReal(-1.00000000000000))*(x353)*(x356)))+(((x353)*(x354)))+(((r22)*(x355)))+(((r22)*(x358)))+(((IkReal(-1.00000000000000))*(x354)*(x357))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x354)))+(((IkReal(-1.00000000000000))*(x357)*(x358)))+(((x353)*(x358)))+(((x353)*(x355)))+(((r22)*(x356)))+(((IkReal(-1.00000000000000))*(x355)*(x357)))))), ((gconst69)*(((((x356)*(x357)))+(((IkReal(-1.00000000000000))*(x353)*(x356)))+(((x353)*(x354)))+(((r22)*(x355)))+(((r22)*(x358)))+(((IkReal(-1.00000000000000))*(x354)*(x357)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x359=IKcos(j4);
IkReal x360=IKsin(j4);
IkReal x361=((IkReal(1.00000000000000))*(cj7));
IkReal x362=((cj8)*(r20));
IkReal x363=((cj3)*(r02));
IkReal x364=((IkReal(1.00000000000000))*(sj7));
IkReal x365=((sj3)*(sj7));
IkReal x366=((r21)*(sj8));
IkReal x367=((cj8)*(r10));
IkReal x368=((sj5)*(x359));
IkReal x369=((cj5)*(x360));
IkReal x370=((r11)*(sj3)*(sj8));
IkReal x371=((cj3)*(cj8)*(r00));
IkReal x372=((cj5)*(x359));
IkReal x373=((cj3)*(r01)*(sj8));
IkReal x374=((sj5)*(x360));
IkReal x375=((x368)+(x369));
evalcond[0]=((((cj7)*(x366)))+(((IkReal(-1.00000000000000))*(x372)))+(((IkReal(-1.00000000000000))*(x361)*(x362)))+(x374)+(((IkReal(-1.00000000000000))*(r22)*(x364))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x362)*(x364)))+(x375)+(((sj7)*(x366)))+(((cj7)*(r22))));
evalcond[2]=((((cj7)*(x371)))+(((IkReal(-1.00000000000000))*(x361)*(x373)))+(((IkReal(-1.00000000000000))*(x361)*(x370)))+(x375)+(((r12)*(x365)))+(((sj7)*(x363)))+(((cj7)*(sj3)*(x367))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x374)))+(((IkReal(-1.00000000000000))*(x361)*(x363)))+(((x365)*(x367)))+(x372)+(((sj7)*(x371)))+(((IkReal(-1.00000000000000))*(x364)*(x370)))+(((IkReal(-1.00000000000000))*(x364)*(x373)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x361))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x376=((IkReal(4.00000000000000))*(sj7));
IkReal x377=((npy)*(sj8));
IkReal x378=((IkReal(4.00000000000000))*(cj7));
IkReal x379=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-0.360000000000000))*(sj7)))+(((x376)*(x379)))+(((IkReal(-1.00000000000000))*(x376)*(x377)))+(((IkReal(-1.00000000000000))*(npz)*(x378))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x376)))+(((IkReal(-1.00000000000000))*(x377)*(x378)))+(((x378)*(x379)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-0.360000000000000))*(sj7)))+(((x376)*(x379)))+(((IkReal(-1.00000000000000))*(x376)*(x377)))+(((IkReal(-1.00000000000000))*(npz)*(x378)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x376)))+(((IkReal(-1.00000000000000))*(x377)*(x378)))+(((x378)*(x379)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-0.360000000000000))*(sj7)))+(((x376)*(x379)))+(((IkReal(-1.00000000000000))*(x376)*(x377)))+(((IkReal(-1.00000000000000))*(npz)*(x378)))), ((IkReal(-0.940000000000000))+(((npz)*(x376)))+(((IkReal(-1.00000000000000))*(x377)*(x378)))+(((x378)*(x379)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x380=((IkReal(1.00000000000000))*(sj7));
IkReal x381=((npy)*(sj8));
IkReal x382=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x380)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x381)))+(((IkReal(-1.00000000000000))*(cj7)*(x382)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x380)*(x382)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((cj7)*(npz)))+(((sj7)*(x381))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x383=(cj8)*(cj8);
IkReal x384=(sj8)*(sj8);
IkReal x385=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x386=((IkReal(1.00000000000000))*(x383));
IkReal x387=((IkReal(1.00000000000000))*(x384));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(x387)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x386)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x385)))+(((IkReal(-1.00000000000000))*(x386)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x385)))+(((IkReal(-1.00000000000000))*(x387)*((r10)*(r10))))));
IkReal x388=(cj8)*(cj8);
IkReal x389=(sj8)*(sj8);
IkReal x390=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x391=((IkReal(1.00000000000000))*(x388));
IkReal x392=((IkReal(1.00000000000000))*(x389));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x392)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x390)))+(((IkReal(-1.00000000000000))*(x391)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x390)))+(((IkReal(-1.00000000000000))*(x391)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x392)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x393=(sj8)*(sj8);
IkReal x394=(cj8)*(cj8);
IkReal x395=((sj7)*(sj8));
IkReal x396=((IkReal(1.00000000000000))*(r02));
IkReal x397=((r01)*(r10));
IkReal x398=((cj8)*(sj7));
IkReal x399=((cj7)*(x393));
IkReal x400=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x401=((cj7)*(x394));
gconst76=IKsign(((((x397)*(x401)))+(((r01)*(r12)*(x398)))+(((IkReal(-1.00000000000000))*(x400)*(x401)))+(((r00)*(r12)*(x395)))+(((IkReal(-1.00000000000000))*(x399)*(x400)))+(((x397)*(x399)))+(((IkReal(-1.00000000000000))*(r10)*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(r11)*(x396)*(x398)))));
IkReal x402=(sj8)*(sj8);
IkReal x403=(cj8)*(cj8);
IkReal x404=((sj7)*(sj8));
IkReal x405=((IkReal(1.00000000000000))*(r02));
IkReal x406=((r01)*(r10));
IkReal x407=((cj8)*(sj7));
IkReal x408=((cj7)*(x402));
IkReal x409=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x410=((cj7)*(x403));
dummyeval[0]=((((r01)*(r12)*(x407)))+(((IkReal(-1.00000000000000))*(r10)*(x404)*(x405)))+(((IkReal(-1.00000000000000))*(r11)*(x405)*(x407)))+(((x406)*(x410)))+(((x406)*(x408)))+(((r00)*(r12)*(x404)))+(((IkReal(-1.00000000000000))*(x409)*(x410)))+(((IkReal(-1.00000000000000))*(x408)*(x409))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x411=((cj7)*(cj8));
IkReal x412=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst76)*(((((r12)*(sj7)))+(((r10)*(x411)))+(((IkReal(-1.00000000000000))*(r11)*(x412))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((r02)*(sj7)))+(((r00)*(x411)))+(((IkReal(-1.00000000000000))*(r01)*(x412))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst76)*(((((r12)*(sj7)))+(((r10)*(x411)))+(((IkReal(-1.00000000000000))*(r11)*(x412)))))), ((gconst76)*(((((r02)*(sj7)))+(((r00)*(x411)))+(((IkReal(-1.00000000000000))*(r01)*(x412)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x413=IKsin(j3);
IkReal x414=IKcos(j3);
IkReal x415=((IkReal(1.00000000000000))*(sj8));
IkReal x416=((IkReal(1.00000000000000))*(cj8));
IkReal x417=((r01)*(sj8));
IkReal x418=((cj8)*(r10));
IkReal x419=((sj7)*(x414));
IkReal x420=((cj7)*(x413));
IkReal x421=((r00)*(x413));
IkReal x422=((sj7)*(x413));
IkReal x423=((cj7)*(x414));
evalcond[0]=((IkReal(-1.00000000000000))+(((sj8)*(x421)))+(((IkReal(-1.00000000000000))*(r11)*(x414)*(x416)))+(((IkReal(-1.00000000000000))*(r10)*(x414)*(x415)))+(((cj8)*(r01)*(x413))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x413)*(x416)))+(((IkReal(-1.00000000000000))*(r01)*(x414)*(x416)))+(((IkReal(-1.00000000000000))*(r00)*(x414)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(x413)*(x415))));
evalcond[2]=((((r12)*(x419)))+(((IkReal(-1.00000000000000))*(r02)*(x422)))+(((IkReal(-1.00000000000000))*(r00)*(x416)*(x420)))+(((x418)*(x423)))+(((IkReal(-1.00000000000000))*(r11)*(x415)*(x423)))+(((x417)*(x420))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x423)))+(((IkReal(-1.00000000000000))*(sj7)*(x416)*(x421)))+(((r02)*(x420)))+(((IkReal(-1.00000000000000))*(r11)*(x415)*(x419)))+(((x418)*(x419)))+(((x417)*(x422))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x424=((cj3)*(cj5));
IkReal x425=((r02)*(sj7));
IkReal x426=((cj5)*(sj7));
IkReal x427=((cj3)*(sj5));
IkReal x428=((r11)*(sj3));
IkReal x429=((r10)*(sj3));
IkReal x430=((r12)*(sj3));
IkReal x431=((sj5)*(sj7));
IkReal x432=((cj7)*(cj8)*(sj5));
IkReal x433=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x434=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst79)*(((((x429)*(x434)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x432)))+(((x424)*(x425)))+(((x426)*(x430)))+(((IkReal(-1.00000000000000))*(r01)*(x424)*(x433)))+(((IkReal(-1.00000000000000))*(cj5)*(x428)*(x433)))+(((cj7)*(cj8)*(r00)*(x424)))+(((IkReal(-1.00000000000000))*(r22)*(x431))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((x429)*(x432)))+(((x425)*(x427)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x433)))+(((cj7)*(cj8)*(r00)*(x427)))+(((r22)*(x426)))+(((x430)*(x431)))+(((IkReal(-1.00000000000000))*(sj5)*(x428)*(x433)))+(((r20)*(x434)))+(((IkReal(-1.00000000000000))*(r01)*(x427)*(x433))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((x429)*(x434)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x432)))+(((x424)*(x425)))+(((x426)*(x430)))+(((IkReal(-1.00000000000000))*(r01)*(x424)*(x433)))+(((IkReal(-1.00000000000000))*(cj5)*(x428)*(x433)))+(((cj7)*(cj8)*(r00)*(x424)))+(((IkReal(-1.00000000000000))*(r22)*(x431)))))), ((gconst79)*(((((x429)*(x432)))+(((x425)*(x427)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x433)))+(((cj7)*(cj8)*(r00)*(x427)))+(((r22)*(x426)))+(((x430)*(x431)))+(((IkReal(-1.00000000000000))*(sj5)*(x428)*(x433)))+(((r20)*(x434)))+(((IkReal(-1.00000000000000))*(r01)*(x427)*(x433)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x435=IKcos(j4);
IkReal x436=IKsin(j4);
IkReal x437=((IkReal(1.00000000000000))*(cj7));
IkReal x438=((cj8)*(r20));
IkReal x439=((cj3)*(r02));
IkReal x440=((IkReal(1.00000000000000))*(sj7));
IkReal x441=((sj3)*(sj7));
IkReal x442=((r21)*(sj8));
IkReal x443=((IkReal(1.00000000000000))*(cj5));
IkReal x444=((cj8)*(r10));
IkReal x445=((sj5)*(x436));
IkReal x446=((sj5)*(x435));
IkReal x447=((r11)*(sj3)*(sj8));
IkReal x448=((cj3)*(cj8)*(r00));
IkReal x449=((cj3)*(r01)*(sj8));
IkReal x450=((x435)*(x443));
evalcond[0]=((((IkReal(-1.00000000000000))*(x437)*(x438)))+(((cj7)*(x442)))+(((IkReal(-1.00000000000000))*(x450)))+(x445)+(((IkReal(-1.00000000000000))*(r22)*(x440))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x438)*(x440)))+(((IkReal(-1.00000000000000))*(x446)))+(((sj7)*(x442)))+(((IkReal(-1.00000000000000))*(x436)*(x443)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x437)*(x447)))+(((IkReal(-1.00000000000000))*(x437)*(x449)))+(((sj7)*(x439)))+(((cj5)*(x436)))+(((cj7)*(sj3)*(x444)))+(((cj7)*(x448)))+(x446)+(((r12)*(x441))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x437)*(x439)))+(((sj7)*(x448)))+(((IkReal(-1.00000000000000))*(x450)))+(((x441)*(x444)))+(x445)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x437)))+(((IkReal(-1.00000000000000))*(x440)*(x447)))+(((IkReal(-1.00000000000000))*(x440)*(x449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x451=((cj7)*(sj5));
IkReal x452=((r21)*(sj8));
IkReal x453=((cj5)*(cj7));
IkReal x454=((cj8)*(r20));
IkReal x455=((sj5)*(sj7));
IkReal x456=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x454)*(x456)))+(((x451)*(x454)))+(((r22)*(x455)))+(((r22)*(x453)))+(((IkReal(-1.00000000000000))*(x451)*(x452)))+(((cj5)*(sj7)*(x452))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((x452)*(x453)))+(((x452)*(x455)))+(((IkReal(-1.00000000000000))*(x453)*(x454)))+(((IkReal(-1.00000000000000))*(r22)*(x456)))+(((IkReal(-1.00000000000000))*(x454)*(x455)))+(((r22)*(x451))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((IkReal(-1.00000000000000))*(x454)*(x456)))+(((x451)*(x454)))+(((r22)*(x455)))+(((r22)*(x453)))+(((IkReal(-1.00000000000000))*(x451)*(x452)))+(((cj5)*(sj7)*(x452)))))), ((gconst78)*(((((x452)*(x453)))+(((x452)*(x455)))+(((IkReal(-1.00000000000000))*(x453)*(x454)))+(((IkReal(-1.00000000000000))*(r22)*(x456)))+(((IkReal(-1.00000000000000))*(x454)*(x455)))+(((r22)*(x451)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x457=IKcos(j4);
IkReal x458=IKsin(j4);
IkReal x459=((IkReal(1.00000000000000))*(cj7));
IkReal x460=((cj8)*(r20));
IkReal x461=((cj3)*(r02));
IkReal x462=((IkReal(1.00000000000000))*(sj7));
IkReal x463=((sj3)*(sj7));
IkReal x464=((r21)*(sj8));
IkReal x465=((IkReal(1.00000000000000))*(cj5));
IkReal x466=((cj8)*(r10));
IkReal x467=((sj5)*(x458));
IkReal x468=((sj5)*(x457));
IkReal x469=((r11)*(sj3)*(sj8));
IkReal x470=((cj3)*(cj8)*(r00));
IkReal x471=((cj3)*(r01)*(sj8));
IkReal x472=((x457)*(x465));
evalcond[0]=((((IkReal(-1.00000000000000))*(x472)))+(((IkReal(-1.00000000000000))*(x459)*(x460)))+(x467)+(((IkReal(-1.00000000000000))*(r22)*(x462)))+(((cj7)*(x464))));
evalcond[1]=((((sj7)*(x464)))+(((IkReal(-1.00000000000000))*(x460)*(x462)))+(((IkReal(-1.00000000000000))*(x468)))+(((IkReal(-1.00000000000000))*(x458)*(x465)))+(((cj7)*(r22))));
evalcond[2]=((((cj5)*(x458)))+(((IkReal(-1.00000000000000))*(x459)*(x471)))+(((sj7)*(x461)))+(((IkReal(-1.00000000000000))*(x459)*(x469)))+(((cj7)*(sj3)*(x466)))+(((r12)*(x463)))+(x468)+(((cj7)*(x470))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x462)*(x471)))+(((IkReal(-1.00000000000000))*(x462)*(x469)))+(((x463)*(x466)))+(((IkReal(-1.00000000000000))*(x472)))+(((IkReal(-1.00000000000000))*(x459)*(x461)))+(x467)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x459)))+(((sj7)*(x470))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x473=((cj7)*(sj5));
IkReal x474=((r21)*(sj8));
IkReal x475=((cj5)*(cj7));
IkReal x476=((cj8)*(r20));
IkReal x477=((sj5)*(sj7));
IkReal x478=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst77)*(((((x473)*(x476)))+(((IkReal(-1.00000000000000))*(x476)*(x478)))+(((r22)*(x475)))+(((r22)*(x477)))+(((IkReal(-1.00000000000000))*(x473)*(x474)))+(((cj5)*(sj7)*(x474))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((IkReal(-1.00000000000000))*(x475)*(x476)))+(((IkReal(-1.00000000000000))*(x476)*(x477)))+(((IkReal(-1.00000000000000))*(r22)*(x478)))+(((x474)*(x477)))+(((x474)*(x475)))+(((r22)*(x473))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst77)*(((((x473)*(x476)))+(((IkReal(-1.00000000000000))*(x476)*(x478)))+(((r22)*(x475)))+(((r22)*(x477)))+(((IkReal(-1.00000000000000))*(x473)*(x474)))+(((cj5)*(sj7)*(x474)))))), ((gconst77)*(((((IkReal(-1.00000000000000))*(x475)*(x476)))+(((IkReal(-1.00000000000000))*(x476)*(x477)))+(((IkReal(-1.00000000000000))*(r22)*(x478)))+(((x474)*(x477)))+(((x474)*(x475)))+(((r22)*(x473)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x479=IKcos(j4);
IkReal x480=IKsin(j4);
IkReal x481=((IkReal(1.00000000000000))*(cj5));
IkReal x482=((r21)*(sj8));
IkReal x483=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((cj7)*(x482)))+(((IkReal(-1.00000000000000))*(x479)*(x481)))+(((sj5)*(x480)))+(((IkReal(-1.00000000000000))*(cj7)*(x483)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[1]=((((sj7)*(x482)))+(((IkReal(-1.00000000000000))*(sj5)*(x479)))+(((IkReal(-1.00000000000000))*(sj7)*(x483)))+(((IkReal(-1.00000000000000))*(x480)*(x481)))+(((cj7)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x484=(cj8)*(cj8);
IkReal x485=(sj8)*(sj8);
IkReal x486=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x487=((IkReal(1.00000000000000))*(x484));
IkReal x488=((IkReal(1.00000000000000))*(x485));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x486)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x486)))+(((IkReal(-1.00000000000000))*(x487)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x487)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x488)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x488)*((r10)*(r10))))));
IkReal x489=(cj8)*(cj8);
IkReal x490=(sj8)*(sj8);
IkReal x491=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x492=((IkReal(1.00000000000000))*(x489));
IkReal x493=((IkReal(1.00000000000000))*(x490));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x493)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x492)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x491)))+(((IkReal(-1.00000000000000))*(x493)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x491)))+(((IkReal(-1.00000000000000))*(x492)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x494=(sj8)*(sj8);
IkReal x495=(cj8)*(cj8);
IkReal x496=((sj7)*(sj8));
IkReal x497=((IkReal(1.00000000000000))*(r02));
IkReal x498=((r01)*(r10));
IkReal x499=((cj8)*(sj7));
IkReal x500=((cj7)*(x494));
IkReal x501=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x502=((cj7)*(x495));
gconst81=IKsign(((((IkReal(-1.00000000000000))*(x501)*(x502)))+(((r00)*(r12)*(x496)))+(((x498)*(x502)))+(((x498)*(x500)))+(((IkReal(-1.00000000000000))*(r11)*(x497)*(x499)))+(((IkReal(-1.00000000000000))*(r10)*(x496)*(x497)))+(((IkReal(-1.00000000000000))*(x500)*(x501)))+(((r01)*(r12)*(x499)))));
IkReal x503=(sj8)*(sj8);
IkReal x504=(cj8)*(cj8);
IkReal x505=((sj7)*(sj8));
IkReal x506=((IkReal(1.00000000000000))*(r02));
IkReal x507=((r01)*(r10));
IkReal x508=((cj8)*(sj7));
IkReal x509=((cj7)*(x503));
IkReal x510=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x511=((cj7)*(x504));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x506)*(x508)))+(((x507)*(x511)))+(((x507)*(x509)))+(((r01)*(r12)*(x508)))+(((IkReal(-1.00000000000000))*(x509)*(x510)))+(((IkReal(-1.00000000000000))*(x510)*(x511)))+(((r00)*(r12)*(x505)))+(((IkReal(-1.00000000000000))*(r10)*(x505)*(x506))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x512=((cj7)*(cj8));
IkReal x513=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst81)*(((((IkReal(-1.00000000000000))*(r11)*(x513)))+(((r10)*(x512)))+(((r12)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((IkReal(-1.00000000000000))*(r01)*(x513)))+(((r02)*(sj7)))+(((r00)*(x512))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst81)*(((((IkReal(-1.00000000000000))*(r11)*(x513)))+(((r10)*(x512)))+(((r12)*(sj7)))))), ((gconst81)*(((((IkReal(-1.00000000000000))*(r01)*(x513)))+(((r02)*(sj7)))+(((r00)*(x512)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x514=IKsin(j3);
IkReal x515=IKcos(j3);
IkReal x516=((r01)*(sj8));
IkReal x517=((cj8)*(r00));
IkReal x518=((r00)*(sj8));
IkReal x519=((cj8)*(r11));
IkReal x520=((r11)*(sj8));
IkReal x521=((r10)*(sj8));
IkReal x522=((cj8)*(r10));
IkReal x523=((cj7)*(x514));
IkReal x524=((sj7)*(x515));
IkReal x525=((IkReal(1.00000000000000))*(x514));
IkReal x526=((IkReal(1.00000000000000))*(x515));
IkReal x527=((cj8)*(x514));
IkReal x528=((IkReal(1.00000000000000))*(x520));
IkReal x529=((sj7)*(x514));
IkReal x530=((cj7)*(x515));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x521)*(x526)))+(((x514)*(x518)))+(((r01)*(x527)))+(((IkReal(-1.00000000000000))*(x519)*(x526))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x526)))+(((IkReal(-1.00000000000000))*(x521)*(x525)))+(((IkReal(-1.00000000000000))*(x518)*(x526)))+(((IkReal(-1.00000000000000))*(x519)*(x525))));
evalcond[2]=((((x522)*(x530)))+(((IkReal(-1.00000000000000))*(cj7)*(x520)*(x526)))+(((r12)*(x524)))+(((x516)*(x523)))+(((IkReal(-1.00000000000000))*(x517)*(x523)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x525))));
evalcond[3]=((((x522)*(x524)))+(((IkReal(-1.00000000000000))*(x524)*(x528)))+(((r02)*(x523)))+(((IkReal(-1.00000000000000))*(sj7)*(x517)*(x525)))+(((x516)*(x529)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x526))));
evalcond[4]=((((x522)*(x523)))+(((r02)*(x524)))+(((IkReal(-1.00000000000000))*(x523)*(x528)))+(((r12)*(x529)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((x517)*(x530)))+(((IkReal(-1.00000000000000))*(cj7)*(x516)*(x526))));
evalcond[5]=((((x522)*(x529)))+(((x517)*(x524)))+(((IkReal(-1.00000000000000))*(x516)*(x524)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x526)))+(((IkReal(-1.00000000000000))*(r12)*(x523)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(sj7)*(x520)*(x525))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst80)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x531=IKsin(j3);
IkReal x532=IKcos(j3);
IkReal x533=((r01)*(sj8));
IkReal x534=((cj8)*(r00));
IkReal x535=((r00)*(sj8));
IkReal x536=((cj8)*(r11));
IkReal x537=((r11)*(sj8));
IkReal x538=((r10)*(sj8));
IkReal x539=((cj8)*(r10));
IkReal x540=((cj7)*(x531));
IkReal x541=((sj7)*(x532));
IkReal x542=((IkReal(1.00000000000000))*(x531));
IkReal x543=((IkReal(1.00000000000000))*(x532));
IkReal x544=((cj8)*(x531));
IkReal x545=((IkReal(1.00000000000000))*(x537));
IkReal x546=((sj7)*(x531));
IkReal x547=((cj7)*(x532));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x538)*(x543)))+(((x531)*(x535)))+(((IkReal(-1.00000000000000))*(x536)*(x543)))+(((r01)*(x544))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x538)*(x542)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x543)))+(((IkReal(-1.00000000000000))*(x535)*(x543)))+(((IkReal(-1.00000000000000))*(x536)*(x542))));
evalcond[2]=((((x539)*(x547)))+(((IkReal(-1.00000000000000))*(cj7)*(x537)*(x543)))+(((r12)*(x541)))+(((IkReal(-1.00000000000000))*(x534)*(x540)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x542)))+(((x533)*(x540))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x541)*(x545)))+(((x539)*(x541)))+(((r02)*(x540)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x543)))+(((x533)*(x546)))+(((IkReal(-1.00000000000000))*(sj7)*(x534)*(x542))));
evalcond[4]=((((x539)*(x540)))+(((r02)*(x541)))+(((IkReal(-1.00000000000000))*(x540)*(x545)))+(((cj5)*(sj4)))+(((r12)*(x546)))+(((IkReal(-1.00000000000000))*(cj7)*(x533)*(x543)))+(((cj4)*(sj5)))+(((x534)*(x547))));
evalcond[5]=((((x539)*(x546)))+(((IkReal(-1.00000000000000))*(sj7)*(x537)*(x542)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x543)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x533)*(x541)))+(((IkReal(-1.00000000000000))*(r12)*(x540)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x534)*(x541))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst75)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x548=IKsin(j3);
IkReal x549=IKcos(j3);
IkReal x550=((IkReal(1.00000000000000))*(sj8));
IkReal x551=((IkReal(1.00000000000000))*(cj8));
IkReal x552=((r01)*(sj8));
IkReal x553=((cj8)*(r10));
IkReal x554=((sj7)*(x549));
IkReal x555=((cj7)*(x548));
IkReal x556=((r00)*(x548));
IkReal x557=((sj7)*(x548));
IkReal x558=((cj7)*(x549));
evalcond[0]=((IkReal(-1.00000000000000))+(((sj8)*(x556)))+(((IkReal(-1.00000000000000))*(r11)*(x549)*(x551)))+(((cj8)*(r01)*(x548)))+(((IkReal(-1.00000000000000))*(r10)*(x549)*(x550))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x549)*(x551)))+(((IkReal(-1.00000000000000))*(r10)*(x548)*(x550)))+(((IkReal(-1.00000000000000))*(r11)*(x548)*(x551)))+(((IkReal(-1.00000000000000))*(r00)*(x549)*(x550))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x557)))+(((r12)*(x554)))+(((IkReal(-1.00000000000000))*(r00)*(x551)*(x555)))+(((IkReal(-1.00000000000000))*(r11)*(x550)*(x558)))+(((x552)*(x555)))+(((x553)*(x558))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x551)*(x556)))+(((r02)*(x555)))+(((IkReal(-1.00000000000000))*(r12)*(x558)))+(((IkReal(-1.00000000000000))*(r11)*(x550)*(x554)))+(((x552)*(x557)))+(((x553)*(x554))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x559=((cj3)*(cj5));
IkReal x560=((r02)*(sj7));
IkReal x561=((cj5)*(sj7));
IkReal x562=((cj3)*(sj5));
IkReal x563=((r11)*(sj3));
IkReal x564=((r10)*(sj3));
IkReal x565=((r12)*(sj3));
IkReal x566=((sj5)*(sj7));
IkReal x567=((cj7)*(cj8)*(sj5));
IkReal x568=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x569=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst79)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(cj5)*(x563)*(x568)))+(((x564)*(x569)))+(((cj7)*(cj8)*(r00)*(x559)))+(((IkReal(-1.00000000000000))*(r22)*(x566)))+(((x561)*(x565)))+(((IkReal(-1.00000000000000))*(r20)*(x567)))+(((x559)*(x560)))+(((IkReal(-1.00000000000000))*(r01)*(x559)*(x568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((x565)*(x566)))+(((x564)*(x567)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x568)))+(((r22)*(x561)))+(((IkReal(-1.00000000000000))*(sj5)*(x563)*(x568)))+(((IkReal(-1.00000000000000))*(r01)*(x562)*(x568)))+(((x560)*(x562)))+(((r20)*(x569)))+(((cj7)*(cj8)*(r00)*(x562))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(cj5)*(x563)*(x568)))+(((x564)*(x569)))+(((cj7)*(cj8)*(r00)*(x559)))+(((IkReal(-1.00000000000000))*(r22)*(x566)))+(((x561)*(x565)))+(((IkReal(-1.00000000000000))*(r20)*(x567)))+(((x559)*(x560)))+(((IkReal(-1.00000000000000))*(r01)*(x559)*(x568)))))), ((gconst79)*(((((x565)*(x566)))+(((x564)*(x567)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x568)))+(((r22)*(x561)))+(((IkReal(-1.00000000000000))*(sj5)*(x563)*(x568)))+(((IkReal(-1.00000000000000))*(r01)*(x562)*(x568)))+(((x560)*(x562)))+(((r20)*(x569)))+(((cj7)*(cj8)*(r00)*(x562)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x570=IKcos(j4);
IkReal x571=IKsin(j4);
IkReal x572=((IkReal(1.00000000000000))*(cj7));
IkReal x573=((cj8)*(r20));
IkReal x574=((cj3)*(r02));
IkReal x575=((IkReal(1.00000000000000))*(sj7));
IkReal x576=((sj3)*(sj7));
IkReal x577=((r21)*(sj8));
IkReal x578=((IkReal(1.00000000000000))*(cj5));
IkReal x579=((cj8)*(r10));
IkReal x580=((sj5)*(x571));
IkReal x581=((sj5)*(x570));
IkReal x582=((r11)*(sj3)*(sj8));
IkReal x583=((cj3)*(cj8)*(r00));
IkReal x584=((cj3)*(r01)*(sj8));
IkReal x585=((x570)*(x578));
evalcond[0]=((((cj7)*(x577)))+(x580)+(((IkReal(-1.00000000000000))*(r22)*(x575)))+(((IkReal(-1.00000000000000))*(x585)))+(((IkReal(-1.00000000000000))*(x572)*(x573))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x581)))+(((IkReal(-1.00000000000000))*(x573)*(x575)))+(((IkReal(-1.00000000000000))*(x571)*(x578)))+(((sj7)*(x577)))+(((cj7)*(r22))));
evalcond[2]=((((cj5)*(x571)))+(((r12)*(x576)))+(((IkReal(-1.00000000000000))*(x572)*(x582)))+(((IkReal(-1.00000000000000))*(x572)*(x584)))+(((cj7)*(x583)))+(((cj7)*(sj3)*(x579)))+(((sj7)*(x574)))+(x581));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x572)))+(((x576)*(x579)))+(x580)+(((IkReal(-1.00000000000000))*(x575)*(x582)))+(((IkReal(-1.00000000000000))*(x575)*(x584)))+(((IkReal(-1.00000000000000))*(x585)))+(((IkReal(-1.00000000000000))*(x572)*(x574)))+(((sj7)*(x583))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x586=((cj7)*(sj5));
IkReal x587=((r21)*(sj8));
IkReal x588=((cj5)*(cj7));
IkReal x589=((cj8)*(r20));
IkReal x590=((sj5)*(sj7));
IkReal x591=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst78)*(((((r22)*(x590)))+(((IkReal(-1.00000000000000))*(x589)*(x591)))+(((x586)*(x589)))+(((r22)*(x588)))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((cj5)*(sj7)*(x587))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x588)*(x589)))+(((IkReal(-1.00000000000000))*(x589)*(x590)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(r22)*(x591)))+(((r22)*(x586)))+(((x587)*(x590))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((r22)*(x590)))+(((IkReal(-1.00000000000000))*(x589)*(x591)))+(((x586)*(x589)))+(((r22)*(x588)))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((cj5)*(sj7)*(x587)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(x588)*(x589)))+(((IkReal(-1.00000000000000))*(x589)*(x590)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(r22)*(x591)))+(((r22)*(x586)))+(((x587)*(x590)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x592=IKcos(j4);
IkReal x593=IKsin(j4);
IkReal x594=((IkReal(1.00000000000000))*(cj7));
IkReal x595=((cj8)*(r20));
IkReal x596=((cj3)*(r02));
IkReal x597=((IkReal(1.00000000000000))*(sj7));
IkReal x598=((sj3)*(sj7));
IkReal x599=((r21)*(sj8));
IkReal x600=((IkReal(1.00000000000000))*(cj5));
IkReal x601=((cj8)*(r10));
IkReal x602=((sj5)*(x593));
IkReal x603=((sj5)*(x592));
IkReal x604=((r11)*(sj3)*(sj8));
IkReal x605=((cj3)*(cj8)*(r00));
IkReal x606=((cj3)*(r01)*(sj8));
IkReal x607=((x592)*(x600));
evalcond[0]=((((IkReal(-1.00000000000000))*(x594)*(x595)))+(((IkReal(-1.00000000000000))*(r22)*(x597)))+(x602)+(((IkReal(-1.00000000000000))*(x607)))+(((cj7)*(x599))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x593)*(x600)))+(((sj7)*(x599)))+(((IkReal(-1.00000000000000))*(x603)))+(((IkReal(-1.00000000000000))*(x595)*(x597)))+(((cj7)*(r22))));
evalcond[2]=((((cj7)*(x605)))+(((cj7)*(sj3)*(x601)))+(((sj7)*(x596)))+(((r12)*(x598)))+(x603)+(((IkReal(-1.00000000000000))*(x594)*(x606)))+(((IkReal(-1.00000000000000))*(x594)*(x604)))+(((cj5)*(x593))));
evalcond[3]=((((sj7)*(x605)))+(((IkReal(-1.00000000000000))*(x597)*(x606)))+(((IkReal(-1.00000000000000))*(x597)*(x604)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x594)))+(((IkReal(-1.00000000000000))*(x594)*(x596)))+(x602)+(((IkReal(-1.00000000000000))*(x607)))+(((x598)*(x601))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x608=((IkReal(4.00000000000000))*(npx));
IkReal x609=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x609)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x608))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x609)))+(((cj7)*(cj8)*(x608)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x609)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x608)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x609)))+(((cj7)*(cj8)*(x608)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x609)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x608)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x609)))+(((cj7)*(cj8)*(x608)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x610=IKsin(j5);
IkReal x611=((IkReal(1.00000000000000))*(sj7));
IkReal x612=((npy)*(sj8));
IkReal x613=((cj8)*(npx));
IkReal x614=((IkReal(0.250000000000000))*(x610));
evalcond[0]=((((IkReal(-0.0300000000000000))*(sj6)))+(((IkReal(-0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x614))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x613)))+(((IkReal(-1.00000000000000))*(npz)*(x611)))+(((cj7)*(x612)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[2]=((((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x611)*(x613)))+(((IkReal(-1.00000000000000))*(cj6)*(x614)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-0.0950000000000000))*(sj6)))+(((cj7)*(npz)))+(((sj7)*(x612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x615=(sj8)*(sj8);
IkReal x616=(cj8)*(cj8);
IkReal x617=((r00)*(r11));
IkReal x618=((r02)*(sj7));
IkReal x619=((cj7)*(x616));
IkReal x620=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x621=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x622=((cj7)*(x615));
gconst2=IKsign(((((cj8)*(r11)*(x618)))+(((IkReal(-1.00000000000000))*(x621)*(x622)))+(((x617)*(x622)))+(((r10)*(sj8)*(x618)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x620)))+(((x617)*(x619)))+(((IkReal(-1.00000000000000))*(x619)*(x621)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x620)))));
IkReal x623=(sj8)*(sj8);
IkReal x624=(cj8)*(cj8);
IkReal x625=((r00)*(r11));
IkReal x626=((r02)*(sj7));
IkReal x627=((cj7)*(x624));
IkReal x628=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x629=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x630=((cj7)*(x623));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x629)*(x630)))+(((x625)*(x630)))+(((cj8)*(r11)*(x626)))+(((x625)*(x627)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x628)))+(((IkReal(-1.00000000000000))*(x627)*(x629)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x628)))+(((r10)*(sj8)*(x626))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x631=((IkReal(1.00000000000000))*(sj7));
IkReal x632=((npy)*(sj8));
IkReal x633=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x631)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x633)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x632))));
evalcond[3]=((((cj7)*(r22)))+(((r21)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x631))));
evalcond[4]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x631)*(x633)))+(((sj7)*(x632)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x634=(cj8)*(cj8);
IkReal x635=(sj8)*(sj8);
IkReal x636=((cj7)*(r02));
IkReal x637=((IkReal(1.00000000000000))*(r00));
IkReal x638=((cj7)*(r12));
IkReal x639=((r01)*(r10));
IkReal x640=((sj7)*(x635));
IkReal x641=((sj7)*(x634));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(sj8)*(x637)*(x638)))+(((x639)*(x641)))+(((x639)*(x640)))+(((IkReal(-1.00000000000000))*(r11)*(x637)*(x640)))+(((IkReal(-1.00000000000000))*(r11)*(x637)*(x641)))+(((cj8)*(r11)*(x636)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x638)))+(((r10)*(sj8)*(x636)))));
IkReal x642=(cj8)*(cj8);
IkReal x643=(sj8)*(sj8);
IkReal x644=((cj7)*(r02));
IkReal x645=((IkReal(1.00000000000000))*(r00));
IkReal x646=((cj7)*(r12));
IkReal x647=((r01)*(r10));
IkReal x648=((sj7)*(x643));
IkReal x649=((sj7)*(x642));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj8)*(x645)*(x646)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x646)))+(((cj8)*(r11)*(x644)))+(((r10)*(sj8)*(x644)))+(((IkReal(-1.00000000000000))*(r11)*(x645)*(x648)))+(((IkReal(-1.00000000000000))*(r11)*(x645)*(x649)))+(((x647)*(x648)))+(((x647)*(x649))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x650=(sj7)*(sj7);
IkReal x651=(cj7)*(cj7);
IkReal x652=((r02)*(r11));
IkReal x653=((sj8)*(x650));
IkReal x654=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x655=((cj8)*(r00)*(r12));
IkReal x656=((sj8)*(x651));
IkReal x657=((IkReal(1.00000000000000))*(cj8)*(r02)*(r10));
gconst19=IKsign(((((IkReal(-1.00000000000000))*(x651)*(x657)))+(((x652)*(x653)))+(((x652)*(x656)))+(((x651)*(x655)))+(((IkReal(-1.00000000000000))*(x650)*(x657)))+(((x650)*(x655)))+(((IkReal(-1.00000000000000))*(x653)*(x654)))+(((IkReal(-1.00000000000000))*(x654)*(x656)))));
IkReal x658=(sj7)*(sj7);
IkReal x659=(cj7)*(cj7);
IkReal x660=((r02)*(r11));
IkReal x661=((sj8)*(x658));
IkReal x662=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x663=((cj8)*(r00)*(r12));
IkReal x664=((sj8)*(x659));
IkReal x665=x657;
dummyeval[0]=((((IkReal(-1.00000000000000))*(x662)*(x664)))+(((IkReal(-1.00000000000000))*(x659)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((IkReal(-1.00000000000000))*(x658)*(x665)))+(((x660)*(x661)))+(((x660)*(x664)))+(((x659)*(x663)))+(((x658)*(x663))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x666=((cj7)*(cj8));
IkReal x667=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(r11)*(x667)))+(((r12)*(sj7)))+(((r10)*(x666))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r00)*(x666)))+(((IkReal(-1.00000000000000))*(r01)*(x667)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((IkReal(-1.00000000000000))*(r11)*(x667)))+(((r12)*(sj7)))+(((r10)*(x666)))))), ((gconst19)*(((((r00)*(x666)))+(((IkReal(-1.00000000000000))*(r01)*(x667)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x668=IKsin(j3);
IkReal x669=IKcos(j3);
IkReal x670=((r01)*(sj8));
IkReal x671=((cj8)*(sj7));
IkReal x672=((IkReal(1.00000000000000))*(sj7));
IkReal x673=((IkReal(1.00000000000000))*(r12));
IkReal x674=((r11)*(sj8));
IkReal x675=((IkReal(1.00000000000000))*(r00));
IkReal x676=((cj7)*(x668));
IkReal x677=((r10)*(x669));
IkReal x678=((IkReal(1.00000000000000))*(cj7)*(x669));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x669)))+(((r00)*(sj8)*(x668)))+(((cj8)*(r01)*(x668)))+(((IkReal(-1.00000000000000))*(sj8)*(x677))));
evalcond[1]=((((cj7)*(cj8)*(x677)))+(((IkReal(-1.00000000000000))*(cj8)*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(r02)*(x668)*(x672)))+(((x670)*(x676)))+(((r12)*(sj7)*(x669)))+(((IkReal(-1.00000000000000))*(x674)*(x678))));
evalcond[2]=((IkReal(1.00000000000000))+(((r02)*(x676)))+(((x671)*(x677)))+(((IkReal(-1.00000000000000))*(cj7)*(x669)*(x673)))+(((sj7)*(x668)*(x670)))+(((IkReal(-1.00000000000000))*(x669)*(x672)*(x674)))+(((IkReal(-1.00000000000000))*(x668)*(x671)*(x675))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x678)))+(((IkReal(-1.00000000000000))*(x669)*(x670)*(x672)))+(((r00)*(x669)*(x671)))+(((r10)*(x668)*(x671)))+(((IkReal(-1.00000000000000))*(x673)*(x676)))+(((IkReal(-1.00000000000000))*(x668)*(x672)*(x674))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x679=((cj8)*(sj5));
IkReal x680=((cj3)*(r01));
IkReal x681=((IkReal(1.00000000000000))*(cj5));
IkReal x682=((r11)*(sj3));
IkReal x683=((sj5)*(sj8));
IkReal x684=((r10)*(sj3));
IkReal x685=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((cj3)*(r00)*(x683)))+(((cj5)*(r20)*(sj8)))+(((x683)*(x684)))+(((x679)*(x682)))+(((x679)*(x680)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((r21)*(x679)))+(((IkReal(-1.00000000000000))*(x681)*(x685)))+(((IkReal(-1.00000000000000))*(cj8)*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(cj8)*(x681)*(x682)))+(((r20)*(x683)))+(((IkReal(-1.00000000000000))*(sj8)*(x681)*(x684))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((cj3)*(r00)*(x683)))+(((cj5)*(r20)*(sj8)))+(((x683)*(x684)))+(((x679)*(x682)))+(((x679)*(x680)))+(((cj5)*(cj8)*(r21)))))), ((gconst22)*(((((r21)*(x679)))+(((IkReal(-1.00000000000000))*(x681)*(x685)))+(((IkReal(-1.00000000000000))*(cj8)*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(cj8)*(x681)*(x682)))+(((r20)*(x683)))+(((IkReal(-1.00000000000000))*(sj8)*(x681)*(x684)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x686=IKsin(j4);
IkReal x687=IKcos(j4);
IkReal x688=((IkReal(1.00000000000000))*(cj8));
IkReal x689=((cj3)*(r01));
IkReal x690=((cj3)*(r00));
IkReal x691=((cj7)*(cj8));
IkReal x692=((IkReal(1.00000000000000))*(cj5));
IkReal x693=((IkReal(1.00000000000000))*(sj8));
IkReal x694=((r11)*(sj3));
IkReal x695=((r10)*(sj3));
IkReal x696=((sj5)*(x686));
IkReal x697=((sj5)*(x687));
IkReal x698=((x687)*(x692));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x686)*(x692)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x697))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x688)))+(x696)+(((IkReal(-1.00000000000000))*(x698)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x688)*(x689)))+(((IkReal(-1.00000000000000))*(x693)*(x695)))+(((IkReal(-1.00000000000000))*(x688)*(x694)))+(x696)+(((IkReal(-1.00000000000000))*(x698)))+(((IkReal(-1.00000000000000))*(x690)*(x693))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((cj5)*(x686)))+(((x690)*(x691)))+(((x691)*(x695)))+(((cj3)*(r02)*(sj7)))+(x697)+(((IkReal(-1.00000000000000))*(cj7)*(x689)*(x693)))+(((IkReal(-1.00000000000000))*(cj7)*(x693)*(x694))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x699=((sj5)*(sj8));
IkReal x700=((IkReal(1.00000000000000))*(cj7));
IkReal x701=((cj8)*(sj5));
IkReal x702=((r22)*(sj7));
IkReal x703=((cj5)*(cj8));
IkReal x704=((cj5)*(sj8));
if( IKabs(((gconst21)*(((((cj7)*(r20)*(x701)))+(((sj5)*(x702)))+(((r20)*(x704)))+(((IkReal(-1.00000000000000))*(r21)*(x699)*(x700)))+(((r21)*(x703))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj5)*(x702)))+(((r20)*(x699)))+(((IkReal(-1.00000000000000))*(r20)*(x700)*(x703)))+(((r21)*(x701)))+(((cj7)*(r21)*(x704))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((cj7)*(r20)*(x701)))+(((sj5)*(x702)))+(((r20)*(x704)))+(((IkReal(-1.00000000000000))*(r21)*(x699)*(x700)))+(((r21)*(x703)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj5)*(x702)))+(((r20)*(x699)))+(((IkReal(-1.00000000000000))*(r20)*(x700)*(x703)))+(((r21)*(x701)))+(((cj7)*(r21)*(x704)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x705=IKsin(j4);
IkReal x706=IKcos(j4);
IkReal x707=((IkReal(1.00000000000000))*(cj8));
IkReal x708=((cj3)*(r01));
IkReal x709=((cj3)*(r00));
IkReal x710=((cj7)*(cj8));
IkReal x711=((IkReal(1.00000000000000))*(cj5));
IkReal x712=((IkReal(1.00000000000000))*(sj8));
IkReal x713=((r11)*(sj3));
IkReal x714=((r10)*(sj3));
IkReal x715=((sj5)*(x705));
IkReal x716=((sj5)*(x706));
IkReal x717=((x706)*(x711));
evalcond[0]=((((IkReal(-1.00000000000000))*(x716)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x705)*(x711)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x707)))+(((IkReal(-1.00000000000000))*(x717)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x715)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x707)*(x708)))+(((IkReal(-1.00000000000000))*(x707)*(x713)))+(((IkReal(-1.00000000000000))*(x709)*(x712)))+(((IkReal(-1.00000000000000))*(x717)))+(((IkReal(-1.00000000000000))*(x712)*(x714)))+(x715));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x708)*(x712)))+(((cj5)*(x705)))+(((x709)*(x710)))+(((x710)*(x714)))+(((IkReal(-1.00000000000000))*(cj7)*(x712)*(x713)))+(((cj3)*(r02)*(sj7)))+(x716));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x718=((IkReal(1.00000000000000))*(cj8));
IkReal x719=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r11)*(x718)))+(((IkReal(-1.00000000000000))*(r10)*(x719))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r01)*(x718)))+(((IkReal(-1.00000000000000))*(r00)*(x719))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r11)*(x718)))+(((IkReal(-1.00000000000000))*(r10)*(x719)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r01)*(x718)))+(((IkReal(-1.00000000000000))*(r00)*(x719)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x720=IKsin(j3);
IkReal x721=IKcos(j3);
IkReal x722=((r01)*(sj8));
IkReal x723=((cj8)*(sj7));
IkReal x724=((IkReal(1.00000000000000))*(sj7));
IkReal x725=((IkReal(1.00000000000000))*(r12));
IkReal x726=((r11)*(sj8));
IkReal x727=((IkReal(1.00000000000000))*(r00));
IkReal x728=((cj7)*(x720));
IkReal x729=((r10)*(x721));
IkReal x730=((IkReal(1.00000000000000))*(cj7)*(x721));
evalcond[0]=((((r00)*(sj8)*(x720)))+(((IkReal(-1.00000000000000))*(sj8)*(x729)))+(((cj8)*(r01)*(x720)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x721))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(x727)*(x728)))+(((x722)*(x728)))+(((IkReal(-1.00000000000000))*(r02)*(x720)*(x724)))+(((cj7)*(cj8)*(x729)))+(((r12)*(sj7)*(x721)))+(((IkReal(-1.00000000000000))*(x726)*(x730))));
evalcond[2]=((IkReal(1.00000000000000))+(((x723)*(x729)))+(((IkReal(-1.00000000000000))*(cj7)*(x721)*(x725)))+(((IkReal(-1.00000000000000))*(x720)*(x723)*(x727)))+(((IkReal(-1.00000000000000))*(x721)*(x724)*(x726)))+(((sj7)*(x720)*(x722)))+(((r02)*(x728))));
evalcond[3]=((((r10)*(x720)*(x723)))+(((IkReal(-1.00000000000000))*(r02)*(x730)))+(((IkReal(-1.00000000000000))*(x721)*(x722)*(x724)))+(((IkReal(-1.00000000000000))*(x725)*(x728)))+(((r00)*(x721)*(x723)))+(((IkReal(-1.00000000000000))*(x720)*(x724)*(x726))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x731=((cj8)*(sj5));
IkReal x732=((cj3)*(r01));
IkReal x733=((IkReal(1.00000000000000))*(cj5));
IkReal x734=((r11)*(sj3));
IkReal x735=((sj5)*(sj8));
IkReal x736=((r10)*(sj3));
IkReal x737=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((x731)*(x734)))+(((x731)*(x732)))+(((x735)*(x736)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x735)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(sj8)*(x733)*(x736)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((r20)*(x735)))+(((IkReal(-1.00000000000000))*(cj8)*(x732)*(x733)))+(((r21)*(x731)))+(((IkReal(-1.00000000000000))*(cj8)*(x733)*(x734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((x731)*(x734)))+(((x731)*(x732)))+(((x735)*(x736)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x735)))+(((cj5)*(cj8)*(r21)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(sj8)*(x733)*(x736)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((r20)*(x735)))+(((IkReal(-1.00000000000000))*(cj8)*(x732)*(x733)))+(((r21)*(x731)))+(((IkReal(-1.00000000000000))*(cj8)*(x733)*(x734)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x738=IKsin(j4);
IkReal x739=IKcos(j4);
IkReal x740=((IkReal(1.00000000000000))*(cj8));
IkReal x741=((cj3)*(r01));
IkReal x742=((cj3)*(r00));
IkReal x743=((cj7)*(cj8));
IkReal x744=((IkReal(1.00000000000000))*(cj5));
IkReal x745=((IkReal(1.00000000000000))*(sj8));
IkReal x746=((r11)*(sj3));
IkReal x747=((r10)*(sj3));
IkReal x748=((sj5)*(x738));
IkReal x749=((sj5)*(x739));
IkReal x750=((x739)*(x744));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x738)*(x744)))+(((IkReal(-1.00000000000000))*(x749)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x748)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x750)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x740))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x745)*(x747)))+(((IkReal(-1.00000000000000))*(x742)*(x745)))+(((IkReal(-1.00000000000000))*(x740)*(x741)))+(((IkReal(-1.00000000000000))*(x740)*(x746)))+(x748)+(((IkReal(-1.00000000000000))*(x750))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((cj5)*(x738)))+(((x742)*(x743)))+(((IkReal(-1.00000000000000))*(cj7)*(x741)*(x745)))+(((IkReal(-1.00000000000000))*(cj7)*(x745)*(x746)))+(((cj3)*(r02)*(sj7)))+(((x743)*(x747)))+(x749));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x751=((sj5)*(sj8));
IkReal x752=((IkReal(1.00000000000000))*(cj7));
IkReal x753=((cj8)*(sj5));
IkReal x754=((r22)*(sj7));
IkReal x755=((cj5)*(cj8));
IkReal x756=((cj5)*(sj8));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x751)*(x752)))+(((cj7)*(r20)*(x753)))+(((r21)*(x755)))+(((sj5)*(x754)))+(((r20)*(x756))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((r21)*(x753)))+(((cj7)*(r21)*(x756)))+(((IkReal(-1.00000000000000))*(cj5)*(x754)))+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(r20)*(x752)*(x755))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x751)*(x752)))+(((cj7)*(r20)*(x753)))+(((r21)*(x755)))+(((sj5)*(x754)))+(((r20)*(x756)))))), ((gconst21)*(((((r21)*(x753)))+(((cj7)*(r21)*(x756)))+(((IkReal(-1.00000000000000))*(cj5)*(x754)))+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(r20)*(x752)*(x755)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x757=IKsin(j4);
IkReal x758=IKcos(j4);
IkReal x759=((IkReal(1.00000000000000))*(cj8));
IkReal x760=((cj3)*(r01));
IkReal x761=((cj3)*(r00));
IkReal x762=((cj7)*(cj8));
IkReal x763=((IkReal(1.00000000000000))*(cj5));
IkReal x764=((IkReal(1.00000000000000))*(sj8));
IkReal x765=((r11)*(sj3));
IkReal x766=((r10)*(sj3));
IkReal x767=((sj5)*(x757));
IkReal x768=((sj5)*(x758));
IkReal x769=((x758)*(x763));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x757)*(x763)))+(((IkReal(-1.00000000000000))*(x768)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x769)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x767)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x759)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x769)))+(((IkReal(-1.00000000000000))*(x764)*(x766)))+(x767)+(((IkReal(-1.00000000000000))*(x761)*(x764)))+(((IkReal(-1.00000000000000))*(x759)*(x765)))+(((IkReal(-1.00000000000000))*(x759)*(x760))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((cj5)*(x757)))+(((x761)*(x762)))+(((x762)*(x766)))+(((IkReal(-1.00000000000000))*(cj7)*(x764)*(x765)))+(((cj3)*(r02)*(sj7)))+(x768)+(((IkReal(-1.00000000000000))*(cj7)*(x760)*(x764))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x770=((sj5)*(sj8));
IkReal x771=((IkReal(1.00000000000000))*(cj7));
IkReal x772=((cj8)*(sj5));
IkReal x773=((r22)*(sj7));
IkReal x774=((cj5)*(cj8));
IkReal x775=((cj5)*(sj8));
if( IKabs(((gconst20)*(((((cj7)*(r20)*(x772)))+(((IkReal(-1.00000000000000))*(r21)*(x770)*(x771)))+(((r21)*(x774)))+(((r20)*(x775)))+(((sj5)*(x773))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((cj7)*(r21)*(x775)))+(((r21)*(x772)))+(((IkReal(-1.00000000000000))*(cj5)*(x773)))+(((r20)*(x770)))+(((IkReal(-1.00000000000000))*(r20)*(x771)*(x774))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((cj7)*(r20)*(x772)))+(((IkReal(-1.00000000000000))*(r21)*(x770)*(x771)))+(((r21)*(x774)))+(((r20)*(x775)))+(((sj5)*(x773)))))), ((gconst20)*(((((cj7)*(r21)*(x775)))+(((r21)*(x772)))+(((IkReal(-1.00000000000000))*(cj5)*(x773)))+(((r20)*(x770)))+(((IkReal(-1.00000000000000))*(r20)*(x771)*(x774)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x776=IKsin(j4);
IkReal x777=IKcos(j4);
IkReal x778=((IkReal(1.00000000000000))*(cj5));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x776)*(x778)))+(((IkReal(-1.00000000000000))*(sj5)*(x777)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x776)))+(((IkReal(-1.00000000000000))*(x777)*(x778)))+(((cj7)*(r21)*(sj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x779=(cj8)*(cj8);
IkReal x780=(sj8)*(sj8);
IkReal x781=((cj7)*(r02));
IkReal x782=((IkReal(1.00000000000000))*(r00));
IkReal x783=((cj7)*(r12));
IkReal x784=((r01)*(r10));
IkReal x785=((sj7)*(x780));
IkReal x786=((sj7)*(x779));
gconst24=IKsign(((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x783)))+(((x784)*(x786)))+(((x784)*(x785)))+(((IkReal(-1.00000000000000))*(r11)*(x782)*(x786)))+(((IkReal(-1.00000000000000))*(r11)*(x782)*(x785)))+(((r10)*(sj8)*(x781)))+(((IkReal(-1.00000000000000))*(sj8)*(x782)*(x783)))+(((cj8)*(r11)*(x781)))));
IkReal x787=(cj8)*(cj8);
IkReal x788=(sj8)*(sj8);
IkReal x789=((cj7)*(r02));
IkReal x790=((IkReal(1.00000000000000))*(r00));
IkReal x791=((cj7)*(r12));
IkReal x792=((r01)*(r10));
IkReal x793=((sj7)*(x788));
IkReal x794=((sj7)*(x787));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x790)*(x794)))+(((IkReal(-1.00000000000000))*(r11)*(x790)*(x793)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x791)))+(((x792)*(x794)))+(((x792)*(x793)))+(((r10)*(sj8)*(x789)))+(((IkReal(-1.00000000000000))*(sj8)*(x790)*(x791)))+(((cj8)*(r11)*(x789))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x795=(cj8)*(cj8);
IkReal x796=(sj8)*(sj8);
IkReal x797=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x798=((IkReal(1.00000000000000))*(x795));
IkReal x799=((IkReal(1.00000000000000))*(x796));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(x799)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x798)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x799)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x797)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x797)))+(((IkReal(-1.00000000000000))*(x798)*((r01)*(r01))))));
IkReal x800=(cj8)*(cj8);
IkReal x801=(sj8)*(sj8);
IkReal x802=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x803=((IkReal(1.00000000000000))*(x800));
IkReal x804=((IkReal(1.00000000000000))*(x801));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x803)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x802)))+(((IkReal(-1.00000000000000))*(x804)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x803)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x804)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x802))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x805=((cj8)*(r01));
IkReal x806=((cj4)*(cj5));
IkReal x807=((r10)*(sj8));
IkReal x808=((cj8)*(r11));
IkReal x809=((r00)*(sj8));
IkReal x810=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst23)*(((((x806)*(x808)))+(((x806)*(x807)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((IkReal(-1.00000000000000))*(x807)*(x810))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((x806)*(x809)))+(((IkReal(-1.00000000000000))*(x809)*(x810)))+(((x805)*(x806)))+(((IkReal(-1.00000000000000))*(x805)*(x810))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst23)*(((((x806)*(x808)))+(((x806)*(x807)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((IkReal(-1.00000000000000))*(x807)*(x810)))))), ((gconst23)*(((((x806)*(x809)))+(((IkReal(-1.00000000000000))*(x809)*(x810)))+(((x805)*(x806)))+(((IkReal(-1.00000000000000))*(x805)*(x810)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x811=IKsin(j3);
IkReal x812=IKcos(j3);
IkReal x813=((cj7)*(sj8));
IkReal x814=((r00)*(sj8));
IkReal x815=((cj8)*(r11));
IkReal x816=((cj7)*(r02));
IkReal x817=((cj7)*(r12));
IkReal x818=((cj8)*(r10));
IkReal x819=((sj7)*(sj8));
IkReal x820=((cj8)*(r00));
IkReal x821=((r10)*(sj8));
IkReal x822=((r01)*(x811));
IkReal x823=((IkReal(1.00000000000000))*(x812));
IkReal x824=((IkReal(1.00000000000000))*(x811));
IkReal x825=((sj7)*(x811));
IkReal x826=((sj7)*(x812));
IkReal x827=((cj7)*(x812));
IkReal x828=((cj8)*(x826));
evalcond[0]=((((IkReal(-1.00000000000000))*(x815)*(x823)))+(((x811)*(x814)))+(((IkReal(-1.00000000000000))*(x821)*(x823)))+(((cj8)*(x822))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x814)*(x823)))+(((IkReal(-1.00000000000000))*(x815)*(x824)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x821)*(x824)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x823))));
evalcond[2]=((((r12)*(x826)))+(((IkReal(-1.00000000000000))*(cj7)*(x820)*(x824)))+(((IkReal(-1.00000000000000))*(r11)*(x813)*(x823)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x824)))+(((x813)*(x822)))+(((x818)*(x827))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x820)*(x824)))+(((IkReal(-1.00000000000000))*(r11)*(x819)*(x823)))+(((IkReal(-1.00000000000000))*(x817)*(x823)))+(((x819)*(x822)))+(((x811)*(x816)))+(((x818)*(x826))));
evalcond[4]=((((cj7)*(x811)*(x818)))+(((r12)*(x825)))+(((x820)*(x827)))+(((IkReal(-1.00000000000000))*(r11)*(x813)*(x824)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((r02)*(x826)))+(((IkReal(-1.00000000000000))*(r01)*(x813)*(x823))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x816)*(x823)))+(((x820)*(x826)))+(((IkReal(-1.00000000000000))*(r11)*(x819)*(x824)))+(((IkReal(-1.00000000000000))*(x817)*(x824)))+(((x818)*(x825)))+(((IkReal(-1.00000000000000))*(r01)*(x819)*(x823))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x829=((IkReal(1.00000000000000))*(cj8));
IkReal x830=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x829)))+(((IkReal(-1.00000000000000))*(r10)*(x830))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x829)))+(((IkReal(-1.00000000000000))*(r00)*(x830))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x829)))+(((IkReal(-1.00000000000000))*(r10)*(x830)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x829)))+(((IkReal(-1.00000000000000))*(r00)*(x830)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x831=IKsin(j3);
IkReal x832=IKcos(j3);
IkReal x833=((cj7)*(sj8));
IkReal x834=((r00)*(sj8));
IkReal x835=((cj8)*(r11));
IkReal x836=((cj7)*(r02));
IkReal x837=((cj7)*(r12));
IkReal x838=((cj8)*(r10));
IkReal x839=((sj7)*(sj8));
IkReal x840=((cj8)*(r00));
IkReal x841=((r10)*(sj8));
IkReal x842=((r01)*(x831));
IkReal x843=((IkReal(1.00000000000000))*(x832));
IkReal x844=((IkReal(1.00000000000000))*(x831));
IkReal x845=((sj7)*(x831));
IkReal x846=((sj7)*(x832));
IkReal x847=((cj7)*(x832));
IkReal x848=((cj8)*(x846));
evalcond[0]=((((x831)*(x834)))+(((IkReal(-1.00000000000000))*(x835)*(x843)))+(((IkReal(-1.00000000000000))*(x841)*(x843)))+(((cj8)*(x842))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x835)*(x844)))+(((IkReal(-1.00000000000000))*(x841)*(x844)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x843)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x834)*(x843)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5))));
evalcond[2]=((((x838)*(x847)))+(((IkReal(-1.00000000000000))*(cj7)*(x840)*(x844)))+(((IkReal(-1.00000000000000))*(r11)*(x833)*(x843)))+(((x833)*(x842)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x844)))+(((r12)*(x846))));
evalcond[3]=((IkReal(1.00000000000000))+(((x831)*(x836)))+(((x838)*(x846)))+(((x839)*(x842)))+(((IkReal(-1.00000000000000))*(x837)*(x843)))+(((IkReal(-1.00000000000000))*(sj7)*(x840)*(x844)))+(((IkReal(-1.00000000000000))*(r11)*(x839)*(x843))));
evalcond[4]=((((x840)*(x847)))+(((IkReal(-1.00000000000000))*(r11)*(x833)*(x844)))+(((r02)*(x846)))+(((cj7)*(x831)*(x838)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((r12)*(x845)))+(((IkReal(-1.00000000000000))*(r01)*(x833)*(x843))));
evalcond[5]=((((x838)*(x845)))+(((x840)*(x846)))+(((IkReal(-1.00000000000000))*(x836)*(x843)))+(((IkReal(-1.00000000000000))*(x837)*(x844)))+(((IkReal(-1.00000000000000))*(r01)*(x839)*(x843)))+(((IkReal(-1.00000000000000))*(r11)*(x839)*(x844))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x849=((IkReal(1.00000000000000))*(sj7));
IkReal x850=((npy)*(sj8));
IkReal x851=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((cj7)*(x850)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x851)))+(((IkReal(-1.00000000000000))*(npz)*(x849)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x849)))+(((cj7)*(r22)))+(((r21)*(sj7)*(sj8))));
evalcond[4]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x849)*(x851)))+(((cj7)*(npz)))+(((sj7)*(x850))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x852=(sj8)*(sj8);
IkReal x853=(cj8)*(cj8);
IkReal x854=((IkReal(1.00000000000000))*(r10));
IkReal x855=((cj7)*(sj8));
IkReal x856=((r00)*(r11));
IkReal x857=((cj7)*(cj8));
IkReal x858=((sj7)*(x852));
IkReal x859=((sj7)*(x853));
gconst25=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x854)*(x858)))+(((IkReal(-1.00000000000000))*(r01)*(x854)*(x859)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x857)))+(((x856)*(x859)))+(((x856)*(x858)))+(((r01)*(r12)*(x857)))+(((r00)*(r12)*(x855)))+(((IkReal(-1.00000000000000))*(r02)*(x854)*(x855)))));
IkReal x860=(sj8)*(sj8);
IkReal x861=(cj8)*(cj8);
IkReal x862=((IkReal(1.00000000000000))*(r10));
IkReal x863=((cj7)*(sj8));
IkReal x864=((r00)*(r11));
IkReal x865=((cj7)*(cj8));
IkReal x866=((sj7)*(x860));
IkReal x867=((sj7)*(x861));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x862)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x865)))+(((r01)*(r12)*(x865)))+(((IkReal(-1.00000000000000))*(r01)*(x862)*(x866)))+(((IkReal(-1.00000000000000))*(r01)*(x862)*(x867)))+(((r00)*(r12)*(x863)))+(((x864)*(x866)))+(((x864)*(x867))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x868=(sj7)*(sj7);
IkReal x869=(cj7)*(cj7);
IkReal x870=((r02)*(r10));
IkReal x871=((r01)*(r12));
IkReal x872=((sj8)*(x868));
IkReal x873=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x874=((cj8)*(x869));
IkReal x875=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x876=((sj8)*(x869));
IkReal x877=((cj8)*(x868));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x872)*(x873)))+(((x871)*(x872)))+(((x871)*(x876)))+(((x870)*(x874)))+(((x870)*(x877)))+(((IkReal(-1.00000000000000))*(x873)*(x876)))+(((IkReal(-1.00000000000000))*(x875)*(x877)))+(((IkReal(-1.00000000000000))*(x874)*(x875)))));
IkReal x878=(sj7)*(sj7);
IkReal x879=(cj7)*(cj7);
IkReal x880=((r02)*(r10));
IkReal x881=((r01)*(r12));
IkReal x882=((sj8)*(x878));
IkReal x883=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x884=((cj8)*(x879));
IkReal x885=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x886=((sj8)*(x879));
IkReal x887=((cj8)*(x878));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x883)*(x886)))+(((x881)*(x886)))+(((x881)*(x882)))+(((IkReal(-1.00000000000000))*(x882)*(x883)))+(((x880)*(x887)))+(((x880)*(x884)))+(((IkReal(-1.00000000000000))*(x885)*(x887)))+(((IkReal(-1.00000000000000))*(x884)*(x885))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x888=((cj7)*(cj8));
IkReal x889=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst26)*(((((r10)*(x888)))+(((IkReal(-1.00000000000000))*(r11)*(x889)))+(((r12)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r00)*(x888)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x889))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst26)*(((((r10)*(x888)))+(((IkReal(-1.00000000000000))*(r11)*(x889)))+(((r12)*(sj7)))))), ((gconst26)*(((((r00)*(x888)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x889)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x890=IKsin(j3);
IkReal x891=IKcos(j3);
IkReal x892=((r01)*(sj8));
IkReal x893=((cj8)*(sj7));
IkReal x894=((IkReal(1.00000000000000))*(sj7));
IkReal x895=((IkReal(1.00000000000000))*(r12));
IkReal x896=((r11)*(sj8));
IkReal x897=((IkReal(1.00000000000000))*(r00));
IkReal x898=((cj7)*(x890));
IkReal x899=((r10)*(x891));
IkReal x900=((IkReal(1.00000000000000))*(cj7)*(x891));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x891)))+(((IkReal(-1.00000000000000))*(sj8)*(x899)))+(((r00)*(sj8)*(x890)))+(((cj8)*(r01)*(x890))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x896)*(x900)))+(((IkReal(-1.00000000000000))*(r02)*(x890)*(x894)))+(((r12)*(sj7)*(x891)))+(((cj7)*(cj8)*(x899)))+(((x892)*(x898)))+(((IkReal(-1.00000000000000))*(cj8)*(x897)*(x898))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r02)*(x898)))+(((sj7)*(x890)*(x892)))+(((IkReal(-1.00000000000000))*(x891)*(x894)*(x896)))+(((IkReal(-1.00000000000000))*(x890)*(x893)*(x897)))+(((x893)*(x899)))+(((IkReal(-1.00000000000000))*(cj7)*(x891)*(x895))));
evalcond[3]=((((r00)*(x891)*(x893)))+(((IkReal(-1.00000000000000))*(x895)*(x898)))+(((r10)*(x890)*(x893)))+(((IkReal(-1.00000000000000))*(x890)*(x894)*(x896)))+(((IkReal(-1.00000000000000))*(x891)*(x892)*(x894)))+(((IkReal(-1.00000000000000))*(r02)*(x900))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x901=((IkReal(1.00000000000000))*(sj5));
IkReal x902=((r20)*(sj8));
IkReal x903=((cj5)*(cj8));
IkReal x904=((r11)*(sj3));
IkReal x905=((cj3)*(r01));
IkReal x906=((cj3)*(r00)*(sj8));
IkReal x907=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(x903)))+(((IkReal(-1.00000000000000))*(x901)*(x906)))+(((IkReal(-1.00000000000000))*(x901)*(x907)))+(((IkReal(-1.00000000000000))*(cj5)*(x902)))+(((IkReal(-1.00000000000000))*(cj8)*(x901)*(x905)))+(((IkReal(-1.00000000000000))*(cj8)*(x901)*(x904))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((x903)*(x905)))+(((x903)*(x904)))+(((cj5)*(x907)))+(((cj5)*(x906)))+(((IkReal(-1.00000000000000))*(x901)*(x902)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x901))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(x903)))+(((IkReal(-1.00000000000000))*(x901)*(x906)))+(((IkReal(-1.00000000000000))*(x901)*(x907)))+(((IkReal(-1.00000000000000))*(cj5)*(x902)))+(((IkReal(-1.00000000000000))*(cj8)*(x901)*(x905)))+(((IkReal(-1.00000000000000))*(cj8)*(x901)*(x904)))))), ((gconst29)*(((((x903)*(x905)))+(((x903)*(x904)))+(((cj5)*(x907)))+(((cj5)*(x906)))+(((IkReal(-1.00000000000000))*(x901)*(x902)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x901)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x908=IKsin(j4);
IkReal x909=IKcos(j4);
IkReal x910=((IkReal(1.00000000000000))*(cj8));
IkReal x911=((cj3)*(r01));
IkReal x912=((cj3)*(r00));
IkReal x913=((cj7)*(cj8));
IkReal x914=((r11)*(sj3));
IkReal x915=((IkReal(1.00000000000000))*(sj8));
IkReal x916=((r10)*(sj3));
IkReal x917=((sj5)*(x909));
IkReal x918=((cj5)*(x908));
IkReal x919=((cj5)*(x909));
IkReal x920=((sj5)*(x908));
IkReal x921=((x918)+(x917));
evalcond[0]=((((cj8)*(r21)))+(x921)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x910)))+(((IkReal(-1.00000000000000))*(x919)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x920)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x920)))+(((IkReal(-1.00000000000000))*(x910)*(x911)))+(((IkReal(-1.00000000000000))*(x910)*(x914)))+(((IkReal(-1.00000000000000))*(x912)*(x915)))+(x919)+(((IkReal(-1.00000000000000))*(x915)*(x916))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x911)*(x915)))+(((cj3)*(r02)*(sj7)))+(((x912)*(x913)))+(((x913)*(x916)))+(x921)+(((IkReal(-1.00000000000000))*(cj7)*(x914)*(x915))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x922=((r22)*(sj7));
IkReal x923=((cj8)*(sj5));
IkReal x924=((sj5)*(sj8));
IkReal x925=((cj7)*(r20));
IkReal x926=((cj5)*(cj8));
IkReal x927=((cj7)*(r21));
IkReal x928=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(sj5)*(x922)))+(((x924)*(x927)))+(((r21)*(x926)))+(((IkReal(-1.00000000000000))*(x923)*(x925)))+(((r20)*(x928))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((r21)*(x923)))+(((r20)*(x924)))+(((x925)*(x926)))+(((cj5)*(x922))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(sj5)*(x922)))+(((x924)*(x927)))+(((r21)*(x926)))+(((IkReal(-1.00000000000000))*(x923)*(x925)))+(((r20)*(x928)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((r21)*(x923)))+(((r20)*(x924)))+(((x925)*(x926)))+(((cj5)*(x922)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x929=IKsin(j4);
IkReal x930=IKcos(j4);
IkReal x931=((IkReal(1.00000000000000))*(cj8));
IkReal x932=((cj3)*(r01));
IkReal x933=((cj3)*(r00));
IkReal x934=((cj7)*(cj8));
IkReal x935=((r11)*(sj3));
IkReal x936=((IkReal(1.00000000000000))*(sj8));
IkReal x937=((r10)*(sj3));
IkReal x938=((sj5)*(x930));
IkReal x939=((cj5)*(x929));
IkReal x940=((cj5)*(x930));
IkReal x941=((sj5)*(x929));
IkReal x942=((x939)+(x938));
evalcond[0]=((((cj8)*(r21)))+(x942)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(x940)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x941)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x931)*(x932)))+(((IkReal(-1.00000000000000))*(x931)*(x935)))+(((IkReal(-1.00000000000000))*(x941)))+(((IkReal(-1.00000000000000))*(x936)*(x937)))+(((IkReal(-1.00000000000000))*(x933)*(x936)))+(x940));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x932)*(x936)))+(((IkReal(-1.00000000000000))*(cj7)*(x935)*(x936)))+(((cj3)*(r02)*(sj7)))+(((x934)*(x937)))+(x942)+(((x933)*(x934))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x943=((IkReal(1.00000000000000))*(cj8));
IkReal x944=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r11)*(x943)))+(((IkReal(-1.00000000000000))*(r10)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x943)))+(((IkReal(-1.00000000000000))*(r00)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r11)*(x943)))+(((IkReal(-1.00000000000000))*(r10)*(x944)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x943)))+(((IkReal(-1.00000000000000))*(r00)*(x944)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x945=IKsin(j3);
IkReal x946=IKcos(j3);
IkReal x947=((r01)*(sj8));
IkReal x948=((cj8)*(sj7));
IkReal x949=((IkReal(1.00000000000000))*(sj7));
IkReal x950=((IkReal(1.00000000000000))*(r12));
IkReal x951=((r11)*(sj8));
IkReal x952=((IkReal(1.00000000000000))*(r00));
IkReal x953=((cj7)*(x945));
IkReal x954=((r10)*(x946));
IkReal x955=((IkReal(1.00000000000000))*(cj7)*(x946));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x946)))+(((cj8)*(r01)*(x945)))+(((r00)*(sj8)*(x945)))+(((IkReal(-1.00000000000000))*(sj8)*(x954))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x945)*(x949)))+(((cj7)*(cj8)*(x954)))+(((IkReal(-1.00000000000000))*(cj8)*(x952)*(x953)))+(((x947)*(x953)))+(((r12)*(sj7)*(x946)))+(((IkReal(-1.00000000000000))*(x951)*(x955))));
evalcond[2]=((IkReal(-1.00000000000000))+(((sj7)*(x945)*(x947)))+(((x948)*(x954)))+(((IkReal(-1.00000000000000))*(cj7)*(x946)*(x950)))+(((IkReal(-1.00000000000000))*(x946)*(x949)*(x951)))+(((r02)*(x953)))+(((IkReal(-1.00000000000000))*(x945)*(x948)*(x952))));
evalcond[3]=((((r00)*(x946)*(x948)))+(((IkReal(-1.00000000000000))*(x946)*(x947)*(x949)))+(((IkReal(-1.00000000000000))*(x950)*(x953)))+(((r10)*(x945)*(x948)))+(((IkReal(-1.00000000000000))*(r02)*(x955)))+(((IkReal(-1.00000000000000))*(x945)*(x949)*(x951))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x956=((IkReal(1.00000000000000))*(sj5));
IkReal x957=((r20)*(sj8));
IkReal x958=((cj5)*(cj8));
IkReal x959=((r11)*(sj3));
IkReal x960=((cj3)*(r01));
IkReal x961=((cj3)*(r00)*(sj8));
IkReal x962=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(x956)*(x959)))+(((IkReal(-1.00000000000000))*(cj8)*(x956)*(x960)))+(((IkReal(-1.00000000000000))*(x956)*(x962)))+(((IkReal(-1.00000000000000))*(x956)*(x961)))+(((IkReal(-1.00000000000000))*(cj5)*(x957)))+(((IkReal(-1.00000000000000))*(r21)*(x958))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x956)*(x957)))+(((x958)*(x959)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x956)))+(((x958)*(x960)))+(((cj5)*(x961)))+(((cj5)*(x962))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(x956)*(x959)))+(((IkReal(-1.00000000000000))*(cj8)*(x956)*(x960)))+(((IkReal(-1.00000000000000))*(x956)*(x962)))+(((IkReal(-1.00000000000000))*(x956)*(x961)))+(((IkReal(-1.00000000000000))*(cj5)*(x957)))+(((IkReal(-1.00000000000000))*(r21)*(x958)))))), ((gconst29)*(((((IkReal(-1.00000000000000))*(x956)*(x957)))+(((x958)*(x959)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x956)))+(((x958)*(x960)))+(((cj5)*(x961)))+(((cj5)*(x962)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x963=IKsin(j4);
IkReal x964=IKcos(j4);
IkReal x965=((IkReal(1.00000000000000))*(cj8));
IkReal x966=((cj3)*(r01));
IkReal x967=((cj3)*(r00));
IkReal x968=((cj7)*(cj8));
IkReal x969=((r11)*(sj3));
IkReal x970=((IkReal(1.00000000000000))*(sj8));
IkReal x971=((r10)*(sj3));
IkReal x972=((sj5)*(x964));
IkReal x973=((cj5)*(x963));
IkReal x974=((cj5)*(x964));
IkReal x975=((sj5)*(x963));
IkReal x976=((x973)+(x972));
evalcond[0]=((((cj8)*(r21)))+(x976)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x974)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x975)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x965))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x975)))+(((IkReal(-1.00000000000000))*(x965)*(x969)))+(((IkReal(-1.00000000000000))*(x965)*(x966)))+(((IkReal(-1.00000000000000))*(x967)*(x970)))+(((IkReal(-1.00000000000000))*(x970)*(x971)))+(x974));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x968)*(x971)))+(((IkReal(-1.00000000000000))*(cj7)*(x969)*(x970)))+(((x967)*(x968)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x966)*(x970)))+(x976));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x977=((r22)*(sj7));
IkReal x978=((cj8)*(sj5));
IkReal x979=((sj5)*(sj8));
IkReal x980=((cj7)*(r20));
IkReal x981=((cj5)*(cj8));
IkReal x982=((cj7)*(r21));
IkReal x983=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((r21)*(x981)))+(((IkReal(-1.00000000000000))*(x978)*(x980)))+(((x979)*(x982)))+(((IkReal(-1.00000000000000))*(sj5)*(x977)))+(((r20)*(x983))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(x982)*(x983)))+(((cj5)*(x977)))+(((r21)*(x978)))+(((r20)*(x979)))+(((x980)*(x981))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r21)*(x981)))+(((IkReal(-1.00000000000000))*(x978)*(x980)))+(((x979)*(x982)))+(((IkReal(-1.00000000000000))*(sj5)*(x977)))+(((r20)*(x983)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(x982)*(x983)))+(((cj5)*(x977)))+(((r21)*(x978)))+(((r20)*(x979)))+(((x980)*(x981)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x984=IKsin(j4);
IkReal x985=IKcos(j4);
IkReal x986=((IkReal(1.00000000000000))*(cj8));
IkReal x987=((cj3)*(r01));
IkReal x988=((cj3)*(r00));
IkReal x989=((cj7)*(cj8));
IkReal x990=((r11)*(sj3));
IkReal x991=((IkReal(1.00000000000000))*(sj8));
IkReal x992=((r10)*(sj3));
IkReal x993=((sj5)*(x985));
IkReal x994=((cj5)*(x984));
IkReal x995=((cj5)*(x985));
IkReal x996=((sj5)*(x984));
IkReal x997=((x993)+(x994));
evalcond[0]=((((cj8)*(r21)))+(x997)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x995)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x986)))+(x996)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x996)))+(((IkReal(-1.00000000000000))*(x991)*(x992)))+(((IkReal(-1.00000000000000))*(x986)*(x987)))+(x995)+(((IkReal(-1.00000000000000))*(x986)*(x990)))+(((IkReal(-1.00000000000000))*(x988)*(x991))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x989)*(x992)))+(((x988)*(x989)))+(((IkReal(-1.00000000000000))*(cj7)*(x987)*(x991)))+(((IkReal(-1.00000000000000))*(cj7)*(x990)*(x991)))+(((cj3)*(r02)*(sj7)))+(x997));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x998=((cj8)*(r21));
IkReal x999=((r22)*(sj7));
IkReal x1000=((sj5)*(sj8));
IkReal x1001=((IkReal(1.00000000000000))*(sj5));
IkReal x1002=((cj5)*(cj7));
IkReal x1003=((cj8)*(r20));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(cj7)*(x1001)*(x1003)))+(((cj5)*(x998)))+(((cj5)*(r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj7)*(r21)*(x1000))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((cj5)*(x999)))+(((sj5)*(x998)))+(((r20)*(x1000)))+(((x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(r21)*(sj8)*(x1002))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(cj7)*(x1001)*(x1003)))+(((cj5)*(x998)))+(((cj5)*(r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj7)*(r21)*(x1000)))))), ((gconst27)*(((((cj5)*(x999)))+(((sj5)*(x998)))+(((r20)*(x1000)))+(((x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(r21)*(sj8)*(x1002)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1004=IKsin(j4);
IkReal x1005=IKcos(j4);
evalcond[0]=((((cj8)*(r21)))+(((cj5)*(x1004)))+(((sj5)*(x1005)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)))+(((sj5)*(x1004)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(x1005)))+(((cj7)*(r21)*(sj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1006=(sj8)*(sj8);
IkReal x1007=(cj8)*(cj8);
IkReal x1008=((IkReal(1.00000000000000))*(r10));
IkReal x1009=((cj7)*(sj8));
IkReal x1010=((r00)*(r11));
IkReal x1011=((cj7)*(cj8));
IkReal x1012=((sj7)*(x1006));
IkReal x1013=((sj7)*(x1007));
gconst31=IKsign(((((r01)*(r12)*(x1011)))+(((r00)*(r12)*(x1009)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1011)))+(((IkReal(-1.00000000000000))*(r01)*(x1008)*(x1013)))+(((IkReal(-1.00000000000000))*(r01)*(x1008)*(x1012)))+(((x1010)*(x1013)))+(((x1010)*(x1012)))+(((IkReal(-1.00000000000000))*(r02)*(x1008)*(x1009)))));
IkReal x1014=(sj8)*(sj8);
IkReal x1015=(cj8)*(cj8);
IkReal x1016=((IkReal(1.00000000000000))*(r10));
IkReal x1017=((cj7)*(sj8));
IkReal x1018=((r00)*(r11));
IkReal x1019=((cj7)*(cj8));
IkReal x1020=((sj7)*(x1014));
IkReal x1021=((sj7)*(x1015));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(x1016)*(x1021)))+(((IkReal(-1.00000000000000))*(r01)*(x1016)*(x1020)))+(((r01)*(r12)*(x1019)))+(((r00)*(r12)*(x1017)))+(((x1018)*(x1021)))+(((x1018)*(x1020)))+(((IkReal(-1.00000000000000))*(r02)*(x1016)*(x1017)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1019))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1022=(cj8)*(cj8);
IkReal x1023=(sj8)*(sj8);
IkReal x1024=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1025=((IkReal(1.00000000000000))*(x1022));
IkReal x1026=((IkReal(1.00000000000000))*(x1023));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(x1025)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1026)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1024)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1024)))+(((IkReal(-1.00000000000000))*(x1026)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1025)*((r11)*(r11))))));
IkReal x1027=(cj8)*(cj8);
IkReal x1028=(sj8)*(sj8);
IkReal x1029=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1030=((IkReal(1.00000000000000))*(x1027));
IkReal x1031=((IkReal(1.00000000000000))*(x1028));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1030)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1030)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1029)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1029)))+(((IkReal(-1.00000000000000))*(x1031)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1031)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1032=((sj4)*(sj5));
IkReal x1033=((r10)*(sj8));
IkReal x1034=((cj8)*(r11));
IkReal x1035=((cj8)*(r01));
IkReal x1036=((r00)*(sj8));
IkReal x1037=((IkReal(1.00000000000000))*(cj4)*(cj5));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1033)*(x1037)))+(((IkReal(-1.00000000000000))*(x1034)*(x1037)))+(((x1032)*(x1034)))+(((x1032)*(x1033))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1035)*(x1037)))+(((IkReal(-1.00000000000000))*(x1036)*(x1037)))+(((x1032)*(x1035)))+(((x1032)*(x1036))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x1033)*(x1037)))+(((IkReal(-1.00000000000000))*(x1034)*(x1037)))+(((x1032)*(x1034)))+(((x1032)*(x1033)))))), ((gconst30)*(((((IkReal(-1.00000000000000))*(x1035)*(x1037)))+(((IkReal(-1.00000000000000))*(x1036)*(x1037)))+(((x1032)*(x1035)))+(((x1032)*(x1036)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1038=IKsin(j3);
IkReal x1039=IKcos(j3);
IkReal x1040=((cj7)*(sj8));
IkReal x1041=((r00)*(sj8));
IkReal x1042=((cj8)*(r11));
IkReal x1043=((cj7)*(r02));
IkReal x1044=((cj7)*(r12));
IkReal x1045=((r12)*(sj7));
IkReal x1046=((r02)*(sj7));
IkReal x1047=((sj7)*(sj8));
IkReal x1048=((r10)*(sj8));
IkReal x1049=((cj8)*(r00));
IkReal x1050=((r01)*(x1038));
IkReal x1051=((cj8)*(r10)*(sj7));
IkReal x1052=((IkReal(1.00000000000000))*(x1039));
IkReal x1053=((IkReal(1.00000000000000))*(x1038));
IkReal x1054=((cj7)*(cj8)*(r10));
IkReal x1055=((x1039)*(x1049));
evalcond[0]=((((x1038)*(x1041)))+(((IkReal(-1.00000000000000))*(x1042)*(x1052)))+(((cj8)*(x1050)))+(((IkReal(-1.00000000000000))*(x1048)*(x1052))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1052)))+(((IkReal(-1.00000000000000))*(x1042)*(x1053)))+(((IkReal(-1.00000000000000))*(x1041)*(x1052)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(x1048)*(x1053)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1046)*(x1053)))+(((x1039)*(x1054)))+(((x1039)*(x1045)))+(((x1040)*(x1050)))+(((IkReal(-1.00000000000000))*(cj7)*(x1049)*(x1053)))+(((IkReal(-1.00000000000000))*(r11)*(x1040)*(x1052))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1038)*(x1043)))+(((x1039)*(x1051)))+(((IkReal(-1.00000000000000))*(x1044)*(x1052)))+(((IkReal(-1.00000000000000))*(r11)*(x1047)*(x1052)))+(((IkReal(-1.00000000000000))*(sj7)*(x1049)*(x1053)))+(((x1047)*(x1050))));
evalcond[4]=((((x1038)*(x1045)))+(((x1038)*(x1054)))+(((cj7)*(x1055)))+(((IkReal(-1.00000000000000))*(r01)*(x1040)*(x1052)))+(((x1039)*(x1046)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1040)*(x1053))));
evalcond[5]=((((x1038)*(x1051)))+(((IkReal(-1.00000000000000))*(r01)*(x1047)*(x1052)))+(((IkReal(-1.00000000000000))*(x1044)*(x1053)))+(((IkReal(-1.00000000000000))*(x1043)*(x1052)))+(((sj7)*(x1055)))+(((IkReal(-1.00000000000000))*(r11)*(x1047)*(x1053))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1056=((IkReal(1.00000000000000))*(cj8));
IkReal x1057=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r10)*(x1057)))+(((IkReal(-1.00000000000000))*(r11)*(x1056))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r00)*(x1057)))+(((IkReal(-1.00000000000000))*(r01)*(x1056))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r10)*(x1057)))+(((IkReal(-1.00000000000000))*(r11)*(x1056)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r00)*(x1057)))+(((IkReal(-1.00000000000000))*(r01)*(x1056)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1058=IKsin(j3);
IkReal x1059=IKcos(j3);
IkReal x1060=((cj7)*(sj8));
IkReal x1061=((r00)*(sj8));
IkReal x1062=((cj8)*(r11));
IkReal x1063=((cj7)*(r02));
IkReal x1064=((cj7)*(r12));
IkReal x1065=((r12)*(sj7));
IkReal x1066=((r02)*(sj7));
IkReal x1067=((sj7)*(sj8));
IkReal x1068=((r10)*(sj8));
IkReal x1069=((cj8)*(r00));
IkReal x1070=((r01)*(x1058));
IkReal x1071=((cj8)*(r10)*(sj7));
IkReal x1072=((IkReal(1.00000000000000))*(x1059));
IkReal x1073=((IkReal(1.00000000000000))*(x1058));
IkReal x1074=((cj7)*(cj8)*(r10));
IkReal x1075=((x1059)*(x1069));
evalcond[0]=((((cj8)*(x1070)))+(((IkReal(-1.00000000000000))*(x1062)*(x1072)))+(((IkReal(-1.00000000000000))*(x1068)*(x1072)))+(((x1058)*(x1061))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1072)))+(((IkReal(-1.00000000000000))*(x1062)*(x1073)))+(((IkReal(-1.00000000000000))*(x1061)*(x1072)))+(((IkReal(-1.00000000000000))*(x1068)*(x1073)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5))));
evalcond[2]=((((x1060)*(x1070)))+(((IkReal(-1.00000000000000))*(r11)*(x1060)*(x1072)))+(((IkReal(-1.00000000000000))*(cj7)*(x1069)*(x1073)))+(((IkReal(-1.00000000000000))*(x1066)*(x1073)))+(((x1059)*(x1065)))+(((x1059)*(x1074))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1067)*(x1070)))+(((IkReal(-1.00000000000000))*(sj7)*(x1069)*(x1073)))+(((IkReal(-1.00000000000000))*(r11)*(x1067)*(x1072)))+(((IkReal(-1.00000000000000))*(x1064)*(x1072)))+(((x1059)*(x1071)))+(((x1058)*(x1063))));
evalcond[4]=((((x1058)*(x1074)))+(((cj7)*(x1075)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(r11)*(x1060)*(x1073)))+(((cj4)*(sj5)))+(((x1059)*(x1066)))+(((IkReal(-1.00000000000000))*(r01)*(x1060)*(x1072)))+(((x1058)*(x1065))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1063)*(x1072)))+(((x1058)*(x1071)))+(((sj7)*(x1075)))+(((IkReal(-1.00000000000000))*(r11)*(x1067)*(x1073)))+(((IkReal(-1.00000000000000))*(r01)*(x1067)*(x1072)))+(((IkReal(-1.00000000000000))*(x1064)*(x1073))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1076=((IkReal(1.00000000000000))*(sj7));
IkReal x1077=((npy)*(sj8));
IkReal x1078=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj7)*(x1077)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1078)))+(((IkReal(-1.00000000000000))*(npz)*(x1076))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x1077)))+(((IkReal(-1.00000000000000))*(x1076)*(x1078)))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1079=(sj8)*(sj8);
IkReal x1080=(cj8)*(cj8);
IkReal x1081=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst32=IKsign(((((x1079)*((r10)*(r10))))+(((x1079)*((r00)*(r00))))+(((r10)*(r11)*(x1081)))+(((x1080)*((r11)*(r11))))+(((x1080)*((r01)*(r01))))+(((r00)*(r01)*(x1081)))));
IkReal x1082=(sj8)*(sj8);
IkReal x1083=(cj8)*(cj8);
IkReal x1084=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x1082)*((r10)*(r10))))+(((x1082)*((r00)*(r00))))+(((x1083)*((r11)*(r11))))+(((r10)*(r11)*(x1084)))+(((r00)*(r01)*(x1084)))+(((x1083)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1085=(sj8)*(sj8);
IkReal x1086=(cj8)*(cj8);
IkReal x1087=((r00)*(r11));
IkReal x1088=((r02)*(sj7));
IkReal x1089=((cj7)*(x1086));
IkReal x1090=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1091=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1092=((cj7)*(x1085));
gconst33=IKsign(((((x1087)*(x1092)))+(((IkReal(-1.00000000000000))*(x1091)*(x1092)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1090)))+(((r10)*(sj8)*(x1088)))+(((IkReal(-1.00000000000000))*(x1089)*(x1091)))+(((x1087)*(x1089)))+(((cj8)*(r11)*(x1088)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1090)))));
IkReal x1093=(sj8)*(sj8);
IkReal x1094=(cj8)*(cj8);
IkReal x1095=((r00)*(r11));
IkReal x1096=((r02)*(sj7));
IkReal x1097=((cj7)*(x1094));
IkReal x1098=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1099=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1100=((cj7)*(x1093));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1098)))+(((cj8)*(r11)*(x1096)))+(((IkReal(-1.00000000000000))*(x1097)*(x1099)))+(((x1095)*(x1097)))+(((IkReal(-1.00000000000000))*(x1099)*(x1100)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1098)))+(((r10)*(sj8)*(x1096)))+(((x1095)*(x1100))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1101=((cj7)*(cj8));
IkReal x1102=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r11)*(x1102)))+(((r12)*(sj7)))+(((r10)*(x1101))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1102)))+(((r00)*(x1101)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(r11)*(x1102)))+(((r12)*(sj7)))+(((r10)*(x1101)))))), ((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1102)))+(((r00)*(x1101)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1103=IKsin(j3);
IkReal x1104=IKcos(j3);
IkReal x1105=((IkReal(1.00000000000000))*(sj8));
IkReal x1106=((IkReal(1.00000000000000))*(cj8));
IkReal x1107=((r01)*(sj8));
IkReal x1108=((cj8)*(r10));
IkReal x1109=((sj7)*(x1104));
IkReal x1110=((cj7)*(x1103));
IkReal x1111=((r00)*(x1103));
IkReal x1112=((sj7)*(x1103));
IkReal x1113=((cj7)*(x1104));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1104)*(x1106)))+(((cj8)*(r01)*(x1103)))+(((IkReal(-1.00000000000000))*(r10)*(x1104)*(x1105)))+(((sj8)*(x1111))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1103)*(x1106)))+(((IkReal(-1.00000000000000))*(r10)*(x1103)*(x1105)))+(((IkReal(-1.00000000000000))*(r01)*(x1104)*(x1106)))+(((IkReal(-1.00000000000000))*(r00)*(x1104)*(x1105))));
evalcond[2]=((((x1108)*(x1113)))+(((IkReal(-1.00000000000000))*(r02)*(x1112)))+(((IkReal(-1.00000000000000))*(r11)*(x1105)*(x1113)))+(((IkReal(-1.00000000000000))*(r00)*(x1106)*(x1110)))+(((r12)*(x1109)))+(((x1107)*(x1110))));
evalcond[3]=((((x1108)*(x1109)))+(((IkReal(-1.00000000000000))*(r11)*(x1105)*(x1109)))+(((IkReal(-1.00000000000000))*(r12)*(x1113)))+(((IkReal(-1.00000000000000))*(sj7)*(x1106)*(x1111)))+(((x1107)*(x1112)))+(((r02)*(x1110))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1114=((cj3)*(cj5));
IkReal x1115=((r02)*(sj7));
IkReal x1116=((cj5)*(sj7));
IkReal x1117=((cj3)*(sj5));
IkReal x1118=((cj5)*(sj3));
IkReal x1119=((cj7)*(cj8));
IkReal x1120=((IkReal(1.00000000000000))*(sj5));
IkReal x1121=((r12)*(sj3));
IkReal x1122=((sj3)*(sj5));
IkReal x1123=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((r00)*(x1114)*(x1119)))+(((x1114)*(x1115)))+(((r10)*(x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(r11)*(x1118)*(x1123)))+(((IkReal(-1.00000000000000))*(r20)*(x1119)*(x1120)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1120)))+(((x1116)*(x1121)))+(((IkReal(-1.00000000000000))*(r01)*(x1114)*(x1123))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1123)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1120)))+(((sj5)*(sj7)*(x1121)))+(((r22)*(x1116)))+(((r10)*(x1119)*(x1122)))+(((cj5)*(r20)*(x1119)))+(((x1115)*(x1117)))+(((IkReal(-1.00000000000000))*(r01)*(x1117)*(x1123)))+(((r00)*(x1117)*(x1119))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((r00)*(x1114)*(x1119)))+(((x1114)*(x1115)))+(((r10)*(x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(r11)*(x1118)*(x1123)))+(((IkReal(-1.00000000000000))*(r20)*(x1119)*(x1120)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1120)))+(((x1116)*(x1121)))+(((IkReal(-1.00000000000000))*(r01)*(x1114)*(x1123)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1123)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1120)))+(((sj5)*(sj7)*(x1121)))+(((r22)*(x1116)))+(((r10)*(x1119)*(x1122)))+(((cj5)*(r20)*(x1119)))+(((x1115)*(x1117)))+(((IkReal(-1.00000000000000))*(r01)*(x1117)*(x1123)))+(((r00)*(x1117)*(x1119)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1124=IKcos(j4);
IkReal x1125=IKsin(j4);
IkReal x1126=((IkReal(1.00000000000000))*(cj7));
IkReal x1127=((cj8)*(r20));
IkReal x1128=((cj3)*(r02));
IkReal x1129=((IkReal(1.00000000000000))*(sj7));
IkReal x1130=((sj3)*(sj7));
IkReal x1131=((r21)*(sj8));
IkReal x1132=((cj8)*(r10));
IkReal x1133=((sj5)*(x1124));
IkReal x1134=((cj5)*(x1125));
IkReal x1135=((r11)*(sj3)*(sj8));
IkReal x1136=((cj3)*(cj8)*(r00));
IkReal x1137=((cj5)*(x1124));
IkReal x1138=((cj3)*(r01)*(sj8));
IkReal x1139=((sj5)*(x1125));
IkReal x1140=((x1133)+(x1134));
evalcond[0]=((x1139)+(((cj7)*(x1131)))+(((IkReal(-1.00000000000000))*(x1126)*(x1127)))+(((IkReal(-1.00000000000000))*(r22)*(x1129)))+(((IkReal(-1.00000000000000))*(x1137))));
evalcond[1]=((x1140)+(((IkReal(-1.00000000000000))*(x1127)*(x1129)))+(((sj7)*(x1131)))+(((cj7)*(r22))));
evalcond[2]=((x1140)+(((cj7)*(x1136)))+(((IkReal(-1.00000000000000))*(x1126)*(x1135)))+(((IkReal(-1.00000000000000))*(x1126)*(x1138)))+(((r12)*(x1130)))+(((sj7)*(x1128)))+(((cj7)*(sj3)*(x1132))));
evalcond[3]=((x1137)+(((x1130)*(x1132)))+(((IkReal(-1.00000000000000))*(x1126)*(x1128)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1126)))+(((IkReal(-1.00000000000000))*(x1139)))+(((sj7)*(x1136)))+(((IkReal(-1.00000000000000))*(x1129)*(x1135)))+(((IkReal(-1.00000000000000))*(x1129)*(x1138))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1141=((sj5)*(sj7));
IkReal x1142=((r21)*(sj8));
IkReal x1143=((cj5)*(sj7));
IkReal x1144=((cj8)*(r20));
IkReal x1145=((cj5)*(cj7));
IkReal x1146=((cj7)*(sj5));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1144)*(x1146)))+(((IkReal(-1.00000000000000))*(r22)*(x1141)))+(((r22)*(x1145)))+(((x1142)*(x1146)))+(((x1142)*(x1143)))+(((IkReal(-1.00000000000000))*(x1143)*(x1144))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((r22)*(x1143)))+(((r22)*(x1146)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1141)*(x1144)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145)))+(((x1144)*(x1145))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(x1144)*(x1146)))+(((IkReal(-1.00000000000000))*(r22)*(x1141)))+(((r22)*(x1145)))+(((x1142)*(x1146)))+(((x1142)*(x1143)))+(((IkReal(-1.00000000000000))*(x1143)*(x1144)))))), ((gconst35)*(((((r22)*(x1143)))+(((r22)*(x1146)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1141)*(x1144)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145)))+(((x1144)*(x1145)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1147=IKcos(j4);
IkReal x1148=IKsin(j4);
IkReal x1149=((IkReal(1.00000000000000))*(cj7));
IkReal x1150=((cj8)*(r20));
IkReal x1151=((cj3)*(r02));
IkReal x1152=((IkReal(1.00000000000000))*(sj7));
IkReal x1153=((sj3)*(sj7));
IkReal x1154=((r21)*(sj8));
IkReal x1155=((cj8)*(r10));
IkReal x1156=((sj5)*(x1147));
IkReal x1157=((cj5)*(x1148));
IkReal x1158=((r11)*(sj3)*(sj8));
IkReal x1159=((cj3)*(cj8)*(r00));
IkReal x1160=((cj5)*(x1147));
IkReal x1161=((cj3)*(r01)*(sj8));
IkReal x1162=((sj5)*(x1148));
IkReal x1163=((x1157)+(x1156));
evalcond[0]=((x1162)+(((IkReal(-1.00000000000000))*(x1149)*(x1150)))+(((IkReal(-1.00000000000000))*(r22)*(x1152)))+(((cj7)*(x1154)))+(((IkReal(-1.00000000000000))*(x1160))));
evalcond[1]=((x1163)+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1150)*(x1152)))+(((sj7)*(x1154))));
evalcond[2]=((x1163)+(((IkReal(-1.00000000000000))*(x1149)*(x1158)))+(((r12)*(x1153)))+(((IkReal(-1.00000000000000))*(x1149)*(x1161)))+(((cj7)*(sj3)*(x1155)))+(((cj7)*(x1159)))+(((sj7)*(x1151))));
evalcond[3]=((x1160)+(((IkReal(-1.00000000000000))*(x1149)*(x1151)))+(((IkReal(-1.00000000000000))*(x1152)*(x1161)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1149)))+(((x1153)*(x1155)))+(((IkReal(-1.00000000000000))*(x1152)*(x1158)))+(((IkReal(-1.00000000000000))*(x1162)))+(((sj7)*(x1159))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1164=((sj5)*(sj7));
IkReal x1165=((r21)*(sj8));
IkReal x1166=((cj5)*(sj7));
IkReal x1167=((cj7)*(sj5));
IkReal x1168=((cj5)*(cj7));
IkReal x1169=((IkReal(1.00000000000000))*(cj8)*(r20));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x1166)*(x1169)))+(((x1165)*(x1166)))+(((x1165)*(x1167)))+(((IkReal(-1.00000000000000))*(x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(r22)*(x1164)))+(((r22)*(x1168))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((x1164)*(x1165)))+(((IkReal(-1.00000000000000))*(x1165)*(x1168)))+(((cj8)*(r20)*(x1168)))+(((r22)*(x1166)))+(((r22)*(x1167)))+(((IkReal(-1.00000000000000))*(x1164)*(x1169))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(x1166)*(x1169)))+(((x1165)*(x1166)))+(((x1165)*(x1167)))+(((IkReal(-1.00000000000000))*(x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(r22)*(x1164)))+(((r22)*(x1168)))))), ((gconst34)*(((((x1164)*(x1165)))+(((IkReal(-1.00000000000000))*(x1165)*(x1168)))+(((cj8)*(r20)*(x1168)))+(((r22)*(x1166)))+(((r22)*(x1167)))+(((IkReal(-1.00000000000000))*(x1164)*(x1169)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1170=IKcos(j4);
IkReal x1171=IKsin(j4);
IkReal x1172=((r21)*(sj8));
IkReal x1173=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj7)*(x1173)))+(((cj7)*(x1172)))+(((IkReal(-1.00000000000000))*(cj5)*(x1170)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x1171))));
evalcond[1]=((((cj5)*(x1171)))+(((sj7)*(x1172)))+(((sj5)*(x1170)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(sj7)*(x1173))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1174=(sj8)*(sj8);
IkReal x1175=(cj8)*(cj8);
IkReal x1176=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst37=IKsign(((((x1175)*((r11)*(r11))))+(((r10)*(r11)*(x1176)))+(((x1174)*((r00)*(r00))))+(((r00)*(r01)*(x1176)))+(((x1174)*((r10)*(r10))))+(((x1175)*((r01)*(r01))))));
IkReal x1177=(sj8)*(sj8);
IkReal x1178=(cj8)*(cj8);
IkReal x1179=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x1178)*((r11)*(r11))))+(((r10)*(r11)*(x1179)))+(((r00)*(r01)*(x1179)))+(((x1177)*((r10)*(r10))))+(((x1178)*((r01)*(r01))))+(((x1177)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1180=(sj8)*(sj8);
IkReal x1181=(cj8)*(cj8);
IkReal x1182=((r00)*(r11));
IkReal x1183=((r02)*(sj7));
IkReal x1184=((cj7)*(x1181));
IkReal x1185=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1186=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1187=((cj7)*(x1180));
gconst38=IKsign(((((r10)*(sj8)*(x1183)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1185)))+(((cj8)*(r11)*(x1183)))+(((x1182)*(x1184)))+(((x1182)*(x1187)))+(((IkReal(-1.00000000000000))*(x1186)*(x1187)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1185)))+(((IkReal(-1.00000000000000))*(x1184)*(x1186)))));
IkReal x1188=(sj8)*(sj8);
IkReal x1189=(cj8)*(cj8);
IkReal x1190=((r00)*(r11));
IkReal x1191=((r02)*(sj7));
IkReal x1192=((cj7)*(x1189));
IkReal x1193=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1194=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1195=((cj7)*(x1188));
dummyeval[0]=((((r10)*(sj8)*(x1191)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1193)))+(((cj8)*(r11)*(x1191)))+(((IkReal(-1.00000000000000))*(x1194)*(x1195)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1194)))+(((x1190)*(x1195)))+(((x1190)*(x1192))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1196=((cj7)*(cj8));
IkReal x1197=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst38)*(((((r10)*(x1196)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1197))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((r00)*(x1196)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1197))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst38)*(((((r10)*(x1196)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1197)))))), ((gconst38)*(((((r00)*(x1196)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1197)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1198=IKsin(j3);
IkReal x1199=IKcos(j3);
IkReal x1200=((r01)*(sj8));
IkReal x1201=((cj8)*(r00));
IkReal x1202=((r00)*(sj8));
IkReal x1203=((cj8)*(r11));
IkReal x1204=((r11)*(sj8));
IkReal x1205=((r10)*(sj8));
IkReal x1206=((cj8)*(r10));
IkReal x1207=((cj7)*(x1198));
IkReal x1208=((sj7)*(x1199));
IkReal x1209=((IkReal(1.00000000000000))*(x1198));
IkReal x1210=((IkReal(1.00000000000000))*(x1199));
IkReal x1211=((cj8)*(x1198));
IkReal x1212=((IkReal(1.00000000000000))*(x1204));
IkReal x1213=((sj7)*(x1198));
IkReal x1214=((cj7)*(x1199));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1203)*(x1210)))+(((r01)*(x1211)))+(((IkReal(-1.00000000000000))*(x1205)*(x1210)))+(((x1198)*(x1202))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1210)))+(((IkReal(-1.00000000000000))*(x1202)*(x1210)))+(((IkReal(-1.00000000000000))*(x1205)*(x1209)))+(((IkReal(-1.00000000000000))*(x1203)*(x1209))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj7)*(x1204)*(x1210)))+(((r12)*(x1208)))+(((x1206)*(x1214)))+(((x1200)*(x1207)))+(((IkReal(-1.00000000000000))*(x1201)*(x1207)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1209))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((x1200)*(x1213)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1210)))+(((x1206)*(x1208)))+(((r02)*(x1207)))+(((IkReal(-1.00000000000000))*(sj7)*(x1201)*(x1209))));
evalcond[4]=((((r12)*(x1213)))+(((IkReal(-1.00000000000000))*(x1207)*(x1212)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1200)*(x1210)))+(((x1201)*(x1214)))+(((x1206)*(x1207)))+(((r02)*(x1208))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1200)*(x1208)))+(((x1206)*(x1213)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(sj7)*(x1204)*(x1209)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1210)))+(((x1201)*(x1208)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(r12)*(x1207))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst37)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1215=IKsin(j3);
IkReal x1216=IKcos(j3);
IkReal x1217=((r01)*(sj8));
IkReal x1218=((cj8)*(r00));
IkReal x1219=((r00)*(sj8));
IkReal x1220=((cj8)*(r11));
IkReal x1221=((r11)*(sj8));
IkReal x1222=((r10)*(sj8));
IkReal x1223=((cj8)*(r10));
IkReal x1224=((cj7)*(x1215));
IkReal x1225=((sj7)*(x1216));
IkReal x1226=((IkReal(1.00000000000000))*(x1215));
IkReal x1227=((IkReal(1.00000000000000))*(x1216));
IkReal x1228=((cj8)*(x1215));
IkReal x1229=((IkReal(1.00000000000000))*(x1221));
IkReal x1230=((sj7)*(x1215));
IkReal x1231=((cj7)*(x1216));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x1228)))+(((IkReal(-1.00000000000000))*(x1220)*(x1227)))+(((IkReal(-1.00000000000000))*(x1222)*(x1227)))+(((x1215)*(x1219))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1220)*(x1226)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1227)))+(((IkReal(-1.00000000000000))*(x1219)*(x1227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1218)*(x1224)))+(((x1217)*(x1224)))+(((x1223)*(x1231)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1226)))+(((IkReal(-1.00000000000000))*(cj7)*(x1221)*(x1227)))+(((r12)*(x1225))));
evalcond[3]=((((x1217)*(x1230)))+(((IkReal(-1.00000000000000))*(x1225)*(x1229)))+(((x1223)*(x1225)))+(((r02)*(x1224)))+(((IkReal(-1.00000000000000))*(sj7)*(x1218)*(x1226)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1227))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x1217)*(x1227)))+(((IkReal(-1.00000000000000))*(x1224)*(x1229)))+(((x1223)*(x1224)))+(((cj5)*(sj4)))+(((r02)*(x1225)))+(((cj4)*(sj5)))+(((x1218)*(x1231)))+(((r12)*(x1230))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1221)*(x1226)))+(((IkReal(-1.00000000000000))*(x1217)*(x1225)))+(((x1223)*(x1230)))+(((IkReal(-1.00000000000000))*(r12)*(x1224)))+(((cj4)*(cj5)))+(((x1218)*(x1225)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1227)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst32)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1232=IKsin(j3);
IkReal x1233=IKcos(j3);
IkReal x1234=((IkReal(1.00000000000000))*(sj8));
IkReal x1235=((IkReal(1.00000000000000))*(cj8));
IkReal x1236=((r01)*(sj8));
IkReal x1237=((cj8)*(r10));
IkReal x1238=((sj7)*(x1233));
IkReal x1239=((cj7)*(x1232));
IkReal x1240=((r00)*(x1232));
IkReal x1241=((sj7)*(x1232));
IkReal x1242=((cj7)*(x1233));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1233)*(x1235)))+(((cj8)*(r01)*(x1232)))+(((IkReal(-1.00000000000000))*(r10)*(x1233)*(x1234)))+(((sj8)*(x1240))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1232)*(x1235)))+(((IkReal(-1.00000000000000))*(r00)*(x1233)*(x1234)))+(((IkReal(-1.00000000000000))*(r01)*(x1233)*(x1235)))+(((IkReal(-1.00000000000000))*(r10)*(x1232)*(x1234))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1235)*(x1239)))+(((IkReal(-1.00000000000000))*(r11)*(x1234)*(x1242)))+(((IkReal(-1.00000000000000))*(r02)*(x1241)))+(((x1236)*(x1239)))+(((x1237)*(x1242)))+(((r12)*(x1238))));
evalcond[3]=((((x1236)*(x1241)))+(((IkReal(-1.00000000000000))*(r12)*(x1242)))+(((IkReal(-1.00000000000000))*(r11)*(x1234)*(x1238)))+(((r02)*(x1239)))+(((IkReal(-1.00000000000000))*(sj7)*(x1235)*(x1240)))+(((x1237)*(x1238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1243=((cj3)*(cj5));
IkReal x1244=((r02)*(sj7));
IkReal x1245=((cj5)*(sj7));
IkReal x1246=((cj3)*(sj5));
IkReal x1247=((cj5)*(sj3));
IkReal x1248=((cj7)*(cj8));
IkReal x1249=((IkReal(1.00000000000000))*(sj5));
IkReal x1250=((r12)*(sj3));
IkReal x1251=((sj3)*(sj5));
IkReal x1252=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x1248)*(x1249)))+(((x1245)*(x1250)))+(((r00)*(x1243)*(x1248)))+(((IkReal(-1.00000000000000))*(r11)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1249)))+(((x1243)*(x1244)))+(((IkReal(-1.00000000000000))*(r01)*(x1243)*(x1252)))+(((r10)*(x1247)*(x1248))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1249)))+(((cj5)*(r20)*(x1248)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1252)))+(((r10)*(x1248)*(x1251)))+(((IkReal(-1.00000000000000))*(r01)*(x1246)*(x1252)))+(((r00)*(x1246)*(x1248)))+(((sj5)*(sj7)*(x1250)))+(((x1244)*(x1246)))+(((r22)*(x1245))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x1248)*(x1249)))+(((x1245)*(x1250)))+(((r00)*(x1243)*(x1248)))+(((IkReal(-1.00000000000000))*(r11)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1249)))+(((x1243)*(x1244)))+(((IkReal(-1.00000000000000))*(r01)*(x1243)*(x1252)))+(((r10)*(x1247)*(x1248)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1249)))+(((cj5)*(r20)*(x1248)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1252)))+(((r10)*(x1248)*(x1251)))+(((IkReal(-1.00000000000000))*(r01)*(x1246)*(x1252)))+(((r00)*(x1246)*(x1248)))+(((sj5)*(sj7)*(x1250)))+(((x1244)*(x1246)))+(((r22)*(x1245)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1253=IKcos(j4);
IkReal x1254=IKsin(j4);
IkReal x1255=((IkReal(1.00000000000000))*(cj7));
IkReal x1256=((cj8)*(r20));
IkReal x1257=((cj3)*(r02));
IkReal x1258=((IkReal(1.00000000000000))*(sj7));
IkReal x1259=((sj3)*(sj7));
IkReal x1260=((r21)*(sj8));
IkReal x1261=((cj8)*(r10));
IkReal x1262=((sj5)*(x1253));
IkReal x1263=((cj5)*(x1254));
IkReal x1264=((r11)*(sj3)*(sj8));
IkReal x1265=((cj3)*(cj8)*(r00));
IkReal x1266=((cj5)*(x1253));
IkReal x1267=((cj3)*(r01)*(sj8));
IkReal x1268=((sj5)*(x1254));
IkReal x1269=((x1263)+(x1262));
evalcond[0]=((x1268)+(((cj7)*(x1260)))+(((IkReal(-1.00000000000000))*(r22)*(x1258)))+(((IkReal(-1.00000000000000))*(x1255)*(x1256)))+(((IkReal(-1.00000000000000))*(x1266))));
evalcond[1]=((x1269)+(((sj7)*(x1260)))+(((IkReal(-1.00000000000000))*(x1256)*(x1258)))+(((cj7)*(r22))));
evalcond[2]=((x1269)+(((cj7)*(x1265)))+(((r12)*(x1259)))+(((sj7)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1267)))+(((IkReal(-1.00000000000000))*(x1255)*(x1264)))+(((cj7)*(sj3)*(x1261))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1258)*(x1267)))+(((IkReal(-1.00000000000000))*(x1258)*(x1264)))+(x1266)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1255)))+(((sj7)*(x1265)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((x1259)*(x1261)))+(((IkReal(-1.00000000000000))*(x1268))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1270=((sj5)*(sj7));
IkReal x1271=((r21)*(sj8));
IkReal x1272=((cj5)*(sj7));
IkReal x1273=((cj8)*(r20));
IkReal x1274=((cj5)*(cj7));
IkReal x1275=((cj7)*(sj5));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1273)*(x1275)))+(((r22)*(x1274)))+(((IkReal(-1.00000000000000))*(r22)*(x1270)))+(((IkReal(-1.00000000000000))*(x1272)*(x1273)))+(((x1271)*(x1275)))+(((x1271)*(x1272))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1271)*(x1274)))+(((r22)*(x1272)))+(((r22)*(x1275)))+(((x1273)*(x1274)))+(((x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1270)*(x1273))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(x1273)*(x1275)))+(((r22)*(x1274)))+(((IkReal(-1.00000000000000))*(r22)*(x1270)))+(((IkReal(-1.00000000000000))*(x1272)*(x1273)))+(((x1271)*(x1275)))+(((x1271)*(x1272)))))), ((gconst35)*(((((IkReal(-1.00000000000000))*(x1271)*(x1274)))+(((r22)*(x1272)))+(((r22)*(x1275)))+(((x1273)*(x1274)))+(((x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1270)*(x1273)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1276=IKcos(j4);
IkReal x1277=IKsin(j4);
IkReal x1278=((IkReal(1.00000000000000))*(cj7));
IkReal x1279=((cj8)*(r20));
IkReal x1280=((cj3)*(r02));
IkReal x1281=((IkReal(1.00000000000000))*(sj7));
IkReal x1282=((sj3)*(sj7));
IkReal x1283=((r21)*(sj8));
IkReal x1284=((cj8)*(r10));
IkReal x1285=((sj5)*(x1276));
IkReal x1286=((cj5)*(x1277));
IkReal x1287=((r11)*(sj3)*(sj8));
IkReal x1288=((cj3)*(cj8)*(r00));
IkReal x1289=((cj5)*(x1276));
IkReal x1290=((cj3)*(r01)*(sj8));
IkReal x1291=((sj5)*(x1277));
IkReal x1292=((x1285)+(x1286));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1289)))+(x1291)+(((IkReal(-1.00000000000000))*(r22)*(x1281)))+(((cj7)*(x1283)))+(((IkReal(-1.00000000000000))*(x1278)*(x1279))));
evalcond[1]=((x1292)+(((IkReal(-1.00000000000000))*(x1279)*(x1281)))+(((cj7)*(r22)))+(((sj7)*(x1283))));
evalcond[2]=((x1292)+(((IkReal(-1.00000000000000))*(x1278)*(x1290)))+(((cj7)*(x1288)))+(((cj7)*(sj3)*(x1284)))+(((IkReal(-1.00000000000000))*(x1278)*(x1287)))+(((sj7)*(x1280)))+(((r12)*(x1282))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1278)))+(x1289)+(((IkReal(-1.00000000000000))*(x1281)*(x1290)))+(((IkReal(-1.00000000000000))*(x1278)*(x1280)))+(((IkReal(-1.00000000000000))*(x1291)))+(((x1282)*(x1284)))+(((sj7)*(x1288)))+(((IkReal(-1.00000000000000))*(x1281)*(x1287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1293=((IkReal(1.00000000000000))*(sj7));
IkReal x1294=((npy)*(sj8));
IkReal x1295=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x1295)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x1293)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x1294))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((sj7)*(x1294)))+(((IkReal(-1.00000000000000))*(x1293)*(x1295)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1296=(cj8)*(cj8);
IkReal x1297=(sj8)*(sj8);
IkReal x1298=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1299=((IkReal(1.00000000000000))*(x1296));
IkReal x1300=((IkReal(1.00000000000000))*(x1297));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1298)))+(((IkReal(-1.00000000000000))*(x1299)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1298)))+(((IkReal(-1.00000000000000))*(x1299)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1300)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1300)*((r00)*(r00))))));
IkReal x1301=(cj8)*(cj8);
IkReal x1302=(sj8)*(sj8);
IkReal x1303=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1304=((IkReal(1.00000000000000))*(x1301));
IkReal x1305=((IkReal(1.00000000000000))*(x1302));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1305)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1305)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1303)))+(((IkReal(-1.00000000000000))*(x1304)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1304)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1303))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1306=(sj8)*(sj8);
IkReal x1307=(cj8)*(cj8);
IkReal x1308=((sj7)*(sj8));
IkReal x1309=((IkReal(1.00000000000000))*(r02));
IkReal x1310=((r01)*(r10));
IkReal x1311=((cj8)*(sj7));
IkReal x1312=((cj7)*(x1306));
IkReal x1313=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1314=((cj7)*(x1307));
gconst40=IKsign(((((x1310)*(x1312)))+(((x1310)*(x1314)))+(((IkReal(-1.00000000000000))*(x1313)*(x1314)))+(((r01)*(r12)*(x1311)))+(((IkReal(-1.00000000000000))*(r10)*(x1308)*(x1309)))+(((IkReal(-1.00000000000000))*(r11)*(x1309)*(x1311)))+(((r00)*(r12)*(x1308)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313)))));
IkReal x1315=(sj8)*(sj8);
IkReal x1316=(cj8)*(cj8);
IkReal x1317=((sj7)*(sj8));
IkReal x1318=((IkReal(1.00000000000000))*(r02));
IkReal x1319=((r01)*(r10));
IkReal x1320=((cj8)*(sj7));
IkReal x1321=((cj7)*(x1315));
IkReal x1322=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1323=((cj7)*(x1316));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x1318)*(x1320)))+(((IkReal(-1.00000000000000))*(x1322)*(x1323)))+(((r01)*(r12)*(x1320)))+(((x1319)*(x1321)))+(((x1319)*(x1323)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(((r00)*(r12)*(x1317)))+(((IkReal(-1.00000000000000))*(r10)*(x1317)*(x1318))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1324=((cj7)*(cj8));
IkReal x1325=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst40)*(((((r10)*(x1324)))+(((IkReal(-1.00000000000000))*(r11)*(x1325)))+(((r12)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r00)*(x1324)))+(((IkReal(-1.00000000000000))*(r01)*(x1325)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst40)*(((((r10)*(x1324)))+(((IkReal(-1.00000000000000))*(r11)*(x1325)))+(((r12)*(sj7)))))), ((gconst40)*(((((r00)*(x1324)))+(((IkReal(-1.00000000000000))*(r01)*(x1325)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1326=IKsin(j3);
IkReal x1327=IKcos(j3);
IkReal x1328=((IkReal(1.00000000000000))*(sj8));
IkReal x1329=((IkReal(1.00000000000000))*(cj8));
IkReal x1330=((r01)*(sj8));
IkReal x1331=((cj8)*(r10));
IkReal x1332=((sj7)*(x1327));
IkReal x1333=((cj7)*(x1326));
IkReal x1334=((r00)*(x1326));
IkReal x1335=((sj7)*(x1326));
IkReal x1336=((cj7)*(x1327));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj8)*(r01)*(x1326)))+(((IkReal(-1.00000000000000))*(r11)*(x1327)*(x1329)))+(((sj8)*(x1334)))+(((IkReal(-1.00000000000000))*(r10)*(x1327)*(x1328))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1327)*(x1329)))+(((IkReal(-1.00000000000000))*(r00)*(x1327)*(x1328)))+(((IkReal(-1.00000000000000))*(r11)*(x1326)*(x1329)))+(((IkReal(-1.00000000000000))*(r10)*(x1326)*(x1328))));
evalcond[2]=((((r12)*(x1332)))+(((x1331)*(x1336)))+(((IkReal(-1.00000000000000))*(r11)*(x1328)*(x1336)))+(((IkReal(-1.00000000000000))*(r00)*(x1329)*(x1333)))+(((x1330)*(x1333)))+(((IkReal(-1.00000000000000))*(r02)*(x1335))));
evalcond[3]=((((x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(r11)*(x1328)*(x1332)))+(((IkReal(-1.00000000000000))*(sj7)*(x1329)*(x1334)))+(((IkReal(-1.00000000000000))*(r12)*(x1336)))+(((x1330)*(x1335)))+(((r02)*(x1333))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1337=((cj3)*(r01));
IkReal x1338=((cj5)*(sj7));
IkReal x1339=((r11)*(sj3));
IkReal x1340=((r10)*(sj3));
IkReal x1341=((cj3)*(r00));
IkReal x1342=((r12)*(sj3));
IkReal x1343=((sj5)*(sj7));
IkReal x1344=((cj7)*(sj5));
IkReal x1345=((cj3)*(r02)*(sj7));
IkReal x1346=((IkReal(1.00000000000000))*(x1344));
IkReal x1347=((cj5)*(cj7)*(cj8));
IkReal x1348=((IkReal(1.00000000000000))*(cj5)*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1346)))+(((x1340)*(x1347)))+(((x1341)*(x1347)))+(((x1338)*(x1342)))+(((IkReal(-1.00000000000000))*(x1339)*(x1348)))+(((r21)*(sj8)*(x1344)))+(((IkReal(-1.00000000000000))*(r22)*(x1343)))+(((IkReal(-1.00000000000000))*(x1337)*(x1348)))+(((cj3)*(r02)*(x1338))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((cj8)*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(r21)*(x1348)))+(((cj8)*(x1341)*(x1344)))+(((IkReal(-1.00000000000000))*(sj8)*(x1337)*(x1346)))+(((IkReal(-1.00000000000000))*(sj8)*(x1339)*(x1346)))+(((cj3)*(r02)*(x1343)))+(((x1342)*(x1343)))+(((r22)*(x1338)))+(((r20)*(x1347))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1346)))+(((x1340)*(x1347)))+(((x1341)*(x1347)))+(((x1338)*(x1342)))+(((IkReal(-1.00000000000000))*(x1339)*(x1348)))+(((r21)*(sj8)*(x1344)))+(((IkReal(-1.00000000000000))*(r22)*(x1343)))+(((IkReal(-1.00000000000000))*(x1337)*(x1348)))+(((cj3)*(r02)*(x1338)))))), ((gconst43)*(((((cj8)*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(r21)*(x1348)))+(((cj8)*(x1341)*(x1344)))+(((IkReal(-1.00000000000000))*(sj8)*(x1337)*(x1346)))+(((IkReal(-1.00000000000000))*(sj8)*(x1339)*(x1346)))+(((cj3)*(r02)*(x1343)))+(((x1342)*(x1343)))+(((r22)*(x1338)))+(((r20)*(x1347)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1349=IKcos(j4);
IkReal x1350=IKsin(j4);
IkReal x1351=((IkReal(1.00000000000000))*(cj7));
IkReal x1352=((cj8)*(r20));
IkReal x1353=((cj3)*(r02));
IkReal x1354=((IkReal(1.00000000000000))*(sj7));
IkReal x1355=((sj3)*(sj7));
IkReal x1356=((r21)*(sj8));
IkReal x1357=((IkReal(1.00000000000000))*(cj5));
IkReal x1358=((cj8)*(r10));
IkReal x1359=((sj5)*(x1350));
IkReal x1360=((sj5)*(x1349));
IkReal x1361=((r11)*(sj3)*(sj8));
IkReal x1362=((cj3)*(cj8)*(r00));
IkReal x1363=((cj3)*(r01)*(sj8));
IkReal x1364=((x1349)*(x1357));
evalcond[0]=((x1359)+(((IkReal(-1.00000000000000))*(r22)*(x1354)))+(((cj7)*(x1356)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(x1364))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1352)*(x1354)))+(((IkReal(-1.00000000000000))*(x1360)))+(((IkReal(-1.00000000000000))*(x1350)*(x1357)))+(((cj7)*(r22)))+(((sj7)*(x1356))));
evalcond[2]=((x1360)+(((cj5)*(x1350)))+(((cj7)*(x1362)))+(((cj7)*(sj3)*(x1358)))+(((r12)*(x1355)))+(((IkReal(-1.00000000000000))*(x1351)*(x1363)))+(((IkReal(-1.00000000000000))*(x1351)*(x1361)))+(((sj7)*(x1353))));
evalcond[3]=((x1359)+(((x1355)*(x1358)))+(((IkReal(-1.00000000000000))*(x1354)*(x1361)))+(((IkReal(-1.00000000000000))*(x1354)*(x1363)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1351)))+(((IkReal(-1.00000000000000))*(x1351)*(x1353)))+(((IkReal(-1.00000000000000))*(x1364)))+(((sj7)*(x1362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1365=((cj7)*(sj5));
IkReal x1366=((r21)*(sj8));
IkReal x1367=((cj5)*(cj7));
IkReal x1368=((cj8)*(r20));
IkReal x1369=((sj5)*(sj7));
IkReal x1370=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((r22)*(x1367)))+(((r22)*(x1369)))+(((cj5)*(sj7)*(x1366)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((x1365)*(x1368)))+(((IkReal(-1.00000000000000))*(x1368)*(x1370))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1368)*(x1369)))+(((x1366)*(x1367)))+(((x1366)*(x1369)))+(((r22)*(x1365)))+(((IkReal(-1.00000000000000))*(r22)*(x1370)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((r22)*(x1367)))+(((r22)*(x1369)))+(((cj5)*(sj7)*(x1366)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((x1365)*(x1368)))+(((IkReal(-1.00000000000000))*(x1368)*(x1370)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1368)*(x1369)))+(((x1366)*(x1367)))+(((x1366)*(x1369)))+(((r22)*(x1365)))+(((IkReal(-1.00000000000000))*(r22)*(x1370)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1371=IKcos(j4);
IkReal x1372=IKsin(j4);
IkReal x1373=((IkReal(1.00000000000000))*(cj7));
IkReal x1374=((cj8)*(r20));
IkReal x1375=((cj3)*(r02));
IkReal x1376=((IkReal(1.00000000000000))*(sj7));
IkReal x1377=((sj3)*(sj7));
IkReal x1378=((r21)*(sj8));
IkReal x1379=((IkReal(1.00000000000000))*(cj5));
IkReal x1380=((cj8)*(r10));
IkReal x1381=((sj5)*(x1372));
IkReal x1382=((sj5)*(x1371));
IkReal x1383=((r11)*(sj3)*(sj8));
IkReal x1384=((cj3)*(cj8)*(r00));
IkReal x1385=((cj3)*(r01)*(sj8));
IkReal x1386=((x1371)*(x1379));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1386)))+(x1381)+(((IkReal(-1.00000000000000))*(r22)*(x1376)))+(((IkReal(-1.00000000000000))*(x1373)*(x1374)))+(((cj7)*(x1378))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1372)*(x1379)))+(((IkReal(-1.00000000000000))*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(x1382)))+(((sj7)*(x1378)))+(((cj7)*(r22))));
evalcond[2]=((x1382)+(((IkReal(-1.00000000000000))*(x1373)*(x1385)))+(((IkReal(-1.00000000000000))*(x1373)*(x1383)))+(((cj5)*(x1372)))+(((r12)*(x1377)))+(((cj7)*(x1384)))+(((cj7)*(sj3)*(x1380)))+(((sj7)*(x1375))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1386)))+(x1381)+(((sj7)*(x1384)))+(((IkReal(-1.00000000000000))*(x1376)*(x1383)))+(((IkReal(-1.00000000000000))*(x1376)*(x1385)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1373)))+(((x1377)*(x1380)))+(((IkReal(-1.00000000000000))*(x1373)*(x1375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1387=((cj7)*(sj5));
IkReal x1388=((r21)*(sj8));
IkReal x1389=((cj5)*(cj7));
IkReal x1390=((cj8)*(r20));
IkReal x1391=((sj5)*(sj7));
IkReal x1392=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(x1390)*(x1392)))+(((x1387)*(x1390)))+(((cj5)*(sj7)*(x1388)))+(((r22)*(x1389)))+(((r22)*(x1391))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((x1388)*(x1391)))+(((IkReal(-1.00000000000000))*(x1390)*(x1391)))+(((x1388)*(x1389)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((IkReal(-1.00000000000000))*(r22)*(x1392)))+(((r22)*(x1387))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(x1390)*(x1392)))+(((x1387)*(x1390)))+(((cj5)*(sj7)*(x1388)))+(((r22)*(x1389)))+(((r22)*(x1391)))))), ((gconst41)*(((((x1388)*(x1391)))+(((IkReal(-1.00000000000000))*(x1390)*(x1391)))+(((x1388)*(x1389)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((IkReal(-1.00000000000000))*(r22)*(x1392)))+(((r22)*(x1387)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1393=IKcos(j4);
IkReal x1394=IKsin(j4);
IkReal x1395=((IkReal(1.00000000000000))*(cj5));
IkReal x1396=((r21)*(sj8));
IkReal x1397=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1393)*(x1395)))+(((cj7)*(x1396)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x1394)))+(((IkReal(-1.00000000000000))*(cj7)*(x1397))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj7)*(x1397)))+(((IkReal(-1.00000000000000))*(sj5)*(x1393)))+(((sj7)*(x1396)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((cj7)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1398=(cj8)*(cj8);
IkReal x1399=(sj8)*(sj8);
IkReal x1400=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1401=((IkReal(1.00000000000000))*(x1398));
IkReal x1402=((IkReal(1.00000000000000))*(x1399));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1400)))+(((IkReal(-1.00000000000000))*(x1401)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1402)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1401)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1400)))+(((IkReal(-1.00000000000000))*(x1402)*((r10)*(r10))))));
IkReal x1403=(cj8)*(cj8);
IkReal x1404=(sj8)*(sj8);
IkReal x1405=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1406=((IkReal(1.00000000000000))*(x1403));
IkReal x1407=((IkReal(1.00000000000000))*(x1404));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1405)))+(((IkReal(-1.00000000000000))*(x1406)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1407)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1407)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1406)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1405))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1408=(sj8)*(sj8);
IkReal x1409=(cj8)*(cj8);
IkReal x1410=((sj7)*(sj8));
IkReal x1411=((IkReal(1.00000000000000))*(r02));
IkReal x1412=((r01)*(r10));
IkReal x1413=((cj8)*(sj7));
IkReal x1414=((cj7)*(x1408));
IkReal x1415=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1416=((cj7)*(x1409));
gconst45=IKsign(((((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((x1412)*(x1414)))+(((x1412)*(x1416)))+(((IkReal(-1.00000000000000))*(r11)*(x1411)*(x1413)))+(((IkReal(-1.00000000000000))*(x1414)*(x1415)))+(((r01)*(r12)*(x1413)))+(((IkReal(-1.00000000000000))*(r10)*(x1410)*(x1411)))+(((r00)*(r12)*(x1410)))));
IkReal x1417=(sj8)*(sj8);
IkReal x1418=(cj8)*(cj8);
IkReal x1419=((sj7)*(sj8));
IkReal x1420=((IkReal(1.00000000000000))*(r02));
IkReal x1421=((r01)*(r10));
IkReal x1422=((cj8)*(sj7));
IkReal x1423=((cj7)*(x1417));
IkReal x1424=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1425=((cj7)*(x1418));
dummyeval[0]=((((r01)*(r12)*(x1422)))+(((IkReal(-1.00000000000000))*(x1424)*(x1425)))+(((IkReal(-1.00000000000000))*(x1423)*(x1424)))+(((IkReal(-1.00000000000000))*(r11)*(x1420)*(x1422)))+(((r00)*(r12)*(x1419)))+(((x1421)*(x1423)))+(((x1421)*(x1425)))+(((IkReal(-1.00000000000000))*(r10)*(x1419)*(x1420))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1426=((cj7)*(cj8));
IkReal x1427=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst45)*(((((IkReal(-1.00000000000000))*(r11)*(x1427)))+(((r10)*(x1426)))+(((r12)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((r00)*(x1426)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1427))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst45)*(((((IkReal(-1.00000000000000))*(r11)*(x1427)))+(((r10)*(x1426)))+(((r12)*(sj7)))))), ((gconst45)*(((((r00)*(x1426)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1427)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1428=IKsin(j3);
IkReal x1429=IKcos(j3);
IkReal x1430=((r01)*(sj8));
IkReal x1431=((cj8)*(r00));
IkReal x1432=((r00)*(sj8));
IkReal x1433=((cj8)*(r11));
IkReal x1434=((r11)*(sj8));
IkReal x1435=((r10)*(sj8));
IkReal x1436=((cj8)*(r10));
IkReal x1437=((cj7)*(x1428));
IkReal x1438=((sj7)*(x1429));
IkReal x1439=((IkReal(1.00000000000000))*(x1428));
IkReal x1440=((IkReal(1.00000000000000))*(x1429));
IkReal x1441=((cj8)*(x1428));
IkReal x1442=((IkReal(1.00000000000000))*(x1434));
IkReal x1443=((sj7)*(x1428));
IkReal x1444=((cj7)*(x1429));
evalcond[0]=((IkReal(-1.00000000000000))+(((x1428)*(x1432)))+(((IkReal(-1.00000000000000))*(x1433)*(x1440)))+(((IkReal(-1.00000000000000))*(x1435)*(x1440)))+(((r01)*(x1441))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1435)*(x1439)))+(((IkReal(-1.00000000000000))*(x1432)*(x1440)))+(((IkReal(-1.00000000000000))*(x1433)*(x1439)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1440))));
evalcond[2]=((((x1430)*(x1437)))+(((r12)*(x1438)))+(((IkReal(-1.00000000000000))*(x1431)*(x1437)))+(((x1436)*(x1444)))+(((IkReal(-1.00000000000000))*(cj7)*(x1434)*(x1440)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1439))));
evalcond[3]=((((r02)*(x1437)))+(((x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1438)*(x1442)))+(((x1430)*(x1443)))+(((IkReal(-1.00000000000000))*(sj7)*(x1431)*(x1439)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1440))));
evalcond[4]=((((r12)*(x1443)))+(((r02)*(x1438)))+(((x1436)*(x1437)))+(((IkReal(-1.00000000000000))*(x1437)*(x1442)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(cj7)*(x1430)*(x1440)))+(((cj4)*(sj5)))+(((x1431)*(x1444))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1434)*(x1439)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1440)))+(((x1436)*(x1443)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x1430)*(x1438)))+(((IkReal(-1.00000000000000))*(r12)*(x1437)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x1431)*(x1438))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst44)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1445=IKsin(j3);
IkReal x1446=IKcos(j3);
IkReal x1447=((r01)*(sj8));
IkReal x1448=((cj8)*(r00));
IkReal x1449=((r00)*(sj8));
IkReal x1450=((cj8)*(r11));
IkReal x1451=((r11)*(sj8));
IkReal x1452=((r10)*(sj8));
IkReal x1453=((cj8)*(r10));
IkReal x1454=((cj7)*(x1445));
IkReal x1455=((sj7)*(x1446));
IkReal x1456=((IkReal(1.00000000000000))*(x1445));
IkReal x1457=((IkReal(1.00000000000000))*(x1446));
IkReal x1458=((cj8)*(x1445));
IkReal x1459=((IkReal(1.00000000000000))*(x1451));
IkReal x1460=((sj7)*(x1445));
IkReal x1461=((cj7)*(x1446));
evalcond[0]=((IkReal(-1.00000000000000))+(((x1445)*(x1449)))+(((r01)*(x1458)))+(((IkReal(-1.00000000000000))*(x1452)*(x1457)))+(((IkReal(-1.00000000000000))*(x1450)*(x1457))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1457)))+(((IkReal(-1.00000000000000))*(x1452)*(x1456)))+(((IkReal(-1.00000000000000))*(x1449)*(x1457)))+(((IkReal(-1.00000000000000))*(x1450)*(x1456))));
evalcond[2]=((((x1453)*(x1461)))+(((x1447)*(x1454)))+(((r12)*(x1455)))+(((IkReal(-1.00000000000000))*(cj7)*(x1451)*(x1457)))+(((IkReal(-1.00000000000000))*(x1448)*(x1454)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1456))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1457)))+(((IkReal(-1.00000000000000))*(x1455)*(x1459)))+(((x1447)*(x1460)))+(((IkReal(-1.00000000000000))*(sj7)*(x1448)*(x1456)))+(((x1453)*(x1455)))+(((r02)*(x1454))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1454)*(x1459)))+(((IkReal(-1.00000000000000))*(cj7)*(x1447)*(x1457)))+(((cj5)*(sj4)))+(((x1448)*(x1461)))+(((cj4)*(sj5)))+(((r12)*(x1460)))+(((x1453)*(x1454)))+(((r02)*(x1455))));
evalcond[5]=((((x1453)*(x1460)))+(((IkReal(-1.00000000000000))*(x1447)*(x1455)))+(((IkReal(-1.00000000000000))*(sj7)*(x1451)*(x1456)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1457)))+(((x1448)*(x1455)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(r12)*(x1454))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((r10)*(sj8)))+(((cj8)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst39)*(((((r10)*(sj8)))+(((cj8)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1462=IKsin(j3);
IkReal x1463=IKcos(j3);
IkReal x1464=((IkReal(1.00000000000000))*(sj8));
IkReal x1465=((IkReal(1.00000000000000))*(cj8));
IkReal x1466=((r01)*(sj8));
IkReal x1467=((cj8)*(r10));
IkReal x1468=((sj7)*(x1463));
IkReal x1469=((cj7)*(x1462));
IkReal x1470=((r00)*(x1462));
IkReal x1471=((sj7)*(x1462));
IkReal x1472=((cj7)*(x1463));
evalcond[0]=((IkReal(-1.00000000000000))+(((sj8)*(x1470)))+(((IkReal(-1.00000000000000))*(r10)*(x1463)*(x1464)))+(((IkReal(-1.00000000000000))*(r11)*(x1463)*(x1465)))+(((cj8)*(r01)*(x1462))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1463)*(x1465)))+(((IkReal(-1.00000000000000))*(r10)*(x1462)*(x1464)))+(((IkReal(-1.00000000000000))*(r00)*(x1463)*(x1464)))+(((IkReal(-1.00000000000000))*(r11)*(x1462)*(x1465))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1469)))+(((IkReal(-1.00000000000000))*(r11)*(x1464)*(x1472)))+(((x1467)*(x1472)))+(((x1466)*(x1469)))+(((IkReal(-1.00000000000000))*(r02)*(x1471)))+(((r12)*(x1468))));
evalcond[3]=((((x1466)*(x1471)))+(((IkReal(-1.00000000000000))*(r12)*(x1472)))+(((IkReal(-1.00000000000000))*(sj7)*(x1465)*(x1470)))+(((x1467)*(x1468)))+(((IkReal(-1.00000000000000))*(r11)*(x1464)*(x1468)))+(((r02)*(x1469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1473=((cj3)*(r01));
IkReal x1474=((cj5)*(sj7));
IkReal x1475=((r11)*(sj3));
IkReal x1476=((r10)*(sj3));
IkReal x1477=((cj3)*(r00));
IkReal x1478=((r12)*(sj3));
IkReal x1479=((sj5)*(sj7));
IkReal x1480=((cj7)*(sj5));
IkReal x1481=((cj3)*(r02)*(sj7));
IkReal x1482=((IkReal(1.00000000000000))*(x1480));
IkReal x1483=((cj5)*(cj7)*(cj8));
IkReal x1484=((IkReal(1.00000000000000))*(cj5)*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((x1476)*(x1483)))+(((x1474)*(x1478)))+(((x1477)*(x1483)))+(((r21)*(sj8)*(x1480)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1482)))+(((IkReal(-1.00000000000000))*(x1475)*(x1484)))+(((IkReal(-1.00000000000000))*(r22)*(x1479)))+(((IkReal(-1.00000000000000))*(x1473)*(x1484)))+(((cj3)*(r02)*(x1474))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((cj8)*(x1476)*(x1480)))+(((cj8)*(x1477)*(x1480)))+(((x1478)*(x1479)))+(((IkReal(-1.00000000000000))*(r21)*(x1484)))+(((r20)*(x1483)))+(((r22)*(x1474)))+(((cj3)*(r02)*(x1479)))+(((IkReal(-1.00000000000000))*(sj8)*(x1473)*(x1482)))+(((IkReal(-1.00000000000000))*(sj8)*(x1475)*(x1482))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((x1476)*(x1483)))+(((x1474)*(x1478)))+(((x1477)*(x1483)))+(((r21)*(sj8)*(x1480)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1482)))+(((IkReal(-1.00000000000000))*(x1475)*(x1484)))+(((IkReal(-1.00000000000000))*(r22)*(x1479)))+(((IkReal(-1.00000000000000))*(x1473)*(x1484)))+(((cj3)*(r02)*(x1474)))))), ((gconst43)*(((((cj8)*(x1476)*(x1480)))+(((cj8)*(x1477)*(x1480)))+(((x1478)*(x1479)))+(((IkReal(-1.00000000000000))*(r21)*(x1484)))+(((r20)*(x1483)))+(((r22)*(x1474)))+(((cj3)*(r02)*(x1479)))+(((IkReal(-1.00000000000000))*(sj8)*(x1473)*(x1482)))+(((IkReal(-1.00000000000000))*(sj8)*(x1475)*(x1482)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1485=IKcos(j4);
IkReal x1486=IKsin(j4);
IkReal x1487=((IkReal(1.00000000000000))*(cj7));
IkReal x1488=((cj8)*(r20));
IkReal x1489=((cj3)*(r02));
IkReal x1490=((IkReal(1.00000000000000))*(sj7));
IkReal x1491=((sj3)*(sj7));
IkReal x1492=((r21)*(sj8));
IkReal x1493=((IkReal(1.00000000000000))*(cj5));
IkReal x1494=((cj8)*(r10));
IkReal x1495=((sj5)*(x1486));
IkReal x1496=((sj5)*(x1485));
IkReal x1497=((r11)*(sj3)*(sj8));
IkReal x1498=((cj3)*(cj8)*(r00));
IkReal x1499=((cj3)*(r01)*(sj8));
IkReal x1500=((x1485)*(x1493));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1500)))+(((IkReal(-1.00000000000000))*(x1487)*(x1488)))+(x1495)+(((IkReal(-1.00000000000000))*(r22)*(x1490)))+(((cj7)*(x1492))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1486)*(x1493)))+(((IkReal(-1.00000000000000))*(x1496)))+(((sj7)*(x1492)))+(((IkReal(-1.00000000000000))*(x1488)*(x1490)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1487)*(x1497)))+(((IkReal(-1.00000000000000))*(x1487)*(x1499)))+(((cj7)*(sj3)*(x1494)))+(((r12)*(x1491)))+(((cj5)*(x1486)))+(x1496)+(((sj7)*(x1489)))+(((cj7)*(x1498))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1500)))+(((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1487)))+(((x1491)*(x1494)))+(((sj7)*(x1498)))+(x1495)+(((IkReal(-1.00000000000000))*(x1490)*(x1497)))+(((IkReal(-1.00000000000000))*(x1490)*(x1499))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1501=((cj7)*(sj5));
IkReal x1502=((r21)*(sj8));
IkReal x1503=((cj5)*(cj7));
IkReal x1504=((cj8)*(r20));
IkReal x1505=((sj5)*(sj7));
IkReal x1506=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1504)*(x1506)))+(((x1501)*(x1504)))+(((cj5)*(sj7)*(x1502)))+(((r22)*(x1503)))+(((r22)*(x1505)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1504)*(x1505)))+(((IkReal(-1.00000000000000))*(r22)*(x1506)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((r22)*(x1501)))+(((x1502)*(x1503)))+(((x1502)*(x1505))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(x1504)*(x1506)))+(((x1501)*(x1504)))+(((cj5)*(sj7)*(x1502)))+(((r22)*(x1503)))+(((r22)*(x1505)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1504)*(x1505)))+(((IkReal(-1.00000000000000))*(r22)*(x1506)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((r22)*(x1501)))+(((x1502)*(x1503)))+(((x1502)*(x1505)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1507=IKcos(j4);
IkReal x1508=IKsin(j4);
IkReal x1509=((IkReal(1.00000000000000))*(cj7));
IkReal x1510=((cj8)*(r20));
IkReal x1511=((cj3)*(r02));
IkReal x1512=((IkReal(1.00000000000000))*(sj7));
IkReal x1513=((sj3)*(sj7));
IkReal x1514=((r21)*(sj8));
IkReal x1515=((IkReal(1.00000000000000))*(cj5));
IkReal x1516=((cj8)*(r10));
IkReal x1517=((sj5)*(x1508));
IkReal x1518=((sj5)*(x1507));
IkReal x1519=((r11)*(sj3)*(sj8));
IkReal x1520=((cj3)*(cj8)*(r00));
IkReal x1521=((cj3)*(r01)*(sj8));
IkReal x1522=((x1507)*(x1515));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1512)))+(((IkReal(-1.00000000000000))*(x1522)))+(x1517)+(((IkReal(-1.00000000000000))*(x1509)*(x1510)))+(((cj7)*(x1514))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1518)))+(((IkReal(-1.00000000000000))*(x1510)*(x1512)))+(((sj7)*(x1514)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1508)*(x1515))));
evalcond[2]=((((cj7)*(x1520)))+(((r12)*(x1513)))+(((cj7)*(sj3)*(x1516)))+(x1518)+(((cj5)*(x1508)))+(((sj7)*(x1511)))+(((IkReal(-1.00000000000000))*(x1509)*(x1519)))+(((IkReal(-1.00000000000000))*(x1509)*(x1521))));
evalcond[3]=((((x1513)*(x1516)))+(((IkReal(-1.00000000000000))*(x1522)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1509)))+(x1517)+(((IkReal(-1.00000000000000))*(x1512)*(x1521)))+(((sj7)*(x1520)))+(((IkReal(-1.00000000000000))*(x1512)*(x1519)))+(((IkReal(-1.00000000000000))*(x1509)*(x1511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1523=((cj6)*(cj7));
IkReal x1524=((IkReal(1.00000000000000))*(sj8));
IkReal x1525=((cj6)*(sj7));
if( IKabs(((gconst2)*(((((r12)*(x1525)))+(((cj8)*(r10)*(x1523)))+(((IkReal(-1.00000000000000))*(r11)*(x1523)*(x1524))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj8)*(r00)*(x1523)))+(((IkReal(-1.00000000000000))*(r01)*(x1523)*(x1524)))+(((r02)*(x1525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((r12)*(x1525)))+(((cj8)*(r10)*(x1523)))+(((IkReal(-1.00000000000000))*(r11)*(x1523)*(x1524)))))), ((gconst2)*(((((cj8)*(r00)*(x1523)))+(((IkReal(-1.00000000000000))*(r01)*(x1523)*(x1524)))+(((r02)*(x1525)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1526=IKsin(j3);
IkReal x1527=IKcos(j3);
IkReal x1528=((IkReal(1.00000000000000))*(r11));
IkReal x1529=((r01)*(sj8));
IkReal x1530=((cj8)*(r10));
IkReal x1531=((IkReal(1.00000000000000))*(sj7));
IkReal x1532=((sj7)*(x1527));
IkReal x1533=((cj7)*(x1526));
IkReal x1534=((r00)*(x1526));
IkReal x1535=((cj7)*(x1527));
evalcond[0]=((cj6)+(((cj8)*(r01)*(x1526)))+(((sj8)*(x1534)))+(((IkReal(-1.00000000000000))*(cj8)*(x1527)*(x1528)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1527))));
evalcond[1]=((((r12)*(x1532)))+(((x1530)*(x1535)))+(((IkReal(-1.00000000000000))*(sj8)*(x1528)*(x1535)))+(((x1529)*(x1533)))+(((IkReal(-1.00000000000000))*(r02)*(x1526)*(x1531)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x1533))));
evalcond[2]=((((sj7)*(x1526)*(x1529)))+(sj6)+(((IkReal(-1.00000000000000))*(cj8)*(x1531)*(x1534)))+(((x1530)*(x1532)))+(((IkReal(-1.00000000000000))*(sj8)*(x1528)*(x1532)))+(((r02)*(x1533)))+(((IkReal(-1.00000000000000))*(r12)*(x1535))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1536=((IkReal(1.00000000000000))*(sj7));
IkReal x1537=((IkReal(1.00000000000000))*(cj3));
IkReal x1538=((cj7)*(r02));
IkReal x1539=((cj8)*(r00));
IkReal x1540=((cj3)*(sj7));
IkReal x1541=((cj8)*(npx));
IkReal x1542=((r01)*(sj3));
IkReal x1543=((cj7)*(sj8));
IkReal x1544=((r11)*(sj8));
IkReal x1545=((IkReal(1.00000000000000))*(cj7));
IkReal x1546=((sj7)*(sj8));
IkReal x1547=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x1536)))+(((npy)*(x1543)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x1541)*(x1545))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1537)))+(((cj8)*(x1542)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1537))));
evalcond[4]=((((r21)*(x1546)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1536)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x1546)))+(((IkReal(-1.00000000000000))*(x1536)*(x1541)))+(((cj7)*(npz))));
evalcond[6]=((((r12)*(x1540)))+(((IkReal(-1.00000000000000))*(r11)*(x1537)*(x1543)))+(((cj3)*(cj7)*(x1547)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1536)))+(((x1542)*(x1543)))+(((IkReal(-1.00000000000000))*(sj3)*(x1539)*(x1545))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x1538)))+(((IkReal(-1.00000000000000))*(cj3)*(x1536)*(x1544)))+(((IkReal(-1.00000000000000))*(sj3)*(x1536)*(x1539)))+(((x1540)*(x1547)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1537)))+(((x1542)*(x1546))));
evalcond[8]=((((x1539)*(x1540)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(sj3)*(x1536)*(x1544)))+(((sj3)*(sj7)*(x1547)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1545)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1536))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1548=((cj8)*(sj5));
IkReal x1549=((cj3)*(r01));
IkReal x1550=((IkReal(1.00000000000000))*(cj5));
IkReal x1551=((sj5)*(sj8));
IkReal x1552=((r10)*(sj3));
IkReal x1553=((r11)*(sj3));
IkReal x1554=((cj3)*(r00)*(sj8));
if( IKabs(((gconst9)*(((((x1551)*(x1552)))+(((cj3)*(r00)*(x1551)))+(((cj5)*(r20)*(sj8)))+(((x1548)*(x1553)))+(((x1548)*(x1549)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1550)*(x1553)))+(((r21)*(x1548)))+(((IkReal(-1.00000000000000))*(x1550)*(x1554)))+(((IkReal(-1.00000000000000))*(cj8)*(x1549)*(x1550)))+(((r20)*(x1551)))+(((IkReal(-1.00000000000000))*(sj8)*(x1550)*(x1552))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((x1551)*(x1552)))+(((cj3)*(r00)*(x1551)))+(((cj5)*(r20)*(sj8)))+(((x1548)*(x1553)))+(((x1548)*(x1549)))+(((cj5)*(cj8)*(r21)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1550)*(x1553)))+(((r21)*(x1548)))+(((IkReal(-1.00000000000000))*(x1550)*(x1554)))+(((IkReal(-1.00000000000000))*(cj8)*(x1549)*(x1550)))+(((r20)*(x1551)))+(((IkReal(-1.00000000000000))*(sj8)*(x1550)*(x1552)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1555=IKsin(j4);
IkReal x1556=IKcos(j4);
IkReal x1557=((IkReal(1.00000000000000))*(cj8));
IkReal x1558=((cj3)*(r01));
IkReal x1559=((cj3)*(r00));
IkReal x1560=((cj7)*(cj8));
IkReal x1561=((IkReal(1.00000000000000))*(cj5));
IkReal x1562=((IkReal(1.00000000000000))*(sj8));
IkReal x1563=((r11)*(sj3));
IkReal x1564=((r10)*(sj3));
IkReal x1565=((sj5)*(x1555));
IkReal x1566=((sj5)*(x1556));
IkReal x1567=((x1556)*(x1561));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1555)*(x1561)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1566))));
evalcond[1]=((x1565)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1567)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1557))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1559)*(x1562)))+(((IkReal(-1.00000000000000))*(x1557)*(x1563)))+(((IkReal(-1.00000000000000))*(x1562)*(x1564)))+(x1565)+(((IkReal(-1.00000000000000))*(x1557)*(x1558)))+(((IkReal(-1.00000000000000))*(x1567))));
evalcond[3]=((((x1560)*(x1564)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1558)*(x1562)))+(x1566)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1562)*(x1563)))+(((x1559)*(x1560)))+(((cj5)*(x1555))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1568=((sj5)*(sj8));
IkReal x1569=((IkReal(1.00000000000000))*(cj7));
IkReal x1570=((cj8)*(sj5));
IkReal x1571=((r22)*(sj7));
IkReal x1572=((cj5)*(cj8));
IkReal x1573=((cj5)*(sj8));
if( IKabs(((gconst8)*(((((r20)*(x1573)))+(((cj7)*(r20)*(x1570)))+(((IkReal(-1.00000000000000))*(r21)*(x1568)*(x1569)))+(((r21)*(x1572)))+(((sj5)*(x1571))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((r20)*(x1568)))+(((cj7)*(r21)*(x1573)))+(((IkReal(-1.00000000000000))*(r20)*(x1569)*(x1572)))+(((r21)*(x1570)))+(((IkReal(-1.00000000000000))*(cj5)*(x1571))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst8)*(((((r20)*(x1573)))+(((cj7)*(r20)*(x1570)))+(((IkReal(-1.00000000000000))*(r21)*(x1568)*(x1569)))+(((r21)*(x1572)))+(((sj5)*(x1571)))))), ((gconst8)*(((((r20)*(x1568)))+(((cj7)*(r21)*(x1573)))+(((IkReal(-1.00000000000000))*(r20)*(x1569)*(x1572)))+(((r21)*(x1570)))+(((IkReal(-1.00000000000000))*(cj5)*(x1571)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1574=IKsin(j4);
IkReal x1575=IKcos(j4);
IkReal x1576=((IkReal(1.00000000000000))*(cj8));
IkReal x1577=((cj3)*(r01));
IkReal x1578=((cj3)*(r00));
IkReal x1579=((cj7)*(cj8));
IkReal x1580=((IkReal(1.00000000000000))*(cj5));
IkReal x1581=((IkReal(1.00000000000000))*(sj8));
IkReal x1582=((r11)*(sj3));
IkReal x1583=((r10)*(sj3));
IkReal x1584=((sj5)*(x1574));
IkReal x1585=((sj5)*(x1575));
IkReal x1586=((x1575)*(x1580));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1574)*(x1580)))+(((IkReal(-1.00000000000000))*(x1585)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1586)))+(x1584)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1576)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1586)))+(((IkReal(-1.00000000000000))*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1578)*(x1581)))+(x1584)+(((IkReal(-1.00000000000000))*(x1581)*(x1583)))+(((IkReal(-1.00000000000000))*(x1576)*(x1582))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((cj5)*(x1574)))+(x1585)+(((IkReal(-1.00000000000000))*(cj7)*(x1577)*(x1581)))+(((cj3)*(r02)*(sj7)))+(((x1579)*(x1583)))+(((x1578)*(x1579)))+(((IkReal(-1.00000000000000))*(cj7)*(x1581)*(x1582))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1587=((IkReal(1.00000000000000))*(sj7));
IkReal x1588=((IkReal(1.00000000000000))*(cj3));
IkReal x1589=((cj7)*(r02));
IkReal x1590=((cj8)*(r00));
IkReal x1591=((cj3)*(sj7));
IkReal x1592=((cj8)*(npx));
IkReal x1593=((r01)*(sj3));
IkReal x1594=((cj7)*(sj8));
IkReal x1595=((r11)*(sj8));
IkReal x1596=((IkReal(1.00000000000000))*(cj7));
IkReal x1597=((sj7)*(sj8));
IkReal x1598=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x1592)*(x1596)))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x1594)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x1587))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1588)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1588)))+(((cj8)*(x1593)))+(((r00)*(sj3)*(sj8))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1587)))+(((r21)*(x1597)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x1597)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1587)*(x1592))));
evalcond[6]=((((x1593)*(x1594)))+(((r12)*(x1591)))+(((IkReal(-1.00000000000000))*(r11)*(x1588)*(x1594)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1587)))+(((cj3)*(cj7)*(x1598)))+(((IkReal(-1.00000000000000))*(sj3)*(x1590)*(x1596))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj3)*(x1589)))+(((x1593)*(x1597)))+(((IkReal(-1.00000000000000))*(cj3)*(x1587)*(x1595)))+(((x1591)*(x1598)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1588)))+(((IkReal(-1.00000000000000))*(sj3)*(x1587)*(x1590))));
evalcond[8]=((((x1590)*(x1591)))+(((sj3)*(sj7)*(x1598)))+(((IkReal(-1.00000000000000))*(x1588)*(x1589)))+(((IkReal(-1.00000000000000))*(sj3)*(x1587)*(x1595)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1596)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1587))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1599=((IkReal(1.00000000000000))*(sj5));
IkReal x1600=((r20)*(sj8));
IkReal x1601=((IkReal(1.00000000000000))*(cj5));
IkReal x1602=((cj8)*(r21));
IkReal x1603=((cj8)*(r11)*(sj3));
IkReal x1604=((cj3)*(cj8)*(r01));
IkReal x1605=((cj3)*(r00)*(sj8));
IkReal x1606=((r10)*(sj3)*(sj8));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1600)*(x1601)))+(((IkReal(-1.00000000000000))*(x1599)*(x1603)))+(((IkReal(-1.00000000000000))*(x1599)*(x1605)))+(((IkReal(-1.00000000000000))*(x1599)*(x1604)))+(((IkReal(-1.00000000000000))*(x1599)*(x1606))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj5)*(x1603)))+(((cj5)*(x1604)))+(((cj5)*(x1605)))+(((cj5)*(x1606)))+(((IkReal(-1.00000000000000))*(x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(x1599)*(x1602))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1600)*(x1601)))+(((IkReal(-1.00000000000000))*(x1599)*(x1603)))+(((IkReal(-1.00000000000000))*(x1599)*(x1605)))+(((IkReal(-1.00000000000000))*(x1599)*(x1604)))+(((IkReal(-1.00000000000000))*(x1599)*(x1606)))))), ((gconst11)*(((((cj5)*(x1603)))+(((cj5)*(x1604)))+(((cj5)*(x1605)))+(((cj5)*(x1606)))+(((IkReal(-1.00000000000000))*(x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(x1599)*(x1602)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1607=IKsin(j4);
IkReal x1608=IKcos(j4);
IkReal x1609=((IkReal(1.00000000000000))*(cj8));
IkReal x1610=((cj3)*(r01));
IkReal x1611=((cj3)*(r00));
IkReal x1612=((cj7)*(cj8));
IkReal x1613=((r11)*(sj3));
IkReal x1614=((IkReal(1.00000000000000))*(sj8));
IkReal x1615=((r10)*(sj3));
IkReal x1616=((sj5)*(x1608));
IkReal x1617=((cj5)*(x1607));
IkReal x1618=((cj5)*(x1608));
IkReal x1619=((sj5)*(x1607));
IkReal x1620=((x1616)+(x1617));
evalcond[0]=((x1620)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1618)))+(x1619)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1609)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1619)))+(((IkReal(-1.00000000000000))*(x1611)*(x1614)))+(x1618)+(((IkReal(-1.00000000000000))*(x1609)*(x1610)))+(((IkReal(-1.00000000000000))*(x1609)*(x1613)))+(((IkReal(-1.00000000000000))*(x1614)*(x1615))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x1620)+(((IkReal(-1.00000000000000))*(cj7)*(x1610)*(x1614)))+(((IkReal(-1.00000000000000))*(cj7)*(x1613)*(x1614)))+(((cj3)*(r02)*(sj7)))+(((x1612)*(x1615)))+(((x1611)*(x1612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1621=((r20)*(sj5));
IkReal x1622=((r22)*(sj7));
IkReal x1623=((cj8)*(r21));
IkReal x1624=((cj7)*(cj8));
IkReal x1625=((cj5)*(r20));
IkReal x1626=((cj7)*(r21)*(sj8));
if( IKabs(((gconst10)*(((((sj5)*(x1626)))+(((cj5)*(x1623)))+(((IkReal(-1.00000000000000))*(x1621)*(x1624)))+(((sj8)*(x1625)))+(((IkReal(-1.00000000000000))*(sj5)*(x1622))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((sj5)*(x1623)))+(((IkReal(-1.00000000000000))*(cj5)*(x1626)))+(((cj5)*(x1622)))+(((sj8)*(x1621)))+(((x1624)*(x1625))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((sj5)*(x1626)))+(((cj5)*(x1623)))+(((IkReal(-1.00000000000000))*(x1621)*(x1624)))+(((sj8)*(x1625)))+(((IkReal(-1.00000000000000))*(sj5)*(x1622)))))), ((gconst10)*(((((sj5)*(x1623)))+(((IkReal(-1.00000000000000))*(cj5)*(x1626)))+(((cj5)*(x1622)))+(((sj8)*(x1621)))+(((x1624)*(x1625)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1627=IKsin(j4);
IkReal x1628=IKcos(j4);
IkReal x1629=((IkReal(1.00000000000000))*(cj8));
IkReal x1630=((cj3)*(r01));
IkReal x1631=((cj3)*(r00));
IkReal x1632=((cj7)*(cj8));
IkReal x1633=((r11)*(sj3));
IkReal x1634=((IkReal(1.00000000000000))*(sj8));
IkReal x1635=((r10)*(sj3));
IkReal x1636=((sj5)*(x1628));
IkReal x1637=((cj5)*(x1627));
IkReal x1638=((cj5)*(x1628));
IkReal x1639=((sj5)*(x1627));
IkReal x1640=((x1636)+(x1637));
evalcond[0]=((x1640)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x1639)+(((IkReal(-1.00000000000000))*(x1638)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1629)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(x1638)+(((IkReal(-1.00000000000000))*(x1639)))+(((IkReal(-1.00000000000000))*(x1629)*(x1633)))+(((IkReal(-1.00000000000000))*(x1629)*(x1630)))+(((IkReal(-1.00000000000000))*(x1631)*(x1634))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x1640)+(((IkReal(-1.00000000000000))*(cj7)*(x1633)*(x1634)))+(((cj3)*(r02)*(sj7)))+(((x1632)*(x1635)))+(((x1631)*(x1632)))+(((IkReal(-1.00000000000000))*(cj7)*(x1630)*(x1634))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1641=((cj3)*(cj8));
IkReal x1642=((IkReal(1.00000000000000))*(sj7));
IkReal x1643=((cj8)*(npx));
IkReal x1644=((cj8)*(sj3));
IkReal x1645=((npy)*(sj8));
IkReal x1646=((r02)*(sj3));
IkReal x1647=((IkReal(1.00000000000000))*(r11));
IkReal x1648=((cj3)*(r12));
IkReal x1649=((IkReal(1.00000000000000))*(cj7));
IkReal x1650=((sj3)*(sj8));
IkReal x1651=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x1642)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x1643)*(x1649)))+(((cj7)*(x1645))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1641)*(x1647)))+(((IkReal(-1.00000000000000))*(r10)*(x1651)))+(((r00)*(x1650)))+(((r01)*(x1644))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x1642)*(x1643)))+(((cj7)*(npz)))+(((sj7)*(x1645)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x1651)))+(((IkReal(-1.00000000000000))*(x1644)*(x1647)))+(((IkReal(-1.00000000000000))*(r01)*(x1641)))+(((IkReal(-1.00000000000000))*(r10)*(x1650))));
evalcond[7]=((((cj7)*(r01)*(x1650)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x1647)))+(((cj7)*(r10)*(x1641)))+(((IkReal(-1.00000000000000))*(x1642)*(x1646)))+(((IkReal(-1.00000000000000))*(r00)*(x1644)*(x1649)))+(((sj7)*(x1648))));
evalcond[8]=((((cj7)*(x1646)))+(((IkReal(-1.00000000000000))*(x1648)*(x1649)))+(((r10)*(sj7)*(x1641)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x1642)))+(((r01)*(sj7)*(x1650)))+(((IkReal(-1.00000000000000))*(r00)*(x1642)*(x1644))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1652=((cj3)*(cj5));
IkReal x1653=((r02)*(sj7));
IkReal x1654=((cj5)*(sj7));
IkReal x1655=((cj3)*(sj5));
IkReal x1656=((IkReal(1.00000000000000))*(sj8));
IkReal x1657=((cj8)*(r10));
IkReal x1658=((cj7)*(cj8));
IkReal x1659=((IkReal(1.00000000000000))*(sj5));
IkReal x1660=((r12)*(sj3));
IkReal x1661=((cj7)*(sj5));
IkReal x1662=((cj5)*(cj7)*(sj3));
IkReal x1663=((cj7)*(r01)*(x1656));
if( IKabs(((gconst13)*(((((r21)*(sj8)*(x1661)))+(((r00)*(x1652)*(x1658)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1659)))+(((IkReal(-1.00000000000000))*(r11)*(x1656)*(x1662)))+(((x1654)*(x1660)))+(((IkReal(-1.00000000000000))*(x1652)*(x1663)))+(((x1657)*(x1662)))+(((IkReal(-1.00000000000000))*(r20)*(x1658)*(x1659)))+(((x1652)*(x1653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj5)*(r20)*(x1658)))+(((r22)*(x1654)))+(((sj5)*(sj7)*(x1660)))+(((sj3)*(x1657)*(x1661)))+(((IkReal(-1.00000000000000))*(x1655)*(x1663)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(r21)*(x1656)))+(((r00)*(x1655)*(x1658)))+(((x1653)*(x1655)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1656)*(x1661))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst13)*(((((r21)*(sj8)*(x1661)))+(((r00)*(x1652)*(x1658)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1659)))+(((IkReal(-1.00000000000000))*(r11)*(x1656)*(x1662)))+(((x1654)*(x1660)))+(((IkReal(-1.00000000000000))*(x1652)*(x1663)))+(((x1657)*(x1662)))+(((IkReal(-1.00000000000000))*(r20)*(x1658)*(x1659)))+(((x1652)*(x1653)))))), ((gconst13)*(((((cj5)*(r20)*(x1658)))+(((r22)*(x1654)))+(((sj5)*(sj7)*(x1660)))+(((sj3)*(x1657)*(x1661)))+(((IkReal(-1.00000000000000))*(x1655)*(x1663)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(r21)*(x1656)))+(((r00)*(x1655)*(x1658)))+(((x1653)*(x1655)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1656)*(x1661)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1664=IKcos(j4);
IkReal x1665=IKsin(j4);
IkReal x1666=((IkReal(1.00000000000000))*(cj7));
IkReal x1667=((cj8)*(r20));
IkReal x1668=((cj3)*(r02));
IkReal x1669=((IkReal(1.00000000000000))*(sj7));
IkReal x1670=((sj3)*(sj7));
IkReal x1671=((r21)*(sj8));
IkReal x1672=((cj8)*(r10));
IkReal x1673=((sj5)*(x1664));
IkReal x1674=((cj5)*(x1665));
IkReal x1675=((r11)*(sj3)*(sj8));
IkReal x1676=((cj3)*(cj8)*(r00));
IkReal x1677=((cj5)*(x1664));
IkReal x1678=((cj3)*(r01)*(sj8));
IkReal x1679=((sj5)*(x1665));
IkReal x1680=((x1674)+(x1673));
evalcond[0]=((x1679)+(((IkReal(-1.00000000000000))*(r22)*(x1669)))+(((IkReal(-1.00000000000000))*(x1677)))+(((cj7)*(x1671)))+(((IkReal(-1.00000000000000))*(x1666)*(x1667))));
evalcond[1]=((x1680)+(((IkReal(-1.00000000000000))*(x1667)*(x1669)))+(((sj7)*(x1671)))+(((cj7)*(r22))));
evalcond[2]=((x1680)+(((cj7)*(sj3)*(x1672)))+(((IkReal(-1.00000000000000))*(x1666)*(x1675)))+(((IkReal(-1.00000000000000))*(x1666)*(x1678)))+(((cj7)*(x1676)))+(((sj7)*(x1668)))+(((r12)*(x1670))));
evalcond[3]=((x1677)+(((IkReal(-1.00000000000000))*(x1669)*(x1678)))+(((IkReal(-1.00000000000000))*(x1669)*(x1675)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1666)))+(((sj7)*(x1676)))+(((IkReal(-1.00000000000000))*(x1679)))+(((IkReal(-1.00000000000000))*(x1666)*(x1668)))+(((x1670)*(x1672))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1681=((sj5)*(sj7));
IkReal x1682=((r21)*(sj8));
IkReal x1683=((cj5)*(sj7));
IkReal x1684=((cj8)*(r20));
IkReal x1685=((cj5)*(cj7));
IkReal x1686=((cj7)*(sj5));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1681)))+(((r22)*(x1685)))+(((IkReal(-1.00000000000000))*(x1684)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1684)))+(((x1682)*(x1683)))+(((x1682)*(x1686))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((x1681)*(x1682)))+(((r22)*(x1683)))+(((r22)*(x1686)))+(((IkReal(-1.00000000000000))*(x1681)*(x1684)))+(((x1684)*(x1685)))+(((IkReal(-1.00000000000000))*(x1682)*(x1685))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1681)))+(((r22)*(x1685)))+(((IkReal(-1.00000000000000))*(x1684)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1684)))+(((x1682)*(x1683)))+(((x1682)*(x1686)))))), ((gconst12)*(((((x1681)*(x1682)))+(((r22)*(x1683)))+(((r22)*(x1686)))+(((IkReal(-1.00000000000000))*(x1681)*(x1684)))+(((x1684)*(x1685)))+(((IkReal(-1.00000000000000))*(x1682)*(x1685)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1687=IKcos(j4);
IkReal x1688=IKsin(j4);
IkReal x1689=((IkReal(1.00000000000000))*(cj7));
IkReal x1690=((cj8)*(r20));
IkReal x1691=((cj3)*(r02));
IkReal x1692=((IkReal(1.00000000000000))*(sj7));
IkReal x1693=((sj3)*(sj7));
IkReal x1694=((r21)*(sj8));
IkReal x1695=((cj8)*(r10));
IkReal x1696=((sj5)*(x1687));
IkReal x1697=((cj5)*(x1688));
IkReal x1698=((r11)*(sj3)*(sj8));
IkReal x1699=((cj3)*(cj8)*(r00));
IkReal x1700=((cj5)*(x1687));
IkReal x1701=((cj3)*(r01)*(sj8));
IkReal x1702=((sj5)*(x1688));
IkReal x1703=((x1696)+(x1697));
evalcond[0]=((x1702)+(((IkReal(-1.00000000000000))*(x1700)))+(((IkReal(-1.00000000000000))*(r22)*(x1692)))+(((cj7)*(x1694)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690))));
evalcond[1]=((x1703)+(((IkReal(-1.00000000000000))*(x1690)*(x1692)))+(((sj7)*(x1694)))+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x1693)))+(x1703)+(((sj7)*(x1691)))+(((IkReal(-1.00000000000000))*(x1689)*(x1701)))+(((cj7)*(sj3)*(x1695)))+(((cj7)*(x1699)))+(((IkReal(-1.00000000000000))*(x1689)*(x1698))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1692)*(x1698)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1689)))+(x1700)+(((IkReal(-1.00000000000000))*(x1702)))+(((sj7)*(x1699)))+(((x1693)*(x1695)))+(((IkReal(-1.00000000000000))*(x1692)*(x1701)))+(((IkReal(-1.00000000000000))*(x1689)*(x1691))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1704=((cj3)*(cj8));
IkReal x1705=((IkReal(1.00000000000000))*(sj7));
IkReal x1706=((cj8)*(npx));
IkReal x1707=((cj8)*(sj3));
IkReal x1708=((npy)*(sj8));
IkReal x1709=((r02)*(sj3));
IkReal x1710=((IkReal(1.00000000000000))*(r11));
IkReal x1711=((cj3)*(r12));
IkReal x1712=((IkReal(1.00000000000000))*(cj7));
IkReal x1713=((sj3)*(sj8));
IkReal x1714=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x1708)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x1706)*(x1712)))+(((IkReal(-1.00000000000000))*(npz)*(x1705))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r01)*(x1707)))+(((r00)*(x1713)))+(((IkReal(-1.00000000000000))*(r10)*(x1714)))+(((IkReal(-1.00000000000000))*(x1704)*(x1710))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x1705)*(x1706)))+(((cj7)*(npz)))+(((sj7)*(x1708))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x1714)))+(((IkReal(-1.00000000000000))*(r01)*(x1704)))+(((IkReal(-1.00000000000000))*(x1707)*(x1710)))+(((IkReal(-1.00000000000000))*(r10)*(x1713))));
evalcond[7]=((((cj7)*(r10)*(x1704)))+(((IkReal(-1.00000000000000))*(r00)*(x1707)*(x1712)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x1710)))+(((IkReal(-1.00000000000000))*(x1705)*(x1709)))+(((sj7)*(x1711)))+(((cj7)*(r01)*(x1713))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x1705)))+(((r01)*(sj7)*(x1713)))+(((cj7)*(x1709)))+(((IkReal(-1.00000000000000))*(x1711)*(x1712)))+(((IkReal(-1.00000000000000))*(r00)*(x1705)*(x1707)))+(((r10)*(sj7)*(x1704))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1715=((cj3)*(cj5));
IkReal x1716=((r02)*(sj7));
IkReal x1717=((cj8)*(r00));
IkReal x1718=((cj5)*(sj7));
IkReal x1719=((cj5)*(sj3));
IkReal x1720=((sj3)*(sj5));
IkReal x1721=((IkReal(1.00000000000000))*(sj5));
IkReal x1722=((cj3)*(cj7)*(sj5));
IkReal x1723=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x1724=((cj7)*(cj8)*(r10));
IkReal x1725=((cj7)*(cj8)*(r20));
if( IKabs(((gconst15)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x1715)*(x1723)))+(((r12)*(sj3)*(x1718)))+(((IkReal(-1.00000000000000))*(r11)*(x1719)*(x1723)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1721)))+(((x1715)*(x1716)))+(((x1719)*(x1724)))+(((cj7)*(x1715)*(x1717)))+(((IkReal(-1.00000000000000))*(x1721)*(x1725))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((r22)*(x1718)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1721)))+(((IkReal(-1.00000000000000))*(r11)*(x1720)*(x1723)))+(((cj3)*(sj5)*(x1716)))+(((x1717)*(x1722)))+(((x1720)*(x1724)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1723)))+(((cj5)*(x1725)))+(((r12)*(sj7)*(x1720))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x1715)*(x1723)))+(((r12)*(sj3)*(x1718)))+(((IkReal(-1.00000000000000))*(r11)*(x1719)*(x1723)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1721)))+(((x1715)*(x1716)))+(((x1719)*(x1724)))+(((cj7)*(x1715)*(x1717)))+(((IkReal(-1.00000000000000))*(x1721)*(x1725)))))), ((gconst15)*(((((r22)*(x1718)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1721)))+(((IkReal(-1.00000000000000))*(r11)*(x1720)*(x1723)))+(((cj3)*(sj5)*(x1716)))+(((x1717)*(x1722)))+(((x1720)*(x1724)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1723)))+(((cj5)*(x1725)))+(((r12)*(sj7)*(x1720)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1726=IKcos(j4);
IkReal x1727=IKsin(j4);
IkReal x1728=((IkReal(1.00000000000000))*(cj7));
IkReal x1729=((cj8)*(r20));
IkReal x1730=((cj3)*(r02));
IkReal x1731=((IkReal(1.00000000000000))*(sj7));
IkReal x1732=((sj3)*(sj7));
IkReal x1733=((r21)*(sj8));
IkReal x1734=((IkReal(1.00000000000000))*(cj5));
IkReal x1735=((cj8)*(r10));
IkReal x1736=((sj5)*(x1727));
IkReal x1737=((sj5)*(x1726));
IkReal x1738=((r11)*(sj3)*(sj8));
IkReal x1739=((cj3)*(cj8)*(r00));
IkReal x1740=((cj3)*(r01)*(sj8));
IkReal x1741=((x1726)*(x1734));
evalcond[0]=((x1736)+(((IkReal(-1.00000000000000))*(x1728)*(x1729)))+(((IkReal(-1.00000000000000))*(x1741)))+(((cj7)*(x1733)))+(((IkReal(-1.00000000000000))*(r22)*(x1731))));
evalcond[1]=((((sj7)*(x1733)))+(((IkReal(-1.00000000000000))*(x1729)*(x1731)))+(((IkReal(-1.00000000000000))*(x1737)))+(((IkReal(-1.00000000000000))*(x1727)*(x1734)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1728)*(x1738)))+(x1737)+(((sj7)*(x1730)))+(((IkReal(-1.00000000000000))*(x1728)*(x1740)))+(((cj7)*(sj3)*(x1735)))+(((r12)*(x1732)))+(((cj5)*(x1727)))+(((cj7)*(x1739))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1731)*(x1738)))+(((IkReal(-1.00000000000000))*(x1728)*(x1730)))+(x1736)+(((sj7)*(x1739)))+(((IkReal(-1.00000000000000))*(x1741)))+(((x1732)*(x1735)))+(((IkReal(-1.00000000000000))*(x1731)*(x1740)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1728))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1742=((IkReal(1.00000000000000))*(sj5));
IkReal x1743=((cj7)*(sj5));
IkReal x1744=((cj8)*(r20));
IkReal x1745=((cj5)*(cj7));
IkReal x1746=((sj5)*(sj7));
IkReal x1747=((r21)*(sj8));
IkReal x1748=((cj7)*(x1747));
IkReal x1749=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst14)*(((((r22)*(x1745)))+(((r22)*(x1746)))+(((cj5)*(sj7)*(x1747)))+(((IkReal(-1.00000000000000))*(x1744)*(x1749)))+(((x1743)*(x1744)))+(((IkReal(-1.00000000000000))*(x1742)*(x1748))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((r22)*(x1743)))+(((x1745)*(x1747)))+(((x1746)*(x1747)))+(((IkReal(-1.00000000000000))*(r22)*(x1749)))+(((IkReal(-1.00000000000000))*(sj7)*(x1742)*(x1744)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst14)*(((((r22)*(x1745)))+(((r22)*(x1746)))+(((cj5)*(sj7)*(x1747)))+(((IkReal(-1.00000000000000))*(x1744)*(x1749)))+(((x1743)*(x1744)))+(((IkReal(-1.00000000000000))*(x1742)*(x1748)))))), ((gconst14)*(((((r22)*(x1743)))+(((x1745)*(x1747)))+(((x1746)*(x1747)))+(((IkReal(-1.00000000000000))*(r22)*(x1749)))+(((IkReal(-1.00000000000000))*(sj7)*(x1742)*(x1744)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1750=IKcos(j4);
IkReal x1751=IKsin(j4);
IkReal x1752=((IkReal(1.00000000000000))*(cj7));
IkReal x1753=((cj8)*(r20));
IkReal x1754=((cj3)*(r02));
IkReal x1755=((IkReal(1.00000000000000))*(sj7));
IkReal x1756=((sj3)*(sj7));
IkReal x1757=((r21)*(sj8));
IkReal x1758=((IkReal(1.00000000000000))*(cj5));
IkReal x1759=((cj8)*(r10));
IkReal x1760=((sj5)*(x1751));
IkReal x1761=((sj5)*(x1750));
IkReal x1762=((r11)*(sj3)*(sj8));
IkReal x1763=((cj3)*(cj8)*(r00));
IkReal x1764=((cj3)*(r01)*(sj8));
IkReal x1765=((x1750)*(x1758));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1765)))+(x1760)+(((IkReal(-1.00000000000000))*(r22)*(x1755)))+(((cj7)*(x1757)))+(((IkReal(-1.00000000000000))*(x1752)*(x1753))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1761)))+(((sj7)*(x1757)))+(((IkReal(-1.00000000000000))*(x1751)*(x1758)))+(((IkReal(-1.00000000000000))*(x1753)*(x1755)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1752)*(x1764)))+(((IkReal(-1.00000000000000))*(x1752)*(x1762)))+(((cj5)*(x1751)))+(((cj7)*(x1763)))+(x1761)+(((cj7)*(sj3)*(x1759)))+(((sj7)*(x1754)))+(((r12)*(x1756))));
evalcond[3]=((((sj7)*(x1763)))+(((IkReal(-1.00000000000000))*(x1765)))+(x1760)+(((IkReal(-1.00000000000000))*(x1755)*(x1762)))+(((IkReal(-1.00000000000000))*(x1755)*(x1764)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1752)))+(((IkReal(-1.00000000000000))*(x1752)*(x1754)))+(((x1756)*(x1759))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1766=((r21)*(sj8));
IkReal x1767=((IkReal(1.00000000000000))*(r22));
IkReal x1768=((cj5)*(sj7));
IkReal x1769=((cj6)*(cj7));
IkReal x1770=((sj5)*(sj7));
IkReal x1771=((cj5)*(cj8)*(r20));
IkReal x1772=((IkReal(1.00000000000000))*(x1769));
IkReal x1773=((cj8)*(r20)*(sj5));
if( IKabs(((gconst7)*(((((cj6)*(r22)*(x1770)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1767)))+(((cj8)*(r20)*(x1768)))+(((IkReal(-1.00000000000000))*(sj5)*(x1766)*(x1772)))+(((x1769)*(x1773)))+(((IkReal(-1.00000000000000))*(x1766)*(x1768))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1766)*(x1770)))+(((cj8)*(r20)*(x1770)))+(((IkReal(-1.00000000000000))*(x1771)*(x1772)))+(((IkReal(-1.00000000000000))*(cj6)*(x1767)*(x1768)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1767)))+(((cj5)*(x1766)*(x1769))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst7)*(((((cj6)*(r22)*(x1770)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1767)))+(((cj8)*(r20)*(x1768)))+(((IkReal(-1.00000000000000))*(sj5)*(x1766)*(x1772)))+(((x1769)*(x1773)))+(((IkReal(-1.00000000000000))*(x1766)*(x1768)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x1766)*(x1770)))+(((cj8)*(r20)*(x1770)))+(((IkReal(-1.00000000000000))*(x1771)*(x1772)))+(((IkReal(-1.00000000000000))*(cj6)*(x1767)*(x1768)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1767)))+(((cj5)*(x1766)*(x1769)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1774=IKsin(j4);
IkReal x1775=IKcos(j4);
IkReal x1776=((IkReal(1.00000000000000))*(cj8));
IkReal x1777=((cj3)*(r01));
IkReal x1778=((IkReal(1.00000000000000))*(sj8));
IkReal x1779=((r11)*(sj3));
IkReal x1780=((cj3)*(r00));
IkReal x1781=((IkReal(1.00000000000000))*(sj6));
IkReal x1782=((IkReal(1.00000000000000))*(cj7));
IkReal x1783=((cj3)*(r02));
IkReal x1784=((sj3)*(sj7));
IkReal x1785=((cj7)*(cj8));
IkReal x1786=((r21)*(sj8));
IkReal x1787=((r10)*(sj3));
IkReal x1788=((sj5)*(x1775));
IkReal x1789=((cj5)*(x1775));
IkReal x1790=((cj6)*(x1774));
IkReal x1791=((cj5)*(x1774));
IkReal x1792=((sj5)*(x1774));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1781)*(x1788)))+(((IkReal(-1.00000000000000))*(x1781)*(x1791)))+(((r20)*(sj8))));
evalcond[1]=((((cj7)*(x1786)))+(x1792)+(((IkReal(-1.00000000000000))*(x1789)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1776))));
evalcond[2]=((((cj6)*(x1788)))+(((sj7)*(x1786)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1776)))+(((cj7)*(r22)))+(((cj5)*(x1790))));
evalcond[3]=((((sj6)*(x1792)))+(((IkReal(-1.00000000000000))*(x1776)*(x1779)))+(((IkReal(-1.00000000000000))*(x1776)*(x1777)))+(((IkReal(-1.00000000000000))*(x1778)*(x1780)))+(((IkReal(-1.00000000000000))*(x1778)*(x1787)))+(((IkReal(-1.00000000000000))*(x1781)*(x1789))));
evalcond[4]=((x1788)+(x1791)+(((IkReal(-1.00000000000000))*(cj7)*(x1777)*(x1778)))+(((IkReal(-1.00000000000000))*(cj7)*(x1778)*(x1779)))+(((sj7)*(x1783)))+(((r12)*(x1784)))+(((x1785)*(x1787)))+(((x1780)*(x1785))));
evalcond[5]=((((cj6)*(x1789)))+(((IkReal(-1.00000000000000))*(sj5)*(x1790)))+(((cj8)*(r10)*(x1784)))+(((cj8)*(sj7)*(x1780)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1782)))+(((IkReal(-1.00000000000000))*(sj7)*(x1777)*(x1778)))+(((IkReal(-1.00000000000000))*(x1782)*(x1783)))+(((IkReal(-1.00000000000000))*(sj7)*(x1778)*(x1779))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1793=((sj5)*(sj6));
IkReal x1794=((r22)*(sj7));
IkReal x1795=((r20)*(sj8));
IkReal x1796=((cj8)*(r21));
IkReal x1797=((cj5)*(sj6));
IkReal x1798=((cj7)*(cj8)*(r20));
IkReal x1799=((cj7)*(r21)*(sj8));
if( IKabs(((gconst6)*(((((x1793)*(x1798)))+(((x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(x1793)*(x1799)))+(((cj5)*(x1796)))+(((cj5)*(x1795))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(x1794)*(x1797)))+(((sj5)*(x1796)))+(((sj5)*(x1795))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((x1793)*(x1798)))+(((x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(x1793)*(x1799)))+(((cj5)*(x1796)))+(((cj5)*(x1795)))))), ((gconst6)*(((((x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(x1794)*(x1797)))+(((sj5)*(x1796)))+(((sj5)*(x1795)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1800=IKsin(j4);
IkReal x1801=IKcos(j4);
IkReal x1802=((IkReal(1.00000000000000))*(cj8));
IkReal x1803=((cj3)*(r01));
IkReal x1804=((IkReal(1.00000000000000))*(sj8));
IkReal x1805=((r11)*(sj3));
IkReal x1806=((cj3)*(r00));
IkReal x1807=((IkReal(1.00000000000000))*(sj6));
IkReal x1808=((IkReal(1.00000000000000))*(cj7));
IkReal x1809=((cj3)*(r02));
IkReal x1810=((sj3)*(sj7));
IkReal x1811=((cj7)*(cj8));
IkReal x1812=((r21)*(sj8));
IkReal x1813=((r10)*(sj3));
IkReal x1814=((sj5)*(x1801));
IkReal x1815=((cj5)*(x1801));
IkReal x1816=((cj6)*(x1800));
IkReal x1817=((cj5)*(x1800));
IkReal x1818=((sj5)*(x1800));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1807)*(x1817)))+(((IkReal(-1.00000000000000))*(x1807)*(x1814)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x1818)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1802)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1815)))+(((cj7)*(x1812))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1802)))+(((cj6)*(x1814)))+(((cj7)*(r22)))+(((cj5)*(x1816)))+(((sj7)*(x1812))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1804)*(x1813)))+(((IkReal(-1.00000000000000))*(x1807)*(x1815)))+(((IkReal(-1.00000000000000))*(x1804)*(x1806)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(x1802)*(x1805)))+(((sj6)*(x1818))));
evalcond[4]=((x1814)+(x1817)+(((IkReal(-1.00000000000000))*(cj7)*(x1804)*(x1805)))+(((sj7)*(x1809)))+(((x1811)*(x1813)))+(((x1806)*(x1811)))+(((IkReal(-1.00000000000000))*(cj7)*(x1803)*(x1804)))+(((r12)*(x1810))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj5)*(x1816)))+(((cj8)*(r10)*(x1810)))+(((cj6)*(x1815)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(sj7)*(x1803)*(x1804)))+(((cj8)*(sj7)*(x1806)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1808)))+(((IkReal(-1.00000000000000))*(sj7)*(x1804)*(x1805))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1819=((r21)*(sj8));
IkReal x1820=((IkReal(1.00000000000000))*(r22));
IkReal x1821=((cj5)*(sj7));
IkReal x1822=((cj6)*(cj7));
IkReal x1823=((sj5)*(sj7));
IkReal x1824=((cj5)*(cj8)*(r20));
IkReal x1825=((IkReal(1.00000000000000))*(x1822));
IkReal x1826=((cj8)*(r20)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1819)*(x1821)))+(((x1822)*(x1826)))+(((cj8)*(r20)*(x1821)))+(((IkReal(-1.00000000000000))*(sj5)*(x1819)*(x1825)))+(((cj6)*(r22)*(x1823)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1820))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1819)*(x1823)))+(((cj5)*(x1819)*(x1822)))+(((IkReal(-1.00000000000000))*(cj6)*(x1820)*(x1821)))+(((cj8)*(r20)*(x1823)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1820))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(x1819)*(x1821)))+(((x1822)*(x1826)))+(((cj8)*(r20)*(x1821)))+(((IkReal(-1.00000000000000))*(sj5)*(x1819)*(x1825)))+(((cj6)*(r22)*(x1823)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1820)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1819)*(x1823)))+(((cj5)*(x1819)*(x1822)))+(((IkReal(-1.00000000000000))*(cj6)*(x1820)*(x1821)))+(((cj8)*(r20)*(x1823)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1820)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1827=IKsin(j4);
IkReal x1828=IKcos(j4);
IkReal x1829=((IkReal(1.00000000000000))*(cj5));
IkReal x1830=((r21)*(sj8));
IkReal x1831=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1832=((sj5)*(x1828));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj6)*(x1832)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj6)*(x1827)*(x1829)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(x1831)))+(((cj7)*(x1830)))+(((IkReal(-1.00000000000000))*(x1828)*(x1829)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x1827))));
evalcond[2]=((((cj6)*(x1832)))+(((sj7)*(x1830)))+(((cj5)*(cj6)*(x1827)))+(((IkReal(-1.00000000000000))*(sj7)*(x1831)))+(((cj7)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1833=(sj8)*(sj8);
IkReal x1834=(cj8)*(cj8);
IkReal x1835=((r00)*(r11));
IkReal x1836=((r02)*(sj7));
IkReal x1837=((cj7)*(x1834));
IkReal x1838=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1839=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1840=((cj7)*(x1833));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(x1837)*(x1839)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((x1835)*(x1837)))+(((cj8)*(r11)*(x1836)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1838)))+(((r10)*(sj8)*(x1836)))+(((x1835)*(x1840)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1838)))));
IkReal x1841=(sj8)*(sj8);
IkReal x1842=(cj8)*(cj8);
IkReal x1843=((r00)*(r11));
IkReal x1844=((r02)*(sj7));
IkReal x1845=((cj7)*(x1842));
IkReal x1846=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1847=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1848=((cj7)*(x1841));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1846)))+(((IkReal(-1.00000000000000))*(x1845)*(x1847)))+(((cj8)*(r11)*(x1844)))+(((IkReal(-1.00000000000000))*(x1847)*(x1848)))+(((x1843)*(x1848)))+(((x1843)*(x1845)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1846)))+(((r10)*(sj8)*(x1844))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1849=(sj8)*(sj8);
IkReal x1850=(cj8)*(cj8);
IkReal x1851=((IkReal(1.00000000000000))*(r10));
IkReal x1852=((cj7)*(sj8));
IkReal x1853=((r00)*(r11));
IkReal x1854=((cj7)*(cj8));
IkReal x1855=((sj7)*(x1849));
IkReal x1856=((sj7)*(x1850));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x1851)*(x1856)))+(((IkReal(-1.00000000000000))*(r01)*(x1851)*(x1855)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1854)))+(((IkReal(-1.00000000000000))*(r02)*(x1851)*(x1852)))+(((x1853)*(x1855)))+(((x1853)*(x1856)))+(((r01)*(r12)*(x1854)))+(((r00)*(r12)*(x1852)))));
IkReal x1857=(sj8)*(sj8);
IkReal x1858=(cj8)*(cj8);
IkReal x1859=((IkReal(1.00000000000000))*(r10));
IkReal x1860=((cj7)*(sj8));
IkReal x1861=((r00)*(r11));
IkReal x1862=((cj7)*(cj8));
IkReal x1863=((sj7)*(x1857));
IkReal x1864=((sj7)*(x1858));
dummyeval[0]=((((r01)*(r12)*(x1862)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1862)))+(((r00)*(r12)*(x1860)))+(((IkReal(-1.00000000000000))*(r01)*(x1859)*(x1863)))+(((IkReal(-1.00000000000000))*(r01)*(x1859)*(x1864)))+(((x1861)*(x1863)))+(((x1861)*(x1864)))+(((IkReal(-1.00000000000000))*(r02)*(x1859)*(x1860))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1865=((cj6)*(sj7));
IkReal x1866=((IkReal(1.00000000000000))*(sj8));
IkReal x1867=((cj8)*(sj6));
IkReal x1868=((sj6)*(sj8));
IkReal x1869=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r11)*(x1865)*(x1866)))+(((r11)*(x1867)))+(((IkReal(-1.00000000000000))*(r12)*(x1869)))+(((r10)*(x1868)))+(((cj8)*(r10)*(x1865))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(r02)*(x1869)))+(((r01)*(x1867)))+(((cj8)*(r00)*(x1865)))+(((r00)*(x1868))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(r11)*(x1865)*(x1866)))+(((r11)*(x1867)))+(((IkReal(-1.00000000000000))*(r12)*(x1869)))+(((r10)*(x1868)))+(((cj8)*(r10)*(x1865)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(r02)*(x1869)))+(((r01)*(x1867)))+(((cj8)*(r00)*(x1865)))+(((r00)*(x1868)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1870=IKsin(j3);
IkReal x1871=IKcos(j3);
IkReal x1872=((cj4)*(cj5));
IkReal x1873=((r01)*(sj8));
IkReal x1874=((cj8)*(r00));
IkReal x1875=((r00)*(sj8));
IkReal x1876=((cj8)*(r11));
IkReal x1877=((r11)*(sj8));
IkReal x1878=((sj4)*(sj5));
IkReal x1879=((r10)*(sj8));
IkReal x1880=((cj8)*(r10));
IkReal x1881=((cj7)*(x1870));
IkReal x1882=((sj7)*(x1871));
IkReal x1883=((IkReal(1.00000000000000))*(x1870));
IkReal x1884=((IkReal(1.00000000000000))*(x1871));
IkReal x1885=((cj8)*(x1870));
IkReal x1886=((IkReal(1.00000000000000))*(x1877));
IkReal x1887=((sj7)*(x1870));
IkReal x1888=((cj7)*(x1871));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1876)*(x1884)))+(((IkReal(-1.00000000000000))*(x1879)*(x1884)))+(cj6)+(((r01)*(x1885)))+(((x1870)*(x1875))));
evalcond[1]=((((sj6)*(x1878)))+(((IkReal(-1.00000000000000))*(x1876)*(x1883)))+(((IkReal(-1.00000000000000))*(x1879)*(x1883)))+(((IkReal(-1.00000000000000))*(sj6)*(x1872)))+(((IkReal(-1.00000000000000))*(x1875)*(x1884)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1884))));
evalcond[2]=((((r12)*(x1882)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1883)))+(((x1880)*(x1888)))+(((IkReal(-1.00000000000000))*(x1874)*(x1881)))+(((IkReal(-1.00000000000000))*(cj7)*(x1877)*(x1884)))+(((x1873)*(x1881))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1882)*(x1886)))+(sj6)+(((x1880)*(x1882)))+(((x1873)*(x1887)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1884)))+(((IkReal(-1.00000000000000))*(sj7)*(x1874)*(x1883)))+(((r02)*(x1881))));
evalcond[4]=((((x1874)*(x1888)))+(((r12)*(x1887)))+(((x1880)*(x1881)))+(((cj5)*(sj4)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x1881)*(x1886)))+(((IkReal(-1.00000000000000))*(cj7)*(x1873)*(x1884)))+(((r02)*(x1882))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1873)*(x1882)))+(((IkReal(-1.00000000000000))*(sj7)*(x1877)*(x1883)))+(((x1874)*(x1882)))+(((IkReal(-1.00000000000000))*(cj6)*(x1878)))+(((x1880)*(x1887)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1884)))+(((cj6)*(x1872)))+(((IkReal(-1.00000000000000))*(r12)*(x1881))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1889=((cj6)*(cj7));
IkReal x1890=((IkReal(1.00000000000000))*(sj8));
IkReal x1891=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((cj8)*(r10)*(x1889)))+(((IkReal(-1.00000000000000))*(r11)*(x1889)*(x1890)))+(((r12)*(x1891))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((r02)*(x1891)))+(((cj8)*(r00)*(x1889)))+(((IkReal(-1.00000000000000))*(r01)*(x1889)*(x1890))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((cj8)*(r10)*(x1889)))+(((IkReal(-1.00000000000000))*(r11)*(x1889)*(x1890)))+(((r12)*(x1891)))))), ((gconst16)*(((((r02)*(x1891)))+(((cj8)*(r00)*(x1889)))+(((IkReal(-1.00000000000000))*(r01)*(x1889)*(x1890)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1892=IKsin(j3);
IkReal x1893=IKcos(j3);
IkReal x1894=((cj4)*(cj5));
IkReal x1895=((r01)*(sj8));
IkReal x1896=((cj8)*(r00));
IkReal x1897=((r00)*(sj8));
IkReal x1898=((cj8)*(r11));
IkReal x1899=((r11)*(sj8));
IkReal x1900=((sj4)*(sj5));
IkReal x1901=((r10)*(sj8));
IkReal x1902=((cj8)*(r10));
IkReal x1903=((cj7)*(x1892));
IkReal x1904=((sj7)*(x1893));
IkReal x1905=((IkReal(1.00000000000000))*(x1892));
IkReal x1906=((IkReal(1.00000000000000))*(x1893));
IkReal x1907=((cj8)*(x1892));
IkReal x1908=((IkReal(1.00000000000000))*(x1899));
IkReal x1909=((sj7)*(x1892));
IkReal x1910=((cj7)*(x1893));
evalcond[0]=((((r01)*(x1907)))+(cj6)+(((x1892)*(x1897)))+(((IkReal(-1.00000000000000))*(x1901)*(x1906)))+(((IkReal(-1.00000000000000))*(x1898)*(x1906))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1906)))+(((IkReal(-1.00000000000000))*(x1901)*(x1905)))+(((IkReal(-1.00000000000000))*(x1898)*(x1905)))+(((IkReal(-1.00000000000000))*(x1897)*(x1906)))+(((sj6)*(x1900)))+(((IkReal(-1.00000000000000))*(sj6)*(x1894))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1905)))+(((IkReal(-1.00000000000000))*(cj7)*(x1899)*(x1906)))+(((r12)*(x1904)))+(((IkReal(-1.00000000000000))*(x1896)*(x1903)))+(((x1895)*(x1903)))+(((x1902)*(x1910))));
evalcond[3]=((sj6)+(((IkReal(-1.00000000000000))*(x1904)*(x1908)))+(((x1895)*(x1909)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1906)))+(((x1902)*(x1904)))+(((r02)*(x1903)))+(((IkReal(-1.00000000000000))*(sj7)*(x1896)*(x1905))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1903)*(x1908)))+(((cj5)*(sj4)))+(((r12)*(x1909)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1895)*(x1906)))+(((x1896)*(x1910)))+(((x1902)*(x1903)))+(((r02)*(x1904))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1895)*(x1904)))+(((IkReal(-1.00000000000000))*(sj7)*(x1899)*(x1905)))+(((IkReal(-1.00000000000000))*(r12)*(x1903)))+(((cj6)*(x1894)))+(((IkReal(-1.00000000000000))*(cj6)*(x1900)))+(((x1902)*(x1909)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1906)))+(((x1896)*(x1904))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1911=((sj5)*(sj6));
IkReal x1912=((r22)*(sj7));
IkReal x1913=((cj8)*(r21));
IkReal x1914=((r20)*(sj8));
IkReal x1915=((cj5)*(sj6));
IkReal x1916=((cj7)*(cj8)*(r20));
IkReal x1917=((cj7)*(r21)*(sj8));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1911)*(x1917)))+(((x1911)*(x1916)))+(((x1911)*(x1912)))+(((cj5)*(x1913)))+(((cj5)*(x1914))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((sj5)*(x1913)))+(((sj5)*(x1914)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((x1915)*(x1917))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1911)*(x1917)))+(((x1911)*(x1916)))+(((x1911)*(x1912)))+(((cj5)*(x1913)))+(((cj5)*(x1914)))))), ((gconst4)*(((((sj5)*(x1913)))+(((sj5)*(x1914)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((x1915)*(x1917)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1918=IKsin(j4);
IkReal x1919=IKcos(j4);
IkReal x1920=((IkReal(1.00000000000000))*(cj5));
IkReal x1921=((r21)*(sj8));
IkReal x1922=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1923=((sj5)*(x1919));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(sj6)*(x1923)))+(((IkReal(-1.00000000000000))*(sj6)*(x1918)*(x1920))));
evalcond[1]=((((sj5)*(x1918)))+(((cj7)*(x1921)))+(((IkReal(-1.00000000000000))*(cj7)*(x1922)))+(((IkReal(-1.00000000000000))*(x1919)*(x1920)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((sj7)*(x1921)))+(((cj5)*(cj6)*(x1918)))+(((IkReal(-1.00000000000000))*(sj7)*(x1922)))+(((cj6)*(x1923)))+(((cj7)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1924=(sj8)*(sj8);
IkReal x1925=(cj8)*(cj8);
IkReal x1926=((r00)*(r11));
IkReal x1927=((r02)*(sj7));
IkReal x1928=((cj7)*(x1925));
IkReal x1929=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1930=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1931=((cj7)*(x1924));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(x1928)*(x1930)))+(((IkReal(-1.00000000000000))*(x1930)*(x1931)))+(((cj8)*(r11)*(x1927)))+(((r10)*(sj8)*(x1927)))+(((x1926)*(x1931)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1929)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1929)))+(((x1926)*(x1928)))));
IkReal x1932=(sj8)*(sj8);
IkReal x1933=(cj8)*(cj8);
IkReal x1934=((r00)*(r11));
IkReal x1935=((r02)*(sj7));
IkReal x1936=((cj7)*(x1933));
IkReal x1937=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1938=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1939=((cj7)*(x1932));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1937)))+(((x1934)*(x1936)))+(((x1934)*(x1939)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1937)))+(((IkReal(-1.00000000000000))*(x1938)*(x1939)))+(((cj8)*(r11)*(x1935)))+(((IkReal(-1.00000000000000))*(x1936)*(x1938)))+(((r10)*(sj8)*(x1935))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1940=(sj8)*(sj8);
IkReal x1941=(cj8)*(cj8);
IkReal x1942=((IkReal(1.00000000000000))*(r10));
IkReal x1943=((cj7)*(sj8));
IkReal x1944=((r00)*(r11));
IkReal x1945=((cj7)*(cj8));
IkReal x1946=((sj7)*(x1940));
IkReal x1947=((sj7)*(x1941));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(r02)*(r11)*(x1945)))+(((x1944)*(x1947)))+(((x1944)*(x1946)))+(((IkReal(-1.00000000000000))*(r01)*(x1942)*(x1946)))+(((IkReal(-1.00000000000000))*(r01)*(x1942)*(x1947)))+(((r00)*(r12)*(x1943)))+(((IkReal(-1.00000000000000))*(r02)*(x1942)*(x1943)))+(((r01)*(r12)*(x1945)))));
IkReal x1948=(sj8)*(sj8);
IkReal x1949=(cj8)*(cj8);
IkReal x1950=((IkReal(1.00000000000000))*(r10));
IkReal x1951=((cj7)*(sj8));
IkReal x1952=((r00)*(r11));
IkReal x1953=((cj7)*(cj8));
IkReal x1954=((sj7)*(x1948));
IkReal x1955=((sj7)*(x1949));
dummyeval[0]=((((r01)*(r12)*(x1953)))+(((x1952)*(x1955)))+(((x1952)*(x1954)))+(((IkReal(-1.00000000000000))*(r01)*(x1950)*(x1954)))+(((IkReal(-1.00000000000000))*(r01)*(x1950)*(x1955)))+(((r00)*(r12)*(x1951)))+(((IkReal(-1.00000000000000))*(r02)*(x1950)*(x1951)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1953))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1956=((cj6)*(sj7));
IkReal x1957=((IkReal(1.00000000000000))*(sj8));
IkReal x1958=((cj8)*(sj6));
IkReal x1959=((sj6)*(sj8));
IkReal x1960=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((r11)*(x1958)))+(((r10)*(x1959)))+(((IkReal(-1.00000000000000))*(r11)*(x1956)*(x1957)))+(((IkReal(-1.00000000000000))*(r12)*(x1960)))+(((cj8)*(r10)*(x1956))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj8)*(r00)*(x1956)))+(((IkReal(-1.00000000000000))*(r02)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1956)*(x1957)))+(((r01)*(x1958)))+(((r00)*(x1959))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((r11)*(x1958)))+(((r10)*(x1959)))+(((IkReal(-1.00000000000000))*(r11)*(x1956)*(x1957)))+(((IkReal(-1.00000000000000))*(r12)*(x1960)))+(((cj8)*(r10)*(x1956)))))), ((gconst17)*(((((cj8)*(r00)*(x1956)))+(((IkReal(-1.00000000000000))*(r02)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1956)*(x1957)))+(((r01)*(x1958)))+(((r00)*(x1959)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1961=IKsin(j3);
IkReal x1962=IKcos(j3);
IkReal x1963=((cj4)*(cj5));
IkReal x1964=((r01)*(sj8));
IkReal x1965=((cj8)*(r00));
IkReal x1966=((r00)*(sj8));
IkReal x1967=((cj8)*(r11));
IkReal x1968=((r11)*(sj8));
IkReal x1969=((sj4)*(sj5));
IkReal x1970=((r10)*(sj8));
IkReal x1971=((cj8)*(r10));
IkReal x1972=((cj7)*(x1961));
IkReal x1973=((sj7)*(x1962));
IkReal x1974=((IkReal(1.00000000000000))*(x1961));
IkReal x1975=((IkReal(1.00000000000000))*(x1962));
IkReal x1976=((cj8)*(x1961));
IkReal x1977=((IkReal(1.00000000000000))*(x1968));
IkReal x1978=((sj7)*(x1961));
IkReal x1979=((cj7)*(x1962));
evalcond[0]=((cj6)+(((IkReal(-1.00000000000000))*(x1970)*(x1975)))+(((r01)*(x1976)))+(((x1961)*(x1966)))+(((IkReal(-1.00000000000000))*(x1967)*(x1975))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1975)))+(((IkReal(-1.00000000000000))*(sj6)*(x1963)))+(((IkReal(-1.00000000000000))*(x1966)*(x1975)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((sj6)*(x1969)))+(((IkReal(-1.00000000000000))*(x1967)*(x1974))));
evalcond[2]=((((r12)*(x1973)))+(((x1964)*(x1972)))+(((x1971)*(x1979)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1974)))+(((IkReal(-1.00000000000000))*(cj7)*(x1968)*(x1975)))+(((IkReal(-1.00000000000000))*(x1965)*(x1972))));
evalcond[3]=((((r02)*(x1972)))+(sj6)+(((IkReal(-1.00000000000000))*(sj7)*(x1965)*(x1974)))+(((x1964)*(x1978)))+(((x1971)*(x1973)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1975)))+(((IkReal(-1.00000000000000))*(x1973)*(x1977))));
evalcond[4]=((((r02)*(x1973)))+(((IkReal(-1.00000000000000))*(cj7)*(x1964)*(x1975)))+(((r12)*(x1978)))+(((x1971)*(x1972)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1972)*(x1977)))+(((cj4)*(sj5)))+(((x1965)*(x1979))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x1969)))+(((cj6)*(x1963)))+(((x1971)*(x1978)))+(((IkReal(-1.00000000000000))*(x1964)*(x1973)))+(((IkReal(-1.00000000000000))*(r12)*(x1972)))+(((x1965)*(x1973)))+(((IkReal(-1.00000000000000))*(sj7)*(x1968)*(x1974)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1975))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1980=((cj6)*(cj7));
IkReal x1981=((IkReal(1.00000000000000))*(sj8));
IkReal x1982=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((cj8)*(r10)*(x1980)))+(((r12)*(x1982)))+(((IkReal(-1.00000000000000))*(r11)*(x1980)*(x1981))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj8)*(r00)*(x1980)))+(((IkReal(-1.00000000000000))*(r01)*(x1980)*(x1981)))+(((r02)*(x1982))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((cj8)*(r10)*(x1980)))+(((r12)*(x1982)))+(((IkReal(-1.00000000000000))*(r11)*(x1980)*(x1981)))))), ((gconst16)*(((((cj8)*(r00)*(x1980)))+(((IkReal(-1.00000000000000))*(r01)*(x1980)*(x1981)))+(((r02)*(x1982)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1983=IKsin(j3);
IkReal x1984=IKcos(j3);
IkReal x1985=((cj4)*(cj5));
IkReal x1986=((r01)*(sj8));
IkReal x1987=((cj8)*(r00));
IkReal x1988=((r00)*(sj8));
IkReal x1989=((cj8)*(r11));
IkReal x1990=((r11)*(sj8));
IkReal x1991=((sj4)*(sj5));
IkReal x1992=((r10)*(sj8));
IkReal x1993=((cj8)*(r10));
IkReal x1994=((cj7)*(x1983));
IkReal x1995=((sj7)*(x1984));
IkReal x1996=((IkReal(1.00000000000000))*(x1983));
IkReal x1997=((IkReal(1.00000000000000))*(x1984));
IkReal x1998=((cj8)*(x1983));
IkReal x1999=((IkReal(1.00000000000000))*(x1990));
IkReal x2000=((sj7)*(x1983));
IkReal x2001=((cj7)*(x1984));
evalcond[0]=((cj6)+(((IkReal(-1.00000000000000))*(x1989)*(x1997)))+(((IkReal(-1.00000000000000))*(x1992)*(x1997)))+(((r01)*(x1998)))+(((x1983)*(x1988))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x1985)))+(((IkReal(-1.00000000000000))*(x1989)*(x1996)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1997)))+(((sj6)*(x1991)))+(((IkReal(-1.00000000000000))*(x1992)*(x1996)))+(((IkReal(-1.00000000000000))*(x1988)*(x1997))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1987)*(x1994)))+(((r12)*(x1995)))+(((x1993)*(x2001)))+(((x1986)*(x1994)))+(((IkReal(-1.00000000000000))*(cj7)*(x1990)*(x1997)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1996))));
evalcond[3]=((sj6)+(((x1986)*(x2000)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1997)))+(((IkReal(-1.00000000000000))*(sj7)*(x1987)*(x1996)))+(((r02)*(x1994)))+(((IkReal(-1.00000000000000))*(x1995)*(x1999)))+(((x1993)*(x1995))));
evalcond[4]=((((r12)*(x2000)))+(((x1987)*(x2001)))+(((cj5)*(sj4)))+(((r02)*(x1995)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1986)*(x1997)))+(((IkReal(-1.00000000000000))*(x1994)*(x1999)))+(((x1993)*(x1994))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1994)))+(((IkReal(-1.00000000000000))*(cj6)*(x1991)))+(((x1993)*(x2000)))+(((cj6)*(x1985)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1997)))+(((IkReal(-1.00000000000000))*(x1986)*(x1995)))+(((x1987)*(x1995)))+(((IkReal(-1.00000000000000))*(sj7)*(x1990)*(x1996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2002=((cj6)*(sj7));
IkReal x2003=((IkReal(1.00000000000000))*(sj8));
IkReal x2004=((cj8)*(sj6));
IkReal x2005=((sj6)*(sj8));
IkReal x2006=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst1)*(((((r11)*(x2004)))+(((r10)*(x2005)))+(((IkReal(-1.00000000000000))*(r12)*(x2006)))+(((cj8)*(r10)*(x2002)))+(((IkReal(-1.00000000000000))*(r11)*(x2002)*(x2003))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r01)*(x2004)))+(((r00)*(x2005)))+(((IkReal(-1.00000000000000))*(r02)*(x2006)))+(((cj8)*(r00)*(x2002)))+(((IkReal(-1.00000000000000))*(r01)*(x2002)*(x2003))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((r11)*(x2004)))+(((r10)*(x2005)))+(((IkReal(-1.00000000000000))*(r12)*(x2006)))+(((cj8)*(r10)*(x2002)))+(((IkReal(-1.00000000000000))*(r11)*(x2002)*(x2003)))))), ((gconst1)*(((((r01)*(x2004)))+(((r00)*(x2005)))+(((IkReal(-1.00000000000000))*(r02)*(x2006)))+(((cj8)*(r00)*(x2002)))+(((IkReal(-1.00000000000000))*(r01)*(x2002)*(x2003)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2007=IKsin(j3);
IkReal x2008=IKcos(j3);
IkReal x2009=((IkReal(1.00000000000000))*(r11));
IkReal x2010=((r01)*(sj8));
IkReal x2011=((cj8)*(r10));
IkReal x2012=((IkReal(1.00000000000000))*(sj7));
IkReal x2013=((sj7)*(x2008));
IkReal x2014=((cj7)*(x2007));
IkReal x2015=((r00)*(x2007));
IkReal x2016=((cj7)*(x2008));
evalcond[0]=((cj6)+(((IkReal(-1.00000000000000))*(cj8)*(x2008)*(x2009)))+(((sj8)*(x2015)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2008)))+(((cj8)*(r01)*(x2007))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x2007)*(x2012)))+(((IkReal(-1.00000000000000))*(sj8)*(x2009)*(x2016)))+(((x2011)*(x2016)))+(((x2010)*(x2014)))+(((r12)*(x2013)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x2014))));
evalcond[2]=((sj6)+(((IkReal(-1.00000000000000))*(sj8)*(x2009)*(x2013)))+(((x2011)*(x2013)))+(((IkReal(-1.00000000000000))*(cj8)*(x2012)*(x2015)))+(((IkReal(-1.00000000000000))*(r12)*(x2016)))+(((sj7)*(x2007)*(x2010)))+(((r02)*(x2014))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2017=((IkReal(1.00000000000000))*(cj3));
IkReal x2018=((cj7)*(r02));
IkReal x2019=((cj8)*(sj7));
IkReal x2020=((r01)*(sj3));
IkReal x2021=((IkReal(1.00000000000000))*(sj3));
IkReal x2022=((sj7)*(sj8));
IkReal x2023=((cj7)*(r12));
IkReal x2024=((cj7)*(cj8));
IkReal x2025=((cj3)*(r10));
IkReal x2026=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2017)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2017)))+(((cj8)*(x2020))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2019)))+(((cj7)*(r22)))+(((r21)*(x2022))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2022)))+(((IkReal(-1.00000000000000))*(npx)*(x2019)))+(((cj7)*(npz))));
evalcond[4]=((((x2020)*(x2026)))+(((x2024)*(x2025)))+(((IkReal(-1.00000000000000))*(r11)*(x2017)*(x2026)))+(((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2021)))+(((IkReal(-1.00000000000000))*(r00)*(x2021)*(x2024))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2020)*(x2022)))+(((IkReal(-1.00000000000000))*(r11)*(x2017)*(x2022)))+(((x2019)*(x2025)))+(((IkReal(-1.00000000000000))*(r00)*(x2019)*(x2021)))+(((IkReal(-1.00000000000000))*(x2017)*(x2023)))+(((sj3)*(x2018))));
evalcond[6]=((((r10)*(sj3)*(x2019)))+(((IkReal(-1.00000000000000))*(x2021)*(x2023)))+(((cj3)*(r00)*(x2019)))+(((IkReal(-1.00000000000000))*(r11)*(x2021)*(x2022)))+(((IkReal(-1.00000000000000))*(r01)*(x2017)*(x2022)))+(((IkReal(-1.00000000000000))*(x2017)*(x2018))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2027=((IkReal(4.00000000000000))*(npx));
IkReal x2028=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2028)))+(((IkReal(-1.00000000000000))*(sj8)*(x2027))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2027)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2028)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2028)))+(((IkReal(-1.00000000000000))*(sj8)*(x2027)))))+IKsqr(((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2027)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2028)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2028)))+(((IkReal(-1.00000000000000))*(sj8)*(x2027)))), ((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2027)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2028)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2029=((cj8)*(sj5));
IkReal x2030=((cj3)*(r01));
IkReal x2031=((IkReal(1.00000000000000))*(cj5));
IkReal x2032=((r11)*(sj3));
IkReal x2033=((sj5)*(sj8));
IkReal x2034=((r10)*(sj3));
IkReal x2035=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((x2033)*(x2034)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x2033)))+(((x2029)*(x2032)))+(((x2029)*(x2030)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((r20)*(x2033)))+(((IkReal(-1.00000000000000))*(cj8)*(x2030)*(x2031)))+(((IkReal(-1.00000000000000))*(sj8)*(x2031)*(x2034)))+(((IkReal(-1.00000000000000))*(x2031)*(x2035)))+(((IkReal(-1.00000000000000))*(cj8)*(x2031)*(x2032)))+(((r21)*(x2029))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((x2033)*(x2034)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x2033)))+(((x2029)*(x2032)))+(((x2029)*(x2030)))+(((cj5)*(cj8)*(r21)))))), ((gconst57)*(((((r20)*(x2033)))+(((IkReal(-1.00000000000000))*(cj8)*(x2030)*(x2031)))+(((IkReal(-1.00000000000000))*(sj8)*(x2031)*(x2034)))+(((IkReal(-1.00000000000000))*(x2031)*(x2035)))+(((IkReal(-1.00000000000000))*(cj8)*(x2031)*(x2032)))+(((r21)*(x2029)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2036=IKsin(j4);
IkReal x2037=IKcos(j4);
IkReal x2038=((IkReal(1.00000000000000))*(cj8));
IkReal x2039=((cj3)*(r01));
IkReal x2040=((cj3)*(r00));
IkReal x2041=((cj7)*(cj8));
IkReal x2042=((IkReal(1.00000000000000))*(cj5));
IkReal x2043=((IkReal(1.00000000000000))*(sj8));
IkReal x2044=((r11)*(sj3));
IkReal x2045=((r10)*(sj3));
IkReal x2046=((sj5)*(x2036));
IkReal x2047=((sj5)*(x2037));
IkReal x2048=((x2037)*(x2042));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2047)))+(((IkReal(-1.00000000000000))*(x2036)*(x2042)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2038)))+(((IkReal(-1.00000000000000))*(x2048)))+(x2046)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2048)))+(x2046)+(((IkReal(-1.00000000000000))*(x2040)*(x2043)))+(((IkReal(-1.00000000000000))*(x2043)*(x2045)))+(((IkReal(-1.00000000000000))*(x2038)*(x2039)))+(((IkReal(-1.00000000000000))*(x2038)*(x2044))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2041)*(x2045)))+(((x2040)*(x2041)))+(x2047)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2043)*(x2044)))+(((IkReal(-1.00000000000000))*(cj7)*(x2039)*(x2043)))+(((cj5)*(x2036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2049=((cj7)*(sj5));
IkReal x2050=((r21)*(sj8));
IkReal x2051=((cj8)*(r20));
IkReal x2052=((cj5)*(cj7));
IkReal x2053=((r22)*(sj7));
IkReal x2054=((cj8)*(r21));
IkReal x2055=((r20)*(sj8));
if( IKabs(((gconst56)*(((((cj5)*(x2054)))+(((cj5)*(x2055)))+(((x2049)*(x2051)))+(((sj5)*(x2053)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((sj5)*(x2054)))+(((sj5)*(x2055)))+(((IkReal(-1.00000000000000))*(x2051)*(x2052)))+(((x2050)*(x2052)))+(((IkReal(-1.00000000000000))*(cj5)*(x2053))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((cj5)*(x2054)))+(((cj5)*(x2055)))+(((x2049)*(x2051)))+(((sj5)*(x2053)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050)))))), ((gconst56)*(((((sj5)*(x2054)))+(((sj5)*(x2055)))+(((IkReal(-1.00000000000000))*(x2051)*(x2052)))+(((x2050)*(x2052)))+(((IkReal(-1.00000000000000))*(cj5)*(x2053)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2056=IKsin(j4);
IkReal x2057=IKcos(j4);
IkReal x2058=((IkReal(1.00000000000000))*(cj8));
IkReal x2059=((cj3)*(r01));
IkReal x2060=((cj3)*(r00));
IkReal x2061=((cj7)*(cj8));
IkReal x2062=((IkReal(1.00000000000000))*(cj5));
IkReal x2063=((IkReal(1.00000000000000))*(sj8));
IkReal x2064=((r11)*(sj3));
IkReal x2065=((r10)*(sj3));
IkReal x2066=((sj5)*(x2056));
IkReal x2067=((sj5)*(x2057));
IkReal x2068=((x2057)*(x2062));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2067)))+(((IkReal(-1.00000000000000))*(x2056)*(x2062)))+(((r20)*(sj8))));
evalcond[1]=((x2066)+(((IkReal(-1.00000000000000))*(x2068)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2058))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2058)*(x2059)))+(((IkReal(-1.00000000000000))*(x2063)*(x2065)))+(((IkReal(-1.00000000000000))*(x2058)*(x2064)))+(x2066)+(((IkReal(-1.00000000000000))*(x2068)))+(((IkReal(-1.00000000000000))*(x2060)*(x2063))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((cj5)*(x2056)))+(x2067)+(((IkReal(-1.00000000000000))*(cj7)*(x2059)*(x2063)))+(((x2060)*(x2061)))+(((cj3)*(r02)*(sj7)))+(((x2061)*(x2065)))+(((IkReal(-1.00000000000000))*(cj7)*(x2063)*(x2064))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2069=((IkReal(1.00000000000000))*(cj3));
IkReal x2070=((cj7)*(r02));
IkReal x2071=((cj8)*(sj7));
IkReal x2072=((r01)*(sj3));
IkReal x2073=((IkReal(1.00000000000000))*(sj3));
IkReal x2074=((sj7)*(sj8));
IkReal x2075=((cj7)*(r12));
IkReal x2076=((cj7)*(cj8));
IkReal x2077=((cj3)*(r10));
IkReal x2078=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2069)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2069)))+(((cj8)*(x2072))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2071)))+(((r21)*(x2074))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2074)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x2071))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x2069)*(x2078)))+(((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r00)*(x2073)*(x2076)))+(((x2076)*(x2077)))+(((x2072)*(x2078)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2073))));
evalcond[5]=((IkReal(-1.00000000000000))+(((sj3)*(x2070)))+(((IkReal(-1.00000000000000))*(r00)*(x2071)*(x2073)))+(((IkReal(-1.00000000000000))*(r11)*(x2069)*(x2074)))+(((x2071)*(x2077)))+(((IkReal(-1.00000000000000))*(x2069)*(x2075)))+(((x2072)*(x2074))));
evalcond[6]=((((cj3)*(r00)*(x2071)))+(((IkReal(-1.00000000000000))*(x2069)*(x2070)))+(((IkReal(-1.00000000000000))*(x2073)*(x2075)))+(((IkReal(-1.00000000000000))*(r01)*(x2069)*(x2074)))+(((IkReal(-1.00000000000000))*(r11)*(x2073)*(x2074)))+(((r10)*(sj3)*(x2071))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2079=((IkReal(4.00000000000000))*(npx));
IkReal x2080=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((cj8)*(x2080)))+(((sj8)*(x2079))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2080)))+(((cj7)*(cj8)*(x2079)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((cj8)*(x2080)))+(((sj8)*(x2079)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2080)))+(((cj7)*(cj8)*(x2079)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((cj8)*(x2080)))+(((sj8)*(x2079)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2080)))+(((cj7)*(cj8)*(x2079)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2081=((IkReal(1.00000000000000))*(sj5));
IkReal x2082=((r20)*(sj8));
IkReal x2083=((cj5)*(cj8));
IkReal x2084=((r11)*(sj3));
IkReal x2085=((cj3)*(r01));
IkReal x2086=((cj3)*(r00)*(sj8));
IkReal x2087=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r21)*(x2083)))+(((IkReal(-1.00000000000000))*(x2081)*(x2086)))+(((IkReal(-1.00000000000000))*(x2081)*(x2087)))+(((IkReal(-1.00000000000000))*(cj8)*(x2081)*(x2085)))+(((IkReal(-1.00000000000000))*(cj8)*(x2081)*(x2084)))+(((IkReal(-1.00000000000000))*(cj5)*(x2082))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2081)*(x2082)))+(((cj5)*(x2087)))+(((cj5)*(x2086)))+(((x2083)*(x2084)))+(((x2083)*(x2085)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2081))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(r21)*(x2083)))+(((IkReal(-1.00000000000000))*(x2081)*(x2086)))+(((IkReal(-1.00000000000000))*(x2081)*(x2087)))+(((IkReal(-1.00000000000000))*(cj8)*(x2081)*(x2085)))+(((IkReal(-1.00000000000000))*(cj8)*(x2081)*(x2084)))+(((IkReal(-1.00000000000000))*(cj5)*(x2082)))))), ((gconst59)*(((((IkReal(-1.00000000000000))*(x2081)*(x2082)))+(((cj5)*(x2087)))+(((cj5)*(x2086)))+(((x2083)*(x2084)))+(((x2083)*(x2085)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2081)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2088=IKsin(j4);
IkReal x2089=IKcos(j4);
IkReal x2090=((IkReal(1.00000000000000))*(cj8));
IkReal x2091=((cj3)*(r01));
IkReal x2092=((cj3)*(r00));
IkReal x2093=((cj7)*(cj8));
IkReal x2094=((r11)*(sj3));
IkReal x2095=((IkReal(1.00000000000000))*(sj8));
IkReal x2096=((r10)*(sj3));
IkReal x2097=((sj5)*(x2089));
IkReal x2098=((cj5)*(x2088));
IkReal x2099=((cj5)*(x2089));
IkReal x2100=((sj5)*(x2088));
IkReal x2101=((x2097)+(x2098));
evalcond[0]=((x2101)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2100)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2090)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2099)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2090)*(x2094)))+(((IkReal(-1.00000000000000))*(x2090)*(x2091)))+(x2099)+(((IkReal(-1.00000000000000))*(x2095)*(x2096)))+(((IkReal(-1.00000000000000))*(x2092)*(x2095)))+(((IkReal(-1.00000000000000))*(x2100))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(cj7)*(x2091)*(x2095)))+(x2101)+(((x2092)*(x2093)))+(((cj3)*(r02)*(sj7)))+(((x2093)*(x2096))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2102=((r22)*(sj7));
IkReal x2103=((cj8)*(sj5));
IkReal x2104=((sj5)*(sj8));
IkReal x2105=((cj7)*(r20));
IkReal x2106=((cj5)*(cj8));
IkReal x2107=((cj7)*(r21));
IkReal x2108=((cj5)*(sj8));
if( IKabs(((gconst58)*(((((r20)*(x2108)))+(((IkReal(-1.00000000000000))*(x2103)*(x2105)))+(((r21)*(x2106)))+(((x2104)*(x2107)))+(((IkReal(-1.00000000000000))*(sj5)*(x2102))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((r20)*(x2104)))+(((cj5)*(x2102)))+(((r21)*(x2103)))+(((IkReal(-1.00000000000000))*(x2107)*(x2108)))+(((x2105)*(x2106))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((r20)*(x2108)))+(((IkReal(-1.00000000000000))*(x2103)*(x2105)))+(((r21)*(x2106)))+(((x2104)*(x2107)))+(((IkReal(-1.00000000000000))*(sj5)*(x2102)))))), ((gconst58)*(((((r20)*(x2104)))+(((cj5)*(x2102)))+(((r21)*(x2103)))+(((IkReal(-1.00000000000000))*(x2107)*(x2108)))+(((x2105)*(x2106)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2109=IKsin(j4);
IkReal x2110=IKcos(j4);
IkReal x2111=((IkReal(1.00000000000000))*(cj8));
IkReal x2112=((cj3)*(r01));
IkReal x2113=((cj3)*(r00));
IkReal x2114=((cj7)*(cj8));
IkReal x2115=((r11)*(sj3));
IkReal x2116=((IkReal(1.00000000000000))*(sj8));
IkReal x2117=((r10)*(sj3));
IkReal x2118=((sj5)*(x2110));
IkReal x2119=((cj5)*(x2109));
IkReal x2120=((cj5)*(x2110));
IkReal x2121=((sj5)*(x2109));
IkReal x2122=((x2118)+(x2119));
evalcond[0]=((x2122)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2111)))+(x2121)+(((IkReal(-1.00000000000000))*(x2120)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2116)*(x2117)))+(x2120)+(((IkReal(-1.00000000000000))*(x2121)))+(((IkReal(-1.00000000000000))*(x2111)*(x2112)))+(((IkReal(-1.00000000000000))*(x2111)*(x2115)))+(((IkReal(-1.00000000000000))*(x2113)*(x2116))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(cj7)*(x2112)*(x2116)))+(x2122)+(((cj3)*(r02)*(sj7)))+(((x2113)*(x2114)))+(((x2114)*(x2117))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2123=((cj3)*(cj8));
IkReal x2124=((r01)*(sj3));
IkReal x2125=((r02)*(sj3));
IkReal x2126=((IkReal(1.00000000000000))*(sj7));
IkReal x2127=((IkReal(1.00000000000000))*(r11));
IkReal x2128=((cj3)*(r12));
IkReal x2129=((IkReal(1.00000000000000))*(cj7));
IkReal x2130=((cj8)*(sj3));
IkReal x2131=((sj3)*(sj8));
IkReal x2132=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(x2131)))+(((cj8)*(x2124)))+(((IkReal(-1.00000000000000))*(r10)*(x2132)))+(((IkReal(-1.00000000000000))*(x2123)*(x2127))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2132)))+(((IkReal(-1.00000000000000))*(x2127)*(x2130)))+(((IkReal(-1.00000000000000))*(r10)*(x2131)))+(((IkReal(-1.00000000000000))*(r01)*(x2123))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2129)*(x2130)))+(((cj7)*(sj8)*(x2124)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2127)))+(((IkReal(-1.00000000000000))*(x2125)*(x2126)))+(((sj7)*(x2128)))+(((cj7)*(r10)*(x2123))));
evalcond[6]=((((cj7)*(x2125)))+(((IkReal(-1.00000000000000))*(r00)*(x2126)*(x2130)))+(((sj7)*(sj8)*(x2124)))+(((IkReal(-1.00000000000000))*(x2128)*(x2129)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2126)))+(((r10)*(sj7)*(x2123))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2133=((IkReal(4.00000000000000))*(sj7));
IkReal x2134=((npy)*(sj8));
IkReal x2135=((IkReal(4.00000000000000))*(cj7));
IkReal x2136=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2135)))+(((IkReal(-1.00000000000000))*(x2133)*(x2136)))+(((x2133)*(x2134))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((x2135)*(x2136)))+(((npz)*(x2133)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2135)))+(((IkReal(-1.00000000000000))*(x2133)*(x2136)))+(((x2133)*(x2134)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((x2135)*(x2136)))+(((npz)*(x2133)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2135)))+(((IkReal(-1.00000000000000))*(x2133)*(x2136)))+(((x2133)*(x2134)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((x2135)*(x2136)))+(((npz)*(x2133)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2137=((IkReal(1.00000000000000))*(sj7));
IkReal x2138=((npy)*(sj8));
IkReal x2139=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x2139)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x2138)))+(((IkReal(-1.00000000000000))*(npz)*(x2137)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2138)))+(((IkReal(-0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x2137)*(x2139)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2140=((cj3)*(cj5));
IkReal x2141=((r02)*(sj7));
IkReal x2142=((cj8)*(r00));
IkReal x2143=((cj5)*(sj7));
IkReal x2144=((cj5)*(sj3));
IkReal x2145=((cj7)*(cj8));
IkReal x2146=((IkReal(1.00000000000000))*(sj5));
IkReal x2147=((r12)*(sj3));
IkReal x2148=((sj3)*(sj5));
IkReal x2149=((cj3)*(cj7)*(sj5));
IkReal x2150=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst61)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2144)*(x2150)))+(((cj7)*(x2140)*(x2142)))+(((x2143)*(x2147)))+(((IkReal(-1.00000000000000))*(r01)*(x2140)*(x2150)))+(((x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2146)))+(((r10)*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(r20)*(x2145)*(x2146))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2146)))+(((sj5)*(sj7)*(x2147)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2146)))+(((r10)*(x2145)*(x2148)))+(((cj5)*(r20)*(x2145)))+(((x2142)*(x2149)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2150)))+(((r22)*(x2143)))+(((cj3)*(sj5)*(x2141))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2144)*(x2150)))+(((cj7)*(x2140)*(x2142)))+(((x2143)*(x2147)))+(((IkReal(-1.00000000000000))*(r01)*(x2140)*(x2150)))+(((x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2146)))+(((r10)*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(r20)*(x2145)*(x2146)))))), ((gconst61)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2146)))+(((sj5)*(sj7)*(x2147)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2146)))+(((r10)*(x2145)*(x2148)))+(((cj5)*(r20)*(x2145)))+(((x2142)*(x2149)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2150)))+(((r22)*(x2143)))+(((cj3)*(sj5)*(x2141)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2151=IKcos(j4);
IkReal x2152=IKsin(j4);
IkReal x2153=((IkReal(1.00000000000000))*(cj7));
IkReal x2154=((cj8)*(r20));
IkReal x2155=((cj3)*(r02));
IkReal x2156=((IkReal(1.00000000000000))*(sj7));
IkReal x2157=((sj3)*(sj7));
IkReal x2158=((r21)*(sj8));
IkReal x2159=((cj8)*(r10));
IkReal x2160=((sj5)*(x2151));
IkReal x2161=((cj5)*(x2152));
IkReal x2162=((r11)*(sj3)*(sj8));
IkReal x2163=((cj3)*(cj8)*(r00));
IkReal x2164=((cj5)*(x2151));
IkReal x2165=((cj3)*(r01)*(sj8));
IkReal x2166=((sj5)*(x2152));
IkReal x2167=((x2161)+(x2160));
evalcond[0]=((x2166)+(((IkReal(-1.00000000000000))*(x2153)*(x2154)))+(((cj7)*(x2158)))+(((IkReal(-1.00000000000000))*(r22)*(x2156)))+(((IkReal(-1.00000000000000))*(x2164))));
evalcond[1]=((x2167)+(((sj7)*(x2158)))+(((IkReal(-1.00000000000000))*(x2154)*(x2156)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2153)*(x2162)))+(((IkReal(-1.00000000000000))*(x2153)*(x2165)))+(((cj7)*(x2163)))+(x2167)+(((sj7)*(x2155)))+(((r12)*(x2157)))+(((cj7)*(sj3)*(x2159))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2153)))+(((sj7)*(x2163)))+(x2164)+(((IkReal(-1.00000000000000))*(x2153)*(x2155)))+(((IkReal(-1.00000000000000))*(x2156)*(x2162)))+(((IkReal(-1.00000000000000))*(x2156)*(x2165)))+(((IkReal(-1.00000000000000))*(x2166)))+(((x2157)*(x2159))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2168=((sj5)*(sj7));
IkReal x2169=((r21)*(sj8));
IkReal x2170=((cj5)*(sj7));
IkReal x2171=((cj8)*(r20));
IkReal x2172=((cj5)*(cj7));
IkReal x2173=((cj7)*(sj5));
if( IKabs(((gconst60)*(((((r22)*(x2172)))+(((IkReal(-1.00000000000000))*(x2171)*(x2173)))+(((IkReal(-1.00000000000000))*(r22)*(x2168)))+(((IkReal(-1.00000000000000))*(x2170)*(x2171)))+(((x2169)*(x2170)))+(((x2169)*(x2173))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((x2168)*(x2169)))+(((r22)*(x2173)))+(((r22)*(x2170)))+(((IkReal(-1.00000000000000))*(x2168)*(x2171)))+(((IkReal(-1.00000000000000))*(x2169)*(x2172)))+(((x2171)*(x2172))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((r22)*(x2172)))+(((IkReal(-1.00000000000000))*(x2171)*(x2173)))+(((IkReal(-1.00000000000000))*(r22)*(x2168)))+(((IkReal(-1.00000000000000))*(x2170)*(x2171)))+(((x2169)*(x2170)))+(((x2169)*(x2173)))))), ((gconst60)*(((((x2168)*(x2169)))+(((r22)*(x2173)))+(((r22)*(x2170)))+(((IkReal(-1.00000000000000))*(x2168)*(x2171)))+(((IkReal(-1.00000000000000))*(x2169)*(x2172)))+(((x2171)*(x2172)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2174=IKcos(j4);
IkReal x2175=IKsin(j4);
IkReal x2176=((IkReal(1.00000000000000))*(cj7));
IkReal x2177=((cj8)*(r20));
IkReal x2178=((cj3)*(r02));
IkReal x2179=((IkReal(1.00000000000000))*(sj7));
IkReal x2180=((sj3)*(sj7));
IkReal x2181=((r21)*(sj8));
IkReal x2182=((cj8)*(r10));
IkReal x2183=((sj5)*(x2174));
IkReal x2184=((cj5)*(x2175));
IkReal x2185=((r11)*(sj3)*(sj8));
IkReal x2186=((cj3)*(cj8)*(r00));
IkReal x2187=((cj5)*(x2174));
IkReal x2188=((cj3)*(r01)*(sj8));
IkReal x2189=((sj5)*(x2175));
IkReal x2190=((x2183)+(x2184));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2176)*(x2177)))+(x2189)+(((IkReal(-1.00000000000000))*(x2187)))+(((cj7)*(x2181)))+(((IkReal(-1.00000000000000))*(r22)*(x2179))));
evalcond[1]=((x2190)+(((sj7)*(x2181)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2177)*(x2179))));
evalcond[2]=((((sj7)*(x2178)))+(x2190)+(((cj7)*(sj3)*(x2182)))+(((r12)*(x2180)))+(((IkReal(-1.00000000000000))*(x2176)*(x2188)))+(((IkReal(-1.00000000000000))*(x2176)*(x2185)))+(((cj7)*(x2186))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2176)*(x2178)))+(((x2180)*(x2182)))+(x2187)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2176)))+(((IkReal(-1.00000000000000))*(x2189)))+(((sj7)*(x2186)))+(((IkReal(-1.00000000000000))*(x2179)*(x2185)))+(((IkReal(-1.00000000000000))*(x2179)*(x2188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2191=((cj3)*(cj8));
IkReal x2192=((r01)*(sj3));
IkReal x2193=((r02)*(sj3));
IkReal x2194=((IkReal(1.00000000000000))*(sj7));
IkReal x2195=((IkReal(1.00000000000000))*(r11));
IkReal x2196=((cj3)*(r12));
IkReal x2197=((IkReal(1.00000000000000))*(cj7));
IkReal x2198=((cj8)*(sj3));
IkReal x2199=((sj3)*(sj8));
IkReal x2200=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2200)))+(((cj8)*(x2192)))+(((IkReal(-1.00000000000000))*(x2191)*(x2195)))+(((r00)*(x2199))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2195)*(x2198)))+(((IkReal(-1.00000000000000))*(r10)*(x2199)))+(((IkReal(-1.00000000000000))*(r00)*(x2200)))+(((IkReal(-1.00000000000000))*(r01)*(x2191))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2193)*(x2194)))+(((IkReal(-1.00000000000000))*(r00)*(x2197)*(x2198)))+(((sj7)*(x2196)))+(((cj7)*(sj8)*(x2192)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2195)))+(((cj7)*(r10)*(x2191))));
evalcond[6]=((((sj7)*(sj8)*(x2192)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2194)))+(((IkReal(-1.00000000000000))*(x2196)*(x2197)))+(((IkReal(-1.00000000000000))*(r00)*(x2194)*(x2198)))+(((r10)*(sj7)*(x2191)))+(((cj7)*(x2193))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2201=((IkReal(4.00000000000000))*(sj7));
IkReal x2202=((npy)*(sj8));
IkReal x2203=((IkReal(4.00000000000000))*(cj7));
IkReal x2204=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((x2201)*(x2204)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(npz)*(x2203))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x2201)))+(((x2203)*(x2204)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x2201)*(x2204)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(npz)*(x2203)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x2201)))+(((x2203)*(x2204)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((x2201)*(x2204)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(npz)*(x2203)))), ((IkReal(-0.940000000000000))+(((npz)*(x2201)))+(((x2203)*(x2204)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2205=((IkReal(1.00000000000000))*(sj7));
IkReal x2206=((npy)*(sj8));
IkReal x2207=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2207)))+(((cj7)*(x2206)))+(((IkReal(-1.00000000000000))*(npz)*(x2205)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2206)))+(((IkReal(-1.00000000000000))*(x2205)*(x2207)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2208=((cj3)*(cj5));
IkReal x2209=((r02)*(sj7));
IkReal x2210=((cj8)*(r00));
IkReal x2211=((cj5)*(sj7));
IkReal x2212=((cj5)*(sj3));
IkReal x2213=((cj7)*(cj8));
IkReal x2214=((IkReal(1.00000000000000))*(sj5));
IkReal x2215=((r12)*(sj3));
IkReal x2216=((sj3)*(sj5));
IkReal x2217=((cj3)*(cj7)*(sj5));
IkReal x2218=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2213)*(x2214)))+(((r10)*(x2212)*(x2213)))+(((IkReal(-1.00000000000000))*(r01)*(x2208)*(x2218)))+(((x2211)*(x2215)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2214)))+(((cj7)*(x2208)*(x2210)))+(((IkReal(-1.00000000000000))*(r11)*(x2212)*(x2218)))+(((x2208)*(x2209))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((x2210)*(x2217)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2218)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2214)))+(((sj5)*(sj7)*(x2215)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2214)))+(((r22)*(x2211)))+(((cj5)*(r20)*(x2213)))+(((r10)*(x2213)*(x2216)))+(((cj3)*(sj5)*(x2209))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2213)*(x2214)))+(((r10)*(x2212)*(x2213)))+(((IkReal(-1.00000000000000))*(r01)*(x2208)*(x2218)))+(((x2211)*(x2215)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2214)))+(((cj7)*(x2208)*(x2210)))+(((IkReal(-1.00000000000000))*(r11)*(x2212)*(x2218)))+(((x2208)*(x2209)))))), ((gconst63)*(((((x2210)*(x2217)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2218)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2214)))+(((sj5)*(sj7)*(x2215)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2214)))+(((r22)*(x2211)))+(((cj5)*(r20)*(x2213)))+(((r10)*(x2213)*(x2216)))+(((cj3)*(sj5)*(x2209)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2219=IKcos(j4);
IkReal x2220=IKsin(j4);
IkReal x2221=((IkReal(1.00000000000000))*(cj7));
IkReal x2222=((cj8)*(r20));
IkReal x2223=((cj3)*(r02));
IkReal x2224=((IkReal(1.00000000000000))*(sj7));
IkReal x2225=((sj3)*(sj7));
IkReal x2226=((r21)*(sj8));
IkReal x2227=((IkReal(1.00000000000000))*(cj5));
IkReal x2228=((cj8)*(r10));
IkReal x2229=((sj5)*(x2220));
IkReal x2230=((sj5)*(x2219));
IkReal x2231=((r11)*(sj3)*(sj8));
IkReal x2232=((cj3)*(cj8)*(r00));
IkReal x2233=((cj3)*(r01)*(sj8));
IkReal x2234=((x2219)*(x2227));
evalcond[0]=((x2229)+(((cj7)*(x2226)))+(((IkReal(-1.00000000000000))*(x2221)*(x2222)))+(((IkReal(-1.00000000000000))*(x2234)))+(((IkReal(-1.00000000000000))*(r22)*(x2224))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2222)*(x2224)))+(((IkReal(-1.00000000000000))*(x2220)*(x2227)))+(((sj7)*(x2226)))+(((IkReal(-1.00000000000000))*(x2230)))+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x2225)))+(x2230)+(((cj7)*(x2232)))+(((cj7)*(sj3)*(x2228)))+(((IkReal(-1.00000000000000))*(x2221)*(x2233)))+(((IkReal(-1.00000000000000))*(x2221)*(x2231)))+(((cj5)*(x2220)))+(((sj7)*(x2223))));
evalcond[3]=((x2229)+(((IkReal(-1.00000000000000))*(x2224)*(x2233)))+(((IkReal(-1.00000000000000))*(x2224)*(x2231)))+(((x2225)*(x2228)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2221)))+(((IkReal(-1.00000000000000))*(x2221)*(x2223)))+(((sj7)*(x2232)))+(((IkReal(-1.00000000000000))*(x2234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2235=((cj7)*(sj5));
IkReal x2236=((r21)*(sj8));
IkReal x2237=((cj5)*(cj7));
IkReal x2238=((cj8)*(r20));
IkReal x2239=((sj5)*(sj7));
IkReal x2240=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((x2235)*(x2238)))+(((r22)*(x2239)))+(((r22)*(x2237)))+(((cj5)*(sj7)*(x2236)))+(((IkReal(-1.00000000000000))*(x2238)*(x2240)))+(((IkReal(-1.00000000000000))*(x2235)*(x2236))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((r22)*(x2235)))+(((IkReal(-1.00000000000000))*(r22)*(x2240)))+(((x2236)*(x2239)))+(((x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(x2238)*(x2239))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((x2235)*(x2238)))+(((r22)*(x2239)))+(((r22)*(x2237)))+(((cj5)*(sj7)*(x2236)))+(((IkReal(-1.00000000000000))*(x2238)*(x2240)))+(((IkReal(-1.00000000000000))*(x2235)*(x2236)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((r22)*(x2235)))+(((IkReal(-1.00000000000000))*(r22)*(x2240)))+(((x2236)*(x2239)))+(((x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(x2238)*(x2239)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2241=IKcos(j4);
IkReal x2242=IKsin(j4);
IkReal x2243=((IkReal(1.00000000000000))*(cj7));
IkReal x2244=((cj8)*(r20));
IkReal x2245=((cj3)*(r02));
IkReal x2246=((IkReal(1.00000000000000))*(sj7));
IkReal x2247=((sj3)*(sj7));
IkReal x2248=((r21)*(sj8));
IkReal x2249=((IkReal(1.00000000000000))*(cj5));
IkReal x2250=((cj8)*(r10));
IkReal x2251=((sj5)*(x2242));
IkReal x2252=((sj5)*(x2241));
IkReal x2253=((r11)*(sj3)*(sj8));
IkReal x2254=((cj3)*(cj8)*(r00));
IkReal x2255=((cj3)*(r01)*(sj8));
IkReal x2256=((x2241)*(x2249));
evalcond[0]=((((cj7)*(x2248)))+(x2251)+(((IkReal(-1.00000000000000))*(r22)*(x2246)))+(((IkReal(-1.00000000000000))*(x2256)))+(((IkReal(-1.00000000000000))*(x2243)*(x2244))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2252)))+(((IkReal(-1.00000000000000))*(x2244)*(x2246)))+(((IkReal(-1.00000000000000))*(x2242)*(x2249)))+(((sj7)*(x2248)))+(((cj7)*(r22))));
evalcond[2]=((((cj7)*(x2254)))+(x2252)+(((cj7)*(sj3)*(x2250)))+(((IkReal(-1.00000000000000))*(x2243)*(x2255)))+(((IkReal(-1.00000000000000))*(x2243)*(x2253)))+(((cj5)*(x2242)))+(((sj7)*(x2245)))+(((r12)*(x2247))));
evalcond[3]=((x2251)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2243)))+(((IkReal(-1.00000000000000))*(x2256)))+(((x2247)*(x2250)))+(((sj7)*(x2254)))+(((IkReal(-1.00000000000000))*(x2243)*(x2245)))+(((IkReal(-1.00000000000000))*(x2246)*(x2253)))+(((IkReal(-1.00000000000000))*(x2246)*(x2255))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2257=((IkReal(4.00000000000000))*(cj7));
IkReal x2258=((cj8)*(npx));
IkReal x2259=((IkReal(4.00000000000000))*(sj7));
IkReal x2260=((IkReal(4.00000000000000))*(npy)*(sj8));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2258)*(x2259)))+(((npy)*(sj8)*(x2259)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x2257)))+(((IkReal(0.120000000000000))*(cj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x2257)))+(((npz)*(x2259)))+(((x2257)*(x2258)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2258)*(x2259)))+(((npy)*(sj8)*(x2259)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x2257)))+(((IkReal(0.120000000000000))*(cj6)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x2257)))+(((npz)*(x2259)))+(((x2257)*(x2258)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2258)*(x2259)))+(((npy)*(sj8)*(x2259)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x2257)))+(((IkReal(0.120000000000000))*(cj6)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x2257)))+(((npz)*(x2259)))+(((x2257)*(x2258)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2261=IKsin(j5);
IkReal x2262=((IkReal(1.00000000000000))*(sj7));
IkReal x2263=((npy)*(sj8));
IkReal x2264=((cj8)*(npx));
IkReal x2265=((IkReal(0.250000000000000))*(x2261));
evalcond[0]=((((IkReal(-0.0300000000000000))*(sj6)))+(((IkReal(-0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x2265))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2262)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x2263)))+(((IkReal(-1.00000000000000))*(cj7)*(x2264)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[2]=((((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2263)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-0.0950000000000000))*(sj6)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2262)*(x2264)))+(((IkReal(-1.00000000000000))*(cj6)*(x2265))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2266=((IkReal(1.00000000000000))*(sj7));
IkReal x2267=((IkReal(1.00000000000000))*(cj3));
IkReal x2268=((cj7)*(r02));
IkReal x2269=((cj8)*(r00));
IkReal x2270=((cj3)*(sj7));
IkReal x2271=((cj8)*(npx));
IkReal x2272=((r01)*(sj3));
IkReal x2273=((cj7)*(sj8));
IkReal x2274=((r11)*(sj8));
IkReal x2275=((IkReal(1.00000000000000))*(cj7));
IkReal x2276=((sj7)*(sj8));
IkReal x2277=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2266)))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x2273)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x2271)*(x2275))));
evalcond[3]=((((cj8)*(x2272)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2267)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2267))));
evalcond[4]=((((r21)*(x2276)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2266)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2266)*(x2271)))+(((npy)*(x2276)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2266)))+(((cj3)*(cj7)*(x2277)))+(((IkReal(-1.00000000000000))*(r11)*(x2267)*(x2273)))+(((IkReal(-1.00000000000000))*(sj3)*(x2269)*(x2275)))+(((x2272)*(x2273)))+(((r12)*(x2270))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2267)))+(((x2270)*(x2277)))+(((IkReal(-1.00000000000000))*(sj3)*(x2266)*(x2269)))+(((x2272)*(x2276)))+(((sj3)*(x2268)))+(((IkReal(-1.00000000000000))*(cj3)*(x2266)*(x2274))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2266)))+(((x2269)*(x2270)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2275)))+(((IkReal(-1.00000000000000))*(sj3)*(x2266)*(x2274)))+(((sj3)*(sj7)*(x2277)))+(((IkReal(-1.00000000000000))*(x2267)*(x2268))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2278=((cj8)*(sj5));
IkReal x2279=((cj3)*(r01));
IkReal x2280=((IkReal(1.00000000000000))*(cj5));
IkReal x2281=((r11)*(sj3));
IkReal x2282=((sj5)*(sj8));
IkReal x2283=((r10)*(sj3));
IkReal x2284=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x2282)*(x2283)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x2282)))+(((x2278)*(x2281)))+(((cj5)*(cj8)*(r21)))+(((x2278)*(x2279))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x2280)*(x2284)))+(((r21)*(x2278)))+(((r20)*(x2282)))+(((IkReal(-1.00000000000000))*(sj8)*(x2280)*(x2283)))+(((IkReal(-1.00000000000000))*(cj8)*(x2280)*(x2281)))+(((IkReal(-1.00000000000000))*(cj8)*(x2279)*(x2280))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x2282)*(x2283)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x2282)))+(((x2278)*(x2281)))+(((cj5)*(cj8)*(r21)))+(((x2278)*(x2279)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x2280)*(x2284)))+(((r21)*(x2278)))+(((r20)*(x2282)))+(((IkReal(-1.00000000000000))*(sj8)*(x2280)*(x2283)))+(((IkReal(-1.00000000000000))*(cj8)*(x2280)*(x2281)))+(((IkReal(-1.00000000000000))*(cj8)*(x2279)*(x2280)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2285=IKsin(j4);
IkReal x2286=IKcos(j4);
IkReal x2287=((IkReal(1.00000000000000))*(cj8));
IkReal x2288=((cj3)*(r01));
IkReal x2289=((cj3)*(r00));
IkReal x2290=((cj7)*(cj8));
IkReal x2291=((IkReal(1.00000000000000))*(cj5));
IkReal x2292=((IkReal(1.00000000000000))*(sj8));
IkReal x2293=((r11)*(sj3));
IkReal x2294=((r10)*(sj3));
IkReal x2295=((sj5)*(x2285));
IkReal x2296=((sj5)*(x2286));
IkReal x2297=((x2286)*(x2291));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2285)*(x2291)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2296)))+(((r20)*(sj8))));
evalcond[1]=((x2295)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2287)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2297)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2289)*(x2292)))+(x2295)+(((IkReal(-1.00000000000000))*(x2292)*(x2294)))+(((IkReal(-1.00000000000000))*(x2287)*(x2293)))+(((IkReal(-1.00000000000000))*(x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(x2297))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x2296)+(((IkReal(-1.00000000000000))*(cj7)*(x2288)*(x2292)))+(((IkReal(-1.00000000000000))*(cj7)*(x2292)*(x2293)))+(((x2289)*(x2290)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x2285)))+(((x2290)*(x2294))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2298=((sj5)*(sj8));
IkReal x2299=((IkReal(1.00000000000000))*(cj7));
IkReal x2300=((r22)*(sj7));
IkReal x2301=((cj8)*(sj5));
IkReal x2302=((cj5)*(cj8));
IkReal x2303=((cj5)*(sj8));
if( IKabs(((gconst48)*(((((cj7)*(r20)*(x2301)))+(((r20)*(x2303)))+(((sj5)*(x2300)))+(((IkReal(-1.00000000000000))*(r21)*(x2298)*(x2299)))+(((r21)*(x2302))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj5)*(x2300)))+(((cj7)*(r21)*(x2303)))+(((r20)*(x2298)))+(((r21)*(x2301)))+(((IkReal(-1.00000000000000))*(r20)*(x2299)*(x2302))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((cj7)*(r20)*(x2301)))+(((r20)*(x2303)))+(((sj5)*(x2300)))+(((IkReal(-1.00000000000000))*(r21)*(x2298)*(x2299)))+(((r21)*(x2302)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj5)*(x2300)))+(((cj7)*(r21)*(x2303)))+(((r20)*(x2298)))+(((r21)*(x2301)))+(((IkReal(-1.00000000000000))*(r20)*(x2299)*(x2302)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2304=IKsin(j4);
IkReal x2305=IKcos(j4);
IkReal x2306=((IkReal(1.00000000000000))*(cj8));
IkReal x2307=((cj3)*(r01));
IkReal x2308=((cj3)*(r00));
IkReal x2309=((cj7)*(cj8));
IkReal x2310=((IkReal(1.00000000000000))*(cj5));
IkReal x2311=((IkReal(1.00000000000000))*(sj8));
IkReal x2312=((r11)*(sj3));
IkReal x2313=((r10)*(sj3));
IkReal x2314=((sj5)*(x2304));
IkReal x2315=((sj5)*(x2305));
IkReal x2316=((x2305)*(x2310));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2315)))+(((IkReal(-1.00000000000000))*(x2304)*(x2310)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2314)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2306)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x2316))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2306)*(x2307)))+(((IkReal(-1.00000000000000))*(x2311)*(x2313)))+(x2314)+(((IkReal(-1.00000000000000))*(x2308)*(x2311)))+(((IkReal(-1.00000000000000))*(x2306)*(x2312)))+(((IkReal(-1.00000000000000))*(x2316))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2311)*(x2312)))+(((x2308)*(x2309)))+(x2315)+(((cj5)*(x2304)))+(((x2309)*(x2313)))+(((IkReal(-1.00000000000000))*(cj7)*(x2307)*(x2311)))+(((cj3)*(r02)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2317=((IkReal(1.00000000000000))*(sj7));
IkReal x2318=((IkReal(1.00000000000000))*(cj3));
IkReal x2319=((cj7)*(r02));
IkReal x2320=((cj8)*(r00));
IkReal x2321=((cj3)*(sj7));
IkReal x2322=((cj8)*(npx));
IkReal x2323=((r01)*(sj3));
IkReal x2324=((cj7)*(sj8));
IkReal x2325=((r11)*(sj8));
IkReal x2326=((IkReal(1.00000000000000))*(cj7));
IkReal x2327=((sj7)*(sj8));
IkReal x2328=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x2324)))+(((IkReal(-1.00000000000000))*(x2322)*(x2326)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x2317))));
evalcond[3]=((((cj8)*(x2323)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2318)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2318))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2317)))+(((r21)*(x2327)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2327)))+(((IkReal(-1.00000000000000))*(x2317)*(x2322)))+(((cj7)*(npz))));
evalcond[6]=((((cj3)*(cj7)*(x2328)))+(((IkReal(-1.00000000000000))*(r11)*(x2318)*(x2324)))+(((r12)*(x2321)))+(((x2323)*(x2324)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2317)))+(((IkReal(-1.00000000000000))*(sj3)*(x2320)*(x2326))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x2317)*(x2325)))+(((sj3)*(x2319)))+(((x2321)*(x2328)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2318)))+(((IkReal(-1.00000000000000))*(sj3)*(x2317)*(x2320)))+(((x2323)*(x2327))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2318)*(x2319)))+(((x2320)*(x2321)))+(((IkReal(-1.00000000000000))*(sj3)*(x2317)*(x2325)))+(((sj3)*(sj7)*(x2328)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2317)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2326))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2329=((IkReal(1.00000000000000))*(sj5));
IkReal x2330=((r20)*(sj8));
IkReal x2331=((cj5)*(cj8));
IkReal x2332=((r11)*(sj3));
IkReal x2333=((cj3)*(r01));
IkReal x2334=((cj3)*(r00)*(sj8));
IkReal x2335=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(x2331)))+(((IkReal(-1.00000000000000))*(cj5)*(x2330)))+(((IkReal(-1.00000000000000))*(cj8)*(x2329)*(x2333)))+(((IkReal(-1.00000000000000))*(cj8)*(x2329)*(x2332)))+(((IkReal(-1.00000000000000))*(x2329)*(x2334)))+(((IkReal(-1.00000000000000))*(x2329)*(x2335))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((x2331)*(x2332)))+(((x2331)*(x2333)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((cj5)*(x2334)))+(((cj5)*(x2335)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2329))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(x2331)))+(((IkReal(-1.00000000000000))*(cj5)*(x2330)))+(((IkReal(-1.00000000000000))*(cj8)*(x2329)*(x2333)))+(((IkReal(-1.00000000000000))*(cj8)*(x2329)*(x2332)))+(((IkReal(-1.00000000000000))*(x2329)*(x2334)))+(((IkReal(-1.00000000000000))*(x2329)*(x2335)))))), ((gconst51)*(((((x2331)*(x2332)))+(((x2331)*(x2333)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((cj5)*(x2334)))+(((cj5)*(x2335)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2329)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2336=IKsin(j4);
IkReal x2337=IKcos(j4);
IkReal x2338=((IkReal(1.00000000000000))*(cj8));
IkReal x2339=((cj3)*(r01));
IkReal x2340=((cj3)*(r00));
IkReal x2341=((cj7)*(cj8));
IkReal x2342=((r11)*(sj3));
IkReal x2343=((IkReal(1.00000000000000))*(sj8));
IkReal x2344=((r10)*(sj3));
IkReal x2345=((sj5)*(x2337));
IkReal x2346=((cj5)*(x2336));
IkReal x2347=((cj5)*(x2337));
IkReal x2348=((sj5)*(x2336));
IkReal x2349=((x2345)+(x2346));
evalcond[0]=((x2349)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2348)+(((IkReal(-1.00000000000000))*(x2347)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2338)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2340)*(x2343)))+(x2347)+(((IkReal(-1.00000000000000))*(x2348)))+(((IkReal(-1.00000000000000))*(x2338)*(x2339)))+(((IkReal(-1.00000000000000))*(x2343)*(x2344)))+(((IkReal(-1.00000000000000))*(x2338)*(x2342))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2340)*(x2341)))+(x2349)+(((x2341)*(x2344)))+(((IkReal(-1.00000000000000))*(cj7)*(x2339)*(x2343)))+(((IkReal(-1.00000000000000))*(cj7)*(x2342)*(x2343)))+(((cj3)*(r02)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2350=((cj8)*(sj5));
IkReal x2351=((sj5)*(sj8));
IkReal x2352=((r22)*(sj7));
IkReal x2353=((cj7)*(r20));
IkReal x2354=((cj5)*(cj8));
IkReal x2355=((cj7)*(r21));
IkReal x2356=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((x2351)*(x2355)))+(((r20)*(x2356)))+(((IkReal(-1.00000000000000))*(sj5)*(x2352)))+(((r21)*(x2354)))+(((IkReal(-1.00000000000000))*(x2350)*(x2353))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x2355)*(x2356)))+(((x2353)*(x2354)))+(((r20)*(x2351)))+(((r21)*(x2350)))+(((cj5)*(x2352))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((x2351)*(x2355)))+(((r20)*(x2356)))+(((IkReal(-1.00000000000000))*(sj5)*(x2352)))+(((r21)*(x2354)))+(((IkReal(-1.00000000000000))*(x2350)*(x2353)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x2355)*(x2356)))+(((x2353)*(x2354)))+(((r20)*(x2351)))+(((r21)*(x2350)))+(((cj5)*(x2352)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2357=IKsin(j4);
IkReal x2358=IKcos(j4);
IkReal x2359=((IkReal(1.00000000000000))*(cj8));
IkReal x2360=((cj3)*(r01));
IkReal x2361=((cj3)*(r00));
IkReal x2362=((cj7)*(cj8));
IkReal x2363=((r11)*(sj3));
IkReal x2364=((IkReal(1.00000000000000))*(sj8));
IkReal x2365=((r10)*(sj3));
IkReal x2366=((sj5)*(x2358));
IkReal x2367=((cj5)*(x2357));
IkReal x2368=((cj5)*(x2358));
IkReal x2369=((sj5)*(x2357));
IkReal x2370=((x2367)+(x2366));
evalcond[0]=((x2370)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2369)+(((IkReal(-1.00000000000000))*(x2368)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2359)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x2368)+(((IkReal(-1.00000000000000))*(x2369)))+(((IkReal(-1.00000000000000))*(x2359)*(x2363)))+(((IkReal(-1.00000000000000))*(x2359)*(x2360)))+(((IkReal(-1.00000000000000))*(x2364)*(x2365)))+(((IkReal(-1.00000000000000))*(x2361)*(x2364))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2360)*(x2364)))+(x2370)+(((x2361)*(x2362)))+(((cj3)*(r02)*(sj7)))+(((x2362)*(x2365)))+(((IkReal(-1.00000000000000))*(cj7)*(x2363)*(x2364))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2371=((cj3)*(cj8));
IkReal x2372=((IkReal(1.00000000000000))*(sj7));
IkReal x2373=((cj8)*(npx));
IkReal x2374=((cj8)*(sj3));
IkReal x2375=((npy)*(sj8));
IkReal x2376=((r02)*(sj3));
IkReal x2377=((IkReal(1.00000000000000))*(r11));
IkReal x2378=((cj3)*(r12));
IkReal x2379=((IkReal(1.00000000000000))*(cj7));
IkReal x2380=((sj3)*(sj8));
IkReal x2381=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj7)*(x2375)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2372)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x2373)*(x2379))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2381)))+(((r00)*(x2380)))+(((IkReal(-1.00000000000000))*(x2371)*(x2377)))+(((r01)*(x2374))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2375)))+(((IkReal(-1.00000000000000))*(x2372)*(x2373)))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2381)))+(((IkReal(-1.00000000000000))*(r10)*(x2380)))+(((IkReal(-1.00000000000000))*(x2374)*(x2377)))+(((IkReal(-1.00000000000000))*(r01)*(x2371))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2377)))+(((IkReal(-1.00000000000000))*(r00)*(x2374)*(x2379)))+(((cj7)*(r10)*(x2371)))+(((sj7)*(x2378)))+(((IkReal(-1.00000000000000))*(x2372)*(x2376)))+(((cj7)*(r01)*(x2380))));
evalcond[8]=((((r10)*(sj7)*(x2371)))+(((cj7)*(x2376)))+(((r01)*(sj7)*(x2380)))+(((IkReal(-1.00000000000000))*(r00)*(x2372)*(x2374)))+(((IkReal(-1.00000000000000))*(x2378)*(x2379)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2372))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2382=((cj3)*(cj5));
IkReal x2383=((r02)*(sj7));
IkReal x2384=((cj5)*(sj7));
IkReal x2385=((cj3)*(sj5));
IkReal x2386=((r11)*(sj3));
IkReal x2387=((r10)*(sj3));
IkReal x2388=((r12)*(sj3));
IkReal x2389=((sj5)*(sj7));
IkReal x2390=((cj7)*(cj8)*(sj5));
IkReal x2391=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x2392=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(cj5)*(x2386)*(x2391)))+(((x2387)*(x2392)))+(((x2384)*(x2388)))+(((IkReal(-1.00000000000000))*(r22)*(x2389)))+(((x2382)*(x2383)))+(((IkReal(-1.00000000000000))*(r01)*(x2382)*(x2391)))+(((IkReal(-1.00000000000000))*(r20)*(x2390)))+(((cj7)*(cj8)*(r00)*(x2382))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x2387)*(x2390)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2391)))+(((r20)*(x2392)))+(((x2383)*(x2385)))+(((r22)*(x2384)))+(((IkReal(-1.00000000000000))*(sj5)*(x2386)*(x2391)))+(((x2388)*(x2389)))+(((cj7)*(cj8)*(r00)*(x2385)))+(((IkReal(-1.00000000000000))*(r01)*(x2385)*(x2391))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(cj5)*(x2386)*(x2391)))+(((x2387)*(x2392)))+(((x2384)*(x2388)))+(((IkReal(-1.00000000000000))*(r22)*(x2389)))+(((x2382)*(x2383)))+(((IkReal(-1.00000000000000))*(r01)*(x2382)*(x2391)))+(((IkReal(-1.00000000000000))*(r20)*(x2390)))+(((cj7)*(cj8)*(r00)*(x2382)))))), ((gconst53)*(((((x2387)*(x2390)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2391)))+(((r20)*(x2392)))+(((x2383)*(x2385)))+(((r22)*(x2384)))+(((IkReal(-1.00000000000000))*(sj5)*(x2386)*(x2391)))+(((x2388)*(x2389)))+(((cj7)*(cj8)*(r00)*(x2385)))+(((IkReal(-1.00000000000000))*(r01)*(x2385)*(x2391)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2393=IKcos(j4);
IkReal x2394=IKsin(j4);
IkReal x2395=((IkReal(1.00000000000000))*(cj7));
IkReal x2396=((cj8)*(r20));
IkReal x2397=((cj3)*(r02));
IkReal x2398=((IkReal(1.00000000000000))*(sj7));
IkReal x2399=((sj3)*(sj7));
IkReal x2400=((r21)*(sj8));
IkReal x2401=((cj8)*(r10));
IkReal x2402=((sj5)*(x2393));
IkReal x2403=((cj5)*(x2394));
IkReal x2404=((r11)*(sj3)*(sj8));
IkReal x2405=((cj3)*(cj8)*(r00));
IkReal x2406=((cj5)*(x2393));
IkReal x2407=((cj3)*(r01)*(sj8));
IkReal x2408=((sj5)*(x2394));
IkReal x2409=((x2402)+(x2403));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2406)))+(x2408)+(((cj7)*(x2400)))+(((IkReal(-1.00000000000000))*(r22)*(x2398)))+(((IkReal(-1.00000000000000))*(x2395)*(x2396))));
evalcond[1]=((x2409)+(((IkReal(-1.00000000000000))*(x2396)*(x2398)))+(((sj7)*(x2400)))+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x2399)))+(x2409)+(((cj7)*(x2405)))+(((cj7)*(sj3)*(x2401)))+(((IkReal(-1.00000000000000))*(x2395)*(x2404)))+(((IkReal(-1.00000000000000))*(x2395)*(x2407)))+(((sj7)*(x2397))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2408)))+(x2406)+(((x2399)*(x2401)))+(((sj7)*(x2405)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2395)))+(((IkReal(-1.00000000000000))*(x2395)*(x2397)))+(((IkReal(-1.00000000000000))*(x2398)*(x2407)))+(((IkReal(-1.00000000000000))*(x2398)*(x2404))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2410=((r21)*(sj8));
IkReal x2411=((sj5)*(sj7));
IkReal x2412=((cj5)*(sj7));
IkReal x2413=((cj5)*(cj7));
IkReal x2414=((cj8)*(r20));
IkReal x2415=((cj7)*(sj5));
if( IKabs(((gconst52)*(((((r22)*(x2413)))+(((IkReal(-1.00000000000000))*(x2412)*(x2414)))+(((IkReal(-1.00000000000000))*(x2414)*(x2415)))+(((x2410)*(x2415)))+(((x2410)*(x2412)))+(((IkReal(-1.00000000000000))*(r22)*(x2411))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2412)))+(((r22)*(x2415)))+(((x2413)*(x2414)))+(((x2410)*(x2411)))+(((IkReal(-1.00000000000000))*(x2411)*(x2414)))+(((IkReal(-1.00000000000000))*(x2410)*(x2413))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((r22)*(x2413)))+(((IkReal(-1.00000000000000))*(x2412)*(x2414)))+(((IkReal(-1.00000000000000))*(x2414)*(x2415)))+(((x2410)*(x2415)))+(((x2410)*(x2412)))+(((IkReal(-1.00000000000000))*(r22)*(x2411)))))), ((gconst52)*(((((r22)*(x2412)))+(((r22)*(x2415)))+(((x2413)*(x2414)))+(((x2410)*(x2411)))+(((IkReal(-1.00000000000000))*(x2411)*(x2414)))+(((IkReal(-1.00000000000000))*(x2410)*(x2413)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2416=IKcos(j4);
IkReal x2417=IKsin(j4);
IkReal x2418=((IkReal(1.00000000000000))*(cj7));
IkReal x2419=((cj8)*(r20));
IkReal x2420=((cj3)*(r02));
IkReal x2421=((IkReal(1.00000000000000))*(sj7));
IkReal x2422=((sj3)*(sj7));
IkReal x2423=((r21)*(sj8));
IkReal x2424=((cj8)*(r10));
IkReal x2425=((sj5)*(x2416));
IkReal x2426=((cj5)*(x2417));
IkReal x2427=((r11)*(sj3)*(sj8));
IkReal x2428=((cj3)*(cj8)*(r00));
IkReal x2429=((cj5)*(x2416));
IkReal x2430=((cj3)*(r01)*(sj8));
IkReal x2431=((sj5)*(x2417));
IkReal x2432=((x2425)+(x2426));
evalcond[0]=((x2431)+(((IkReal(-1.00000000000000))*(r22)*(x2421)))+(((IkReal(-1.00000000000000))*(x2429)))+(((cj7)*(x2423)))+(((IkReal(-1.00000000000000))*(x2418)*(x2419))));
evalcond[1]=((x2432)+(((IkReal(-1.00000000000000))*(x2419)*(x2421)))+(((cj7)*(r22)))+(((sj7)*(x2423))));
evalcond[2]=((x2432)+(((IkReal(-1.00000000000000))*(x2418)*(x2430)))+(((IkReal(-1.00000000000000))*(x2418)*(x2427)))+(((cj7)*(x2428)))+(((r12)*(x2422)))+(((cj7)*(sj3)*(x2424)))+(((sj7)*(x2420))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2431)))+(x2429)+(((IkReal(-1.00000000000000))*(x2421)*(x2430)))+(((x2422)*(x2424)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2418)))+(((IkReal(-1.00000000000000))*(x2421)*(x2427)))+(((IkReal(-1.00000000000000))*(x2418)*(x2420)))+(((sj7)*(x2428))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2433=((cj3)*(cj8));
IkReal x2434=((IkReal(1.00000000000000))*(sj7));
IkReal x2435=((cj8)*(npx));
IkReal x2436=((cj8)*(sj3));
IkReal x2437=((npy)*(sj8));
IkReal x2438=((r02)*(sj3));
IkReal x2439=((IkReal(1.00000000000000))*(r11));
IkReal x2440=((cj3)*(r12));
IkReal x2441=((IkReal(1.00000000000000))*(cj7));
IkReal x2442=((sj3)*(sj8));
IkReal x2443=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj7)*(x2437)))+(((IkReal(-1.00000000000000))*(npz)*(x2434)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2435)*(x2441)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2433)*(x2439)))+(((r01)*(x2436)))+(((IkReal(-1.00000000000000))*(r10)*(x2443)))+(((r00)*(x2442))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x2434)*(x2435)))+(((sj7)*(x2437)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x2442)))+(((IkReal(-1.00000000000000))*(r01)*(x2433)))+(((IkReal(-1.00000000000000))*(x2436)*(x2439)))+(((IkReal(-1.00000000000000))*(r00)*(x2443))));
evalcond[7]=((((sj7)*(x2440)))+(((cj7)*(r01)*(x2442)))+(((IkReal(-1.00000000000000))*(r00)*(x2436)*(x2441)))+(((IkReal(-1.00000000000000))*(x2434)*(x2438)))+(((cj7)*(r10)*(x2433)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2439))));
evalcond[8]=((((cj7)*(x2438)))+(((IkReal(-1.00000000000000))*(r00)*(x2434)*(x2436)))+(((r10)*(sj7)*(x2433)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2434)))+(((r01)*(sj7)*(x2442)))+(((IkReal(-1.00000000000000))*(x2440)*(x2441))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2444=((cj3)*(cj5));
IkReal x2445=((r02)*(sj7));
IkReal x2446=((cj8)*(r00));
IkReal x2447=((cj5)*(sj7));
IkReal x2448=((cj5)*(sj3));
IkReal x2449=((sj3)*(sj5));
IkReal x2450=((IkReal(1.00000000000000))*(sj5));
IkReal x2451=((cj3)*(cj7)*(sj5));
IkReal x2452=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x2453=((cj7)*(cj8)*(r10));
IkReal x2454=((cj7)*(cj8)*(r20));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x2450)*(x2454)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2448)*(x2452)))+(((IkReal(-1.00000000000000))*(r01)*(x2444)*(x2452)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2450)))+(((x2448)*(x2453)))+(((r12)*(sj3)*(x2447)))+(((x2444)*(x2445)))+(((cj7)*(x2444)*(x2446))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj3)*(sj5)*(x2445)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2450)))+(((r22)*(x2447)))+(((x2449)*(x2453)))+(((cj5)*(x2454)))+(((r12)*(sj7)*(x2449)))+(((IkReal(-1.00000000000000))*(r11)*(x2449)*(x2452)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2452)))+(((x2446)*(x2451))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(x2450)*(x2454)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2448)*(x2452)))+(((IkReal(-1.00000000000000))*(r01)*(x2444)*(x2452)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2450)))+(((x2448)*(x2453)))+(((r12)*(sj3)*(x2447)))+(((x2444)*(x2445)))+(((cj7)*(x2444)*(x2446)))))), ((gconst55)*(((((cj3)*(sj5)*(x2445)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2450)))+(((r22)*(x2447)))+(((x2449)*(x2453)))+(((cj5)*(x2454)))+(((r12)*(sj7)*(x2449)))+(((IkReal(-1.00000000000000))*(r11)*(x2449)*(x2452)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2452)))+(((x2446)*(x2451)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2455=IKcos(j4);
IkReal x2456=IKsin(j4);
IkReal x2457=((IkReal(1.00000000000000))*(cj7));
IkReal x2458=((cj8)*(r20));
IkReal x2459=((cj3)*(r02));
IkReal x2460=((IkReal(1.00000000000000))*(sj7));
IkReal x2461=((sj3)*(sj7));
IkReal x2462=((r21)*(sj8));
IkReal x2463=((IkReal(1.00000000000000))*(cj5));
IkReal x2464=((cj8)*(r10));
IkReal x2465=((sj5)*(x2456));
IkReal x2466=((sj5)*(x2455));
IkReal x2467=((r11)*(sj3)*(sj8));
IkReal x2468=((cj3)*(cj8)*(r00));
IkReal x2469=((cj3)*(r01)*(sj8));
IkReal x2470=((x2455)*(x2463));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2460)))+(x2465)+(((IkReal(-1.00000000000000))*(x2470)))+(((IkReal(-1.00000000000000))*(x2457)*(x2458)))+(((cj7)*(x2462))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2456)*(x2463)))+(((IkReal(-1.00000000000000))*(x2466)))+(((sj7)*(x2462)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2458)*(x2460))));
evalcond[2]=((x2466)+(((sj7)*(x2459)))+(((IkReal(-1.00000000000000))*(x2457)*(x2467)))+(((IkReal(-1.00000000000000))*(x2457)*(x2469)))+(((r12)*(x2461)))+(((cj5)*(x2456)))+(((cj7)*(sj3)*(x2464)))+(((cj7)*(x2468))));
evalcond[3]=((x2465)+(((x2461)*(x2464)))+(((sj7)*(x2468)))+(((IkReal(-1.00000000000000))*(x2470)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2457)))+(((IkReal(-1.00000000000000))*(x2457)*(x2459)))+(((IkReal(-1.00000000000000))*(x2460)*(x2467)))+(((IkReal(-1.00000000000000))*(x2460)*(x2469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2471=((cj7)*(sj5));
IkReal x2472=((r21)*(sj8));
IkReal x2473=((cj5)*(cj7));
IkReal x2474=((cj8)*(r20));
IkReal x2475=((IkReal(1.00000000000000))*(sj7));
IkReal x2476=((sj5)*(sj7));
if( IKabs(((gconst54)*(((((x2471)*(x2474)))+(((IkReal(-1.00000000000000))*(cj5)*(x2474)*(x2475)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((cj5)*(sj7)*(x2472)))+(((r22)*(x2476)))+(((r22)*(x2473))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x2475)))+(((IkReal(-1.00000000000000))*(sj5)*(x2474)*(x2475)))+(((IkReal(-1.00000000000000))*(x2473)*(x2474)))+(((x2472)*(x2473)))+(((x2472)*(x2476)))+(((r22)*(x2471))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((x2471)*(x2474)))+(((IkReal(-1.00000000000000))*(cj5)*(x2474)*(x2475)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((cj5)*(sj7)*(x2472)))+(((r22)*(x2476)))+(((r22)*(x2473)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x2475)))+(((IkReal(-1.00000000000000))*(sj5)*(x2474)*(x2475)))+(((IkReal(-1.00000000000000))*(x2473)*(x2474)))+(((x2472)*(x2473)))+(((x2472)*(x2476)))+(((r22)*(x2471)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2477=IKcos(j4);
IkReal x2478=IKsin(j4);
IkReal x2479=((IkReal(1.00000000000000))*(cj7));
IkReal x2480=((cj8)*(r20));
IkReal x2481=((cj3)*(r02));
IkReal x2482=((IkReal(1.00000000000000))*(sj7));
IkReal x2483=((sj3)*(sj7));
IkReal x2484=((r21)*(sj8));
IkReal x2485=((IkReal(1.00000000000000))*(cj5));
IkReal x2486=((cj8)*(r10));
IkReal x2487=((sj5)*(x2478));
IkReal x2488=((sj5)*(x2477));
IkReal x2489=((r11)*(sj3)*(sj8));
IkReal x2490=((cj3)*(cj8)*(r00));
IkReal x2491=((cj3)*(r01)*(sj8));
IkReal x2492=((x2477)*(x2485));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2482)))+(x2487)+(((IkReal(-1.00000000000000))*(x2492)))+(((cj7)*(x2484)))+(((IkReal(-1.00000000000000))*(x2479)*(x2480))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2488)))+(((sj7)*(x2484)))+(((IkReal(-1.00000000000000))*(x2480)*(x2482)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2478)*(x2485))));
evalcond[2]=((x2488)+(((cj5)*(x2478)))+(((sj7)*(x2481)))+(((cj7)*(x2490)))+(((r12)*(x2483)))+(((cj7)*(sj3)*(x2486)))+(((IkReal(-1.00000000000000))*(x2479)*(x2489)))+(((IkReal(-1.00000000000000))*(x2479)*(x2491))));
evalcond[3]=((x2487)+(((x2483)*(x2486)))+(((IkReal(-1.00000000000000))*(x2492)))+(((IkReal(-1.00000000000000))*(x2482)*(x2491)))+(((sj7)*(x2490)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2479)))+(((IkReal(-1.00000000000000))*(x2482)*(x2489)))+(((IkReal(-1.00000000000000))*(x2479)*(x2481))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2493=((r21)*(sj8));
IkReal x2494=((IkReal(1.00000000000000))*(r22));
IkReal x2495=((cj5)*(sj7));
IkReal x2496=((cj6)*(cj7));
IkReal x2497=((sj5)*(sj7));
IkReal x2498=((cj5)*(cj8)*(r20));
IkReal x2499=((IkReal(1.00000000000000))*(x2496));
IkReal x2500=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2493)*(x2495)))+(((x2496)*(x2500)))+(((IkReal(-1.00000000000000))*(sj5)*(x2493)*(x2499)))+(((cj6)*(r22)*(x2497)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2494)))+(((cj8)*(r20)*(x2495))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2493)*(x2497)))+(((IkReal(-1.00000000000000))*(cj6)*(x2494)*(x2495)))+(((cj8)*(r20)*(x2497)))+(((IkReal(-1.00000000000000))*(x2498)*(x2499)))+(((cj5)*(x2493)*(x2496)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2494))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x2493)*(x2495)))+(((x2496)*(x2500)))+(((IkReal(-1.00000000000000))*(sj5)*(x2493)*(x2499)))+(((cj6)*(r22)*(x2497)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2494)))+(((cj8)*(r20)*(x2495)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2493)*(x2497)))+(((IkReal(-1.00000000000000))*(cj6)*(x2494)*(x2495)))+(((cj8)*(r20)*(x2497)))+(((IkReal(-1.00000000000000))*(x2498)*(x2499)))+(((cj5)*(x2493)*(x2496)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2494)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2501=IKsin(j4);
IkReal x2502=IKcos(j4);
IkReal x2503=((IkReal(1.00000000000000))*(cj8));
IkReal x2504=((cj3)*(r01));
IkReal x2505=((IkReal(1.00000000000000))*(sj8));
IkReal x2506=((r11)*(sj3));
IkReal x2507=((cj3)*(r00));
IkReal x2508=((IkReal(1.00000000000000))*(sj6));
IkReal x2509=((IkReal(1.00000000000000))*(cj7));
IkReal x2510=((cj3)*(r02));
IkReal x2511=((sj3)*(sj7));
IkReal x2512=((cj7)*(cj8));
IkReal x2513=((r21)*(sj8));
IkReal x2514=((r10)*(sj3));
IkReal x2515=((sj5)*(x2502));
IkReal x2516=((cj5)*(x2502));
IkReal x2517=((cj6)*(x2501));
IkReal x2518=((cj5)*(x2501));
IkReal x2519=((sj5)*(x2501));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2508)*(x2515)))+(((IkReal(-1.00000000000000))*(x2508)*(x2518)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2519)+(((cj7)*(x2513)))+(((IkReal(-1.00000000000000))*(x2516)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2503))));
evalcond[2]=((((cj5)*(x2517)))+(((sj7)*(x2513)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2503)))+(((cj6)*(x2515)))+(((cj7)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2508)*(x2516)))+(((sj6)*(x2519)))+(((IkReal(-1.00000000000000))*(x2503)*(x2506)))+(((IkReal(-1.00000000000000))*(x2503)*(x2504)))+(((IkReal(-1.00000000000000))*(x2505)*(x2514)))+(((IkReal(-1.00000000000000))*(x2505)*(x2507))));
evalcond[4]=((x2518)+(x2515)+(((x2512)*(x2514)))+(((sj7)*(x2510)))+(((IkReal(-1.00000000000000))*(cj7)*(x2504)*(x2505)))+(((x2507)*(x2512)))+(((IkReal(-1.00000000000000))*(cj7)*(x2505)*(x2506)))+(((r12)*(x2511))));
evalcond[5]=((((cj8)*(r10)*(x2511)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2509)))+(((IkReal(-1.00000000000000))*(sj7)*(x2505)*(x2506)))+(((IkReal(-1.00000000000000))*(sj7)*(x2504)*(x2505)))+(((cj8)*(sj7)*(x2507)))+(((IkReal(-1.00000000000000))*(x2509)*(x2510)))+(((IkReal(-1.00000000000000))*(sj5)*(x2517)))+(((cj6)*(x2516))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2520=((sj5)*(sj6));
IkReal x2521=((r22)*(sj7));
IkReal x2522=((r20)*(sj8));
IkReal x2523=((cj8)*(r21));
IkReal x2524=((cj5)*(sj6));
IkReal x2525=((cj7)*(cj8)*(r20));
IkReal x2526=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x2520)*(x2526)))+(((cj5)*(x2523)))+(((cj5)*(x2522)))+(((x2520)*(x2525)))+(((x2520)*(x2521))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj5)*(x2523)))+(((sj5)*(x2522)))+(((IkReal(-1.00000000000000))*(x2524)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2524)))+(((x2524)*(x2526))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x2520)*(x2526)))+(((cj5)*(x2523)))+(((cj5)*(x2522)))+(((x2520)*(x2525)))+(((x2520)*(x2521)))))), ((gconst46)*(((((sj5)*(x2523)))+(((sj5)*(x2522)))+(((IkReal(-1.00000000000000))*(x2524)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2524)))+(((x2524)*(x2526)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2527=IKsin(j4);
IkReal x2528=IKcos(j4);
IkReal x2529=((IkReal(1.00000000000000))*(cj8));
IkReal x2530=((cj3)*(r01));
IkReal x2531=((IkReal(1.00000000000000))*(sj8));
IkReal x2532=((r11)*(sj3));
IkReal x2533=((cj3)*(r00));
IkReal x2534=((IkReal(1.00000000000000))*(sj6));
IkReal x2535=((IkReal(1.00000000000000))*(cj7));
IkReal x2536=((cj3)*(r02));
IkReal x2537=((sj3)*(sj7));
IkReal x2538=((cj7)*(cj8));
IkReal x2539=((r21)*(sj8));
IkReal x2540=((r10)*(sj3));
IkReal x2541=((sj5)*(x2528));
IkReal x2542=((cj5)*(x2528));
IkReal x2543=((cj6)*(x2527));
IkReal x2544=((cj5)*(x2527));
IkReal x2545=((sj5)*(x2527));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2534)*(x2541)))+(((IkReal(-1.00000000000000))*(x2534)*(x2544))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2529)))+(x2545)+(((cj7)*(x2539)))+(((IkReal(-1.00000000000000))*(x2542)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2529)))+(((cj6)*(x2541)))+(((cj5)*(x2543)))+(((cj7)*(r22)))+(((sj7)*(x2539))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2531)*(x2540)))+(((sj6)*(x2545)))+(((IkReal(-1.00000000000000))*(x2531)*(x2533)))+(((IkReal(-1.00000000000000))*(x2529)*(x2532)))+(((IkReal(-1.00000000000000))*(x2529)*(x2530)))+(((IkReal(-1.00000000000000))*(x2534)*(x2542))));
evalcond[4]=((x2541)+(x2544)+(((IkReal(-1.00000000000000))*(cj7)*(x2530)*(x2531)))+(((x2538)*(x2540)))+(((x2533)*(x2538)))+(((r12)*(x2537)))+(((IkReal(-1.00000000000000))*(cj7)*(x2531)*(x2532)))+(((sj7)*(x2536))));
evalcond[5]=((((cj6)*(x2542)))+(((cj8)*(sj7)*(x2533)))+(((IkReal(-1.00000000000000))*(x2535)*(x2536)))+(((IkReal(-1.00000000000000))*(sj7)*(x2531)*(x2532)))+(((IkReal(-1.00000000000000))*(sj5)*(x2543)))+(((IkReal(-1.00000000000000))*(sj7)*(x2530)*(x2531)))+(((cj8)*(r10)*(x2537)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2535))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2546=((IkReal(4.00000000000000))*(npx));
IkReal x2547=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2547)))+(((IkReal(-1.00000000000000))*(sj8)*(x2546))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2547)))+(((IkReal(-0.360000000000000))*(cj7)))+(((cj7)*(cj8)*(x2546))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2547)))+(((IkReal(-1.00000000000000))*(sj8)*(x2546)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2547)))+(((IkReal(-0.360000000000000))*(cj7)))+(((cj7)*(cj8)*(x2546)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2547)))+(((IkReal(-1.00000000000000))*(sj8)*(x2546)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2547)))+(((IkReal(-0.360000000000000))*(cj7)))+(((cj7)*(cj8)*(x2546)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2548=IKsin(j5);
IkReal x2549=((IkReal(1.00000000000000))*(sj7));
IkReal x2550=((npy)*(sj8));
IkReal x2551=((cj8)*(npx));
IkReal x2552=((IkReal(0.250000000000000))*(x2548));
evalcond[0]=((((IkReal(-0.0300000000000000))*(sj6)))+(((IkReal(-0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x2552))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2551)))+(((cj7)*(x2550)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x2549))));
evalcond[2]=((((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2549)*(x2551)))+(((IkReal(-1.00000000000000))*(cj6)*(x2552)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-0.0950000000000000))*(sj6)))+(((sj7)*(x2550)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2553=((IkReal(1.00000000000000))*(sj7));
IkReal x2554=((IkReal(1.00000000000000))*(cj3));
IkReal x2555=((cj7)*(r02));
IkReal x2556=((cj8)*(r00));
IkReal x2557=((cj3)*(sj7));
IkReal x2558=((cj8)*(npx));
IkReal x2559=((r01)*(sj3));
IkReal x2560=((cj7)*(sj8));
IkReal x2561=((r11)*(sj8));
IkReal x2562=((IkReal(1.00000000000000))*(cj7));
IkReal x2563=((sj7)*(sj8));
IkReal x2564=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2553)))+(((IkReal(-1.00000000000000))*(x2558)*(x2562)))+(((IkReal(0.250000000000000))*(cj5)))+(((npy)*(x2560))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2554)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2554)))+(((cj8)*(x2559)))+(((r00)*(sj3)*(sj8))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2553)))+(((cj7)*(r22)))+(((r21)*(x2563))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2563)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2553)*(x2558))));
evalcond[6]=((((cj3)*(cj7)*(x2564)))+(((r12)*(x2557)))+(((x2559)*(x2560)))+(((IkReal(-1.00000000000000))*(r11)*(x2554)*(x2560)))+(((IkReal(-1.00000000000000))*(sj3)*(x2556)*(x2562)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2553))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x2553)*(x2561)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2554)))+(((x2559)*(x2563)))+(((x2557)*(x2564)))+(((sj3)*(x2555)))+(((IkReal(-1.00000000000000))*(sj3)*(x2553)*(x2556))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2553)))+(((IkReal(-1.00000000000000))*(x2554)*(x2555)))+(((x2556)*(x2557)))+(((IkReal(-1.00000000000000))*(sj3)*(x2553)*(x2561)))+(((sj3)*(sj7)*(x2564)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2562))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2565=((cj8)*(sj5));
IkReal x2566=((cj3)*(r01));
IkReal x2567=((IkReal(1.00000000000000))*(cj5));
IkReal x2568=((r11)*(sj3));
IkReal x2569=((sj5)*(sj8));
IkReal x2570=((r10)*(sj3));
IkReal x2571=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((cj5)*(r20)*(sj8)))+(((x2565)*(x2568)))+(((x2565)*(x2566)))+(((cj3)*(r00)*(x2569)))+(((x2569)*(x2570)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r20)*(x2569)))+(((IkReal(-1.00000000000000))*(cj8)*(x2567)*(x2568)))+(((IkReal(-1.00000000000000))*(x2567)*(x2571)))+(((IkReal(-1.00000000000000))*(cj8)*(x2566)*(x2567)))+(((IkReal(-1.00000000000000))*(sj8)*(x2567)*(x2570)))+(((r21)*(x2565))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((cj5)*(r20)*(sj8)))+(((x2565)*(x2568)))+(((x2565)*(x2566)))+(((cj3)*(r00)*(x2569)))+(((x2569)*(x2570)))+(((cj5)*(cj8)*(r21)))))), ((gconst49)*(((((r20)*(x2569)))+(((IkReal(-1.00000000000000))*(cj8)*(x2567)*(x2568)))+(((IkReal(-1.00000000000000))*(x2567)*(x2571)))+(((IkReal(-1.00000000000000))*(cj8)*(x2566)*(x2567)))+(((IkReal(-1.00000000000000))*(sj8)*(x2567)*(x2570)))+(((r21)*(x2565)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2572=IKsin(j4);
IkReal x2573=IKcos(j4);
IkReal x2574=((IkReal(1.00000000000000))*(cj8));
IkReal x2575=((cj3)*(r01));
IkReal x2576=((cj3)*(r00));
IkReal x2577=((cj7)*(cj8));
IkReal x2578=((IkReal(1.00000000000000))*(cj5));
IkReal x2579=((IkReal(1.00000000000000))*(sj8));
IkReal x2580=((r11)*(sj3));
IkReal x2581=((r10)*(sj3));
IkReal x2582=((sj5)*(x2572));
IkReal x2583=((sj5)*(x2573));
IkReal x2584=((x2573)*(x2578));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2583)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2572)*(x2578)))+(((r20)*(sj8))));
evalcond[1]=((x2582)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2574)))+(((IkReal(-1.00000000000000))*(x2584)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x2582)+(((IkReal(-1.00000000000000))*(x2579)*(x2581)))+(((IkReal(-1.00000000000000))*(x2584)))+(((IkReal(-1.00000000000000))*(x2574)*(x2575)))+(((IkReal(-1.00000000000000))*(x2574)*(x2580)))+(((IkReal(-1.00000000000000))*(x2576)*(x2579))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x2583)+(((IkReal(-1.00000000000000))*(cj7)*(x2579)*(x2580)))+(((cj5)*(x2572)))+(((IkReal(-1.00000000000000))*(cj7)*(x2575)*(x2579)))+(((cj3)*(r02)*(sj7)))+(((x2577)*(x2581)))+(((x2576)*(x2577))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2585=((sj5)*(sj8));
IkReal x2586=((IkReal(1.00000000000000))*(cj7));
IkReal x2587=((r22)*(sj7));
IkReal x2588=((cj8)*(sj5));
IkReal x2589=((cj5)*(cj8));
IkReal x2590=((cj5)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x2587)))+(((IkReal(-1.00000000000000))*(r21)*(x2585)*(x2586)))+(((cj7)*(r20)*(x2588)))+(((r20)*(x2590)))+(((r21)*(x2589))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x2586)*(x2589)))+(((r20)*(x2585)))+(((cj7)*(r21)*(x2590)))+(((IkReal(-1.00000000000000))*(cj5)*(x2587)))+(((r21)*(x2588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x2587)))+(((IkReal(-1.00000000000000))*(r21)*(x2585)*(x2586)))+(((cj7)*(r20)*(x2588)))+(((r20)*(x2590)))+(((r21)*(x2589)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x2586)*(x2589)))+(((r20)*(x2585)))+(((cj7)*(r21)*(x2590)))+(((IkReal(-1.00000000000000))*(cj5)*(x2587)))+(((r21)*(x2588)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2591=IKsin(j4);
IkReal x2592=IKcos(j4);
IkReal x2593=((IkReal(1.00000000000000))*(cj8));
IkReal x2594=((cj3)*(r01));
IkReal x2595=((cj3)*(r00));
IkReal x2596=((cj7)*(cj8));
IkReal x2597=((IkReal(1.00000000000000))*(cj5));
IkReal x2598=((IkReal(1.00000000000000))*(sj8));
IkReal x2599=((r11)*(sj3));
IkReal x2600=((r10)*(sj3));
IkReal x2601=((sj5)*(x2591));
IkReal x2602=((sj5)*(x2592));
IkReal x2603=((x2592)*(x2597));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2602)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2591)*(x2597)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2593)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x2603)))+(x2601));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2593)*(x2594)))+(((IkReal(-1.00000000000000))*(x2593)*(x2599)))+(((IkReal(-1.00000000000000))*(x2595)*(x2598)))+(((IkReal(-1.00000000000000))*(x2598)*(x2600)))+(((IkReal(-1.00000000000000))*(x2603)))+(x2601));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2596)*(x2600)))+(((IkReal(-1.00000000000000))*(cj7)*(x2594)*(x2598)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2598)*(x2599)))+(((x2595)*(x2596)))+(((cj5)*(x2591)))+(x2602));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2604=((IkReal(1.00000000000000))*(sj7));
IkReal x2605=((IkReal(1.00000000000000))*(cj3));
IkReal x2606=((cj7)*(r02));
IkReal x2607=((cj8)*(r00));
IkReal x2608=((cj3)*(sj7));
IkReal x2609=((cj8)*(npx));
IkReal x2610=((r01)*(sj3));
IkReal x2611=((cj7)*(sj8));
IkReal x2612=((r11)*(sj8));
IkReal x2613=((IkReal(1.00000000000000))*(cj7));
IkReal x2614=((sj7)*(sj8));
IkReal x2615=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2609)*(x2613)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x2604)))+(((npy)*(x2611))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2605)))+(((cj8)*(x2610)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2605)))+(((r00)*(sj3)*(sj8))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2604)))+(((cj7)*(r22)))+(((r21)*(x2614))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((cj7)*(npz)))+(((npy)*(x2614)))+(((IkReal(-1.00000000000000))*(x2604)*(x2609))));
evalcond[6]=((((x2610)*(x2611)))+(((IkReal(-1.00000000000000))*(r11)*(x2605)*(x2611)))+(((IkReal(-1.00000000000000))*(sj3)*(x2607)*(x2613)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2604)))+(((r12)*(x2608)))+(((cj3)*(cj7)*(x2615))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj3)*(x2604)*(x2607)))+(((x2610)*(x2614)))+(((sj3)*(x2606)))+(((IkReal(-1.00000000000000))*(cj3)*(x2604)*(x2612)))+(((x2608)*(x2615)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2605))));
evalcond[8]=((((x2607)*(x2608)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2604)))+(((IkReal(-1.00000000000000))*(sj3)*(x2604)*(x2612)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2613)))+(((sj3)*(sj7)*(x2615)))+(((IkReal(-1.00000000000000))*(x2605)*(x2606))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2616=((IkReal(1.00000000000000))*(sj5));
IkReal x2617=((r20)*(sj8));
IkReal x2618=((cj5)*(cj8));
IkReal x2619=((r11)*(sj3));
IkReal x2620=((cj3)*(r01));
IkReal x2621=((cj3)*(r00)*(sj8));
IkReal x2622=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2616)*(x2619)))+(((IkReal(-1.00000000000000))*(cj8)*(x2616)*(x2620)))+(((IkReal(-1.00000000000000))*(r21)*(x2618)))+(((IkReal(-1.00000000000000))*(cj5)*(x2617)))+(((IkReal(-1.00000000000000))*(x2616)*(x2622)))+(((IkReal(-1.00000000000000))*(x2616)*(x2621))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj5)*(x2622)))+(((cj5)*(x2621)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2616)))+(((x2618)*(x2620)))+(((x2618)*(x2619)))+(((IkReal(-1.00000000000000))*(x2616)*(x2617))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2616)*(x2619)))+(((IkReal(-1.00000000000000))*(cj8)*(x2616)*(x2620)))+(((IkReal(-1.00000000000000))*(r21)*(x2618)))+(((IkReal(-1.00000000000000))*(cj5)*(x2617)))+(((IkReal(-1.00000000000000))*(x2616)*(x2622)))+(((IkReal(-1.00000000000000))*(x2616)*(x2621)))))), ((gconst51)*(((((cj5)*(x2622)))+(((cj5)*(x2621)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2616)))+(((x2618)*(x2620)))+(((x2618)*(x2619)))+(((IkReal(-1.00000000000000))*(x2616)*(x2617)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2623=IKsin(j4);
IkReal x2624=IKcos(j4);
IkReal x2625=((IkReal(1.00000000000000))*(cj8));
IkReal x2626=((cj3)*(r01));
IkReal x2627=((cj3)*(r00));
IkReal x2628=((cj7)*(cj8));
IkReal x2629=((r11)*(sj3));
IkReal x2630=((IkReal(1.00000000000000))*(sj8));
IkReal x2631=((r10)*(sj3));
IkReal x2632=((sj5)*(x2624));
IkReal x2633=((cj5)*(x2623));
IkReal x2634=((cj5)*(x2624));
IkReal x2635=((sj5)*(x2623));
IkReal x2636=((x2633)+(x2632));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2636));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2625)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2634)))+(((cj7)*(r21)*(sj8)))+(x2635));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2625)*(x2626)))+(((IkReal(-1.00000000000000))*(x2625)*(x2629)))+(((IkReal(-1.00000000000000))*(x2630)*(x2631)))+(((IkReal(-1.00000000000000))*(x2635)))+(x2634)+(((IkReal(-1.00000000000000))*(x2627)*(x2630))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2627)*(x2628)))+(((IkReal(-1.00000000000000))*(cj7)*(x2626)*(x2630)))+(((x2628)*(x2631)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2629)*(x2630)))+(x2636));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2637=((cj8)*(sj5));
IkReal x2638=((sj5)*(sj8));
IkReal x2639=((r22)*(sj7));
IkReal x2640=((cj7)*(r20));
IkReal x2641=((cj5)*(cj8));
IkReal x2642=((cj7)*(r21));
IkReal x2643=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x2637)*(x2640)))+(((r21)*(x2641)))+(((IkReal(-1.00000000000000))*(sj5)*(x2639)))+(((x2638)*(x2642)))+(((r20)*(x2643))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r21)*(x2637)))+(((cj5)*(x2639)))+(((r20)*(x2638)))+(((x2640)*(x2641)))+(((IkReal(-1.00000000000000))*(x2642)*(x2643))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(x2637)*(x2640)))+(((r21)*(x2641)))+(((IkReal(-1.00000000000000))*(sj5)*(x2639)))+(((x2638)*(x2642)))+(((r20)*(x2643)))))), ((gconst50)*(((((r21)*(x2637)))+(((cj5)*(x2639)))+(((r20)*(x2638)))+(((x2640)*(x2641)))+(((IkReal(-1.00000000000000))*(x2642)*(x2643)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2644=IKsin(j4);
IkReal x2645=IKcos(j4);
IkReal x2646=((IkReal(1.00000000000000))*(cj8));
IkReal x2647=((cj3)*(r01));
IkReal x2648=((cj3)*(r00));
IkReal x2649=((cj7)*(cj8));
IkReal x2650=((r11)*(sj3));
IkReal x2651=((IkReal(1.00000000000000))*(sj8));
IkReal x2652=((r10)*(sj3));
IkReal x2653=((sj5)*(x2645));
IkReal x2654=((cj5)*(x2644));
IkReal x2655=((cj5)*(x2645));
IkReal x2656=((sj5)*(x2644));
IkReal x2657=((x2653)+(x2654));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2657));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2646)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x2655)))+(x2656));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2651)*(x2652)))+(((IkReal(-1.00000000000000))*(x2646)*(x2647)))+(((IkReal(-1.00000000000000))*(x2646)*(x2650)))+(((IkReal(-1.00000000000000))*(x2648)*(x2651)))+(((IkReal(-1.00000000000000))*(x2656)))+(x2655));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2649)*(x2652)))+(((x2648)*(x2649)))+(((IkReal(-1.00000000000000))*(cj7)*(x2650)*(x2651)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2647)*(x2651)))+(x2657));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2658=((cj3)*(cj8));
IkReal x2659=((IkReal(1.00000000000000))*(sj7));
IkReal x2660=((cj8)*(npx));
IkReal x2661=((cj8)*(sj3));
IkReal x2662=((npy)*(sj8));
IkReal x2663=((r02)*(sj3));
IkReal x2664=((IkReal(1.00000000000000))*(r11));
IkReal x2665=((cj3)*(r12));
IkReal x2666=((IkReal(1.00000000000000))*(cj7));
IkReal x2667=((sj3)*(sj8));
IkReal x2668=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2660)*(x2666)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x2662)))+(((IkReal(-1.00000000000000))*(npz)*(x2659))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2658)*(x2664)))+(((r00)*(x2667)))+(((r01)*(x2661)))+(((IkReal(-1.00000000000000))*(r10)*(x2668))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2659)*(x2660)))+(((sj7)*(x2662)))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x2658)))+(((IkReal(-1.00000000000000))*(r00)*(x2668)))+(((IkReal(-1.00000000000000))*(r10)*(x2667)))+(((IkReal(-1.00000000000000))*(x2661)*(x2664))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r00)*(x2661)*(x2666)))+(((cj7)*(r01)*(x2667)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2664)))+(((IkReal(-1.00000000000000))*(x2659)*(x2663)))+(((sj7)*(x2665)))+(((cj7)*(r10)*(x2658))));
evalcond[8]=((((r10)*(sj7)*(x2658)))+(((r01)*(sj7)*(x2667)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2659)))+(((cj7)*(x2663)))+(((IkReal(-1.00000000000000))*(x2665)*(x2666)))+(((IkReal(-1.00000000000000))*(r00)*(x2659)*(x2661))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2669=((cj3)*(cj5));
IkReal x2670=((r02)*(sj7));
IkReal x2671=((cj5)*(sj7));
IkReal x2672=((cj3)*(sj5));
IkReal x2673=((r11)*(sj3));
IkReal x2674=((r10)*(sj3));
IkReal x2675=((r12)*(sj3));
IkReal x2676=((sj5)*(sj7));
IkReal x2677=((cj7)*(cj8)*(sj5));
IkReal x2678=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x2679=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x2669)*(x2678)))+(((IkReal(-1.00000000000000))*(r22)*(x2676)))+(((IkReal(-1.00000000000000))*(cj5)*(x2673)*(x2678)))+(((x2669)*(x2670)))+(((x2671)*(x2675)))+(((IkReal(-1.00000000000000))*(r20)*(x2677)))+(((cj7)*(cj8)*(r00)*(x2669)))+(((x2674)*(x2679))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2672)*(x2678)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2678)))+(((IkReal(-1.00000000000000))*(sj5)*(x2673)*(x2678)))+(((r22)*(x2671)))+(((x2675)*(x2676)))+(((x2670)*(x2672)))+(((r20)*(x2679)))+(((cj7)*(cj8)*(r00)*(x2672)))+(((x2674)*(x2677))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x2669)*(x2678)))+(((IkReal(-1.00000000000000))*(r22)*(x2676)))+(((IkReal(-1.00000000000000))*(cj5)*(x2673)*(x2678)))+(((x2669)*(x2670)))+(((x2671)*(x2675)))+(((IkReal(-1.00000000000000))*(r20)*(x2677)))+(((cj7)*(cj8)*(r00)*(x2669)))+(((x2674)*(x2679)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2672)*(x2678)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2678)))+(((IkReal(-1.00000000000000))*(sj5)*(x2673)*(x2678)))+(((r22)*(x2671)))+(((x2675)*(x2676)))+(((x2670)*(x2672)))+(((r20)*(x2679)))+(((cj7)*(cj8)*(r00)*(x2672)))+(((x2674)*(x2677)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2680=IKcos(j4);
IkReal x2681=IKsin(j4);
IkReal x2682=((IkReal(1.00000000000000))*(cj7));
IkReal x2683=((cj8)*(r20));
IkReal x2684=((cj3)*(r02));
IkReal x2685=((IkReal(1.00000000000000))*(sj7));
IkReal x2686=((sj3)*(sj7));
IkReal x2687=((r21)*(sj8));
IkReal x2688=((cj8)*(r10));
IkReal x2689=((sj5)*(x2680));
IkReal x2690=((cj5)*(x2681));
IkReal x2691=((r11)*(sj3)*(sj8));
IkReal x2692=((cj3)*(cj8)*(r00));
IkReal x2693=((cj5)*(x2680));
IkReal x2694=((cj3)*(r01)*(sj8));
IkReal x2695=((sj5)*(x2681));
IkReal x2696=((x2689)+(x2690));
evalcond[0]=((((cj7)*(x2687)))+(((IkReal(-1.00000000000000))*(r22)*(x2685)))+(((IkReal(-1.00000000000000))*(x2682)*(x2683)))+(((IkReal(-1.00000000000000))*(x2693)))+(x2695));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2683)*(x2685)))+(((sj7)*(x2687)))+(((cj7)*(r22)))+(x2696));
evalcond[2]=((((cj7)*(sj3)*(x2688)))+(((cj7)*(x2692)))+(((sj7)*(x2684)))+(((IkReal(-1.00000000000000))*(x2682)*(x2694)))+(((IkReal(-1.00000000000000))*(x2682)*(x2691)))+(((r12)*(x2686)))+(x2696));
evalcond[3]=((((sj7)*(x2692)))+(((IkReal(-1.00000000000000))*(x2682)*(x2684)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2682)))+(((x2686)*(x2688)))+(((IkReal(-1.00000000000000))*(x2695)))+(((IkReal(-1.00000000000000))*(x2685)*(x2691)))+(((IkReal(-1.00000000000000))*(x2685)*(x2694)))+(x2693));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2697=((r21)*(sj8));
IkReal x2698=((sj5)*(sj7));
IkReal x2699=((cj5)*(sj7));
IkReal x2700=((cj5)*(cj7));
IkReal x2701=((cj8)*(r20));
IkReal x2702=((cj7)*(sj5));
if( IKabs(((gconst52)*(((((r22)*(x2700)))+(((IkReal(-1.00000000000000))*(r22)*(x2698)))+(((x2697)*(x2702)))+(((x2697)*(x2699)))+(((IkReal(-1.00000000000000))*(x2699)*(x2701)))+(((IkReal(-1.00000000000000))*(x2701)*(x2702))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2702)))+(((r22)*(x2699)))+(((x2697)*(x2698)))+(((IkReal(-1.00000000000000))*(x2697)*(x2700)))+(((x2700)*(x2701)))+(((IkReal(-1.00000000000000))*(x2698)*(x2701))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((r22)*(x2700)))+(((IkReal(-1.00000000000000))*(r22)*(x2698)))+(((x2697)*(x2702)))+(((x2697)*(x2699)))+(((IkReal(-1.00000000000000))*(x2699)*(x2701)))+(((IkReal(-1.00000000000000))*(x2701)*(x2702)))))), ((gconst52)*(((((r22)*(x2702)))+(((r22)*(x2699)))+(((x2697)*(x2698)))+(((IkReal(-1.00000000000000))*(x2697)*(x2700)))+(((x2700)*(x2701)))+(((IkReal(-1.00000000000000))*(x2698)*(x2701)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2703=IKcos(j4);
IkReal x2704=IKsin(j4);
IkReal x2705=((IkReal(1.00000000000000))*(cj7));
IkReal x2706=((cj8)*(r20));
IkReal x2707=((cj3)*(r02));
IkReal x2708=((IkReal(1.00000000000000))*(sj7));
IkReal x2709=((sj3)*(sj7));
IkReal x2710=((r21)*(sj8));
IkReal x2711=((cj8)*(r10));
IkReal x2712=((sj5)*(x2703));
IkReal x2713=((cj5)*(x2704));
IkReal x2714=((r11)*(sj3)*(sj8));
IkReal x2715=((cj3)*(cj8)*(r00));
IkReal x2716=((cj5)*(x2703));
IkReal x2717=((cj3)*(r01)*(sj8));
IkReal x2718=((sj5)*(x2704));
IkReal x2719=((x2712)+(x2713));
evalcond[0]=((x2718)+(((IkReal(-1.00000000000000))*(x2716)))+(((IkReal(-1.00000000000000))*(r22)*(x2708)))+(((IkReal(-1.00000000000000))*(x2705)*(x2706)))+(((cj7)*(x2710))));
evalcond[1]=((x2719)+(((sj7)*(x2710)))+(((IkReal(-1.00000000000000))*(x2706)*(x2708)))+(((cj7)*(r22))));
evalcond[2]=((x2719)+(((r12)*(x2709)))+(((cj7)*(x2715)))+(((cj7)*(sj3)*(x2711)))+(((IkReal(-1.00000000000000))*(x2705)*(x2717)))+(((IkReal(-1.00000000000000))*(x2705)*(x2714)))+(((sj7)*(x2707))));
evalcond[3]=((x2716)+(((IkReal(-1.00000000000000))*(x2718)))+(((sj7)*(x2715)))+(((x2709)*(x2711)))+(((IkReal(-1.00000000000000))*(x2708)*(x2714)))+(((IkReal(-1.00000000000000))*(x2708)*(x2717)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2705)))+(((IkReal(-1.00000000000000))*(x2705)*(x2707))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2720=((cj3)*(cj8));
IkReal x2721=((IkReal(1.00000000000000))*(sj7));
IkReal x2722=((cj8)*(npx));
IkReal x2723=((cj8)*(sj3));
IkReal x2724=((npy)*(sj8));
IkReal x2725=((r02)*(sj3));
IkReal x2726=((IkReal(1.00000000000000))*(r11));
IkReal x2727=((cj3)*(r12));
IkReal x2728=((IkReal(1.00000000000000))*(cj7));
IkReal x2729=((sj3)*(sj8));
IkReal x2730=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2721)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2722)*(x2728)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x2724))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2720)*(x2726)))+(((r00)*(x2729)))+(((r01)*(x2723)))+(((IkReal(-1.00000000000000))*(r10)*(x2730))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x2721)*(x2722)))+(((sj7)*(x2724)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2723)*(x2726)))+(((IkReal(-1.00000000000000))*(r01)*(x2720)))+(((IkReal(-1.00000000000000))*(r10)*(x2729)))+(((IkReal(-1.00000000000000))*(r00)*(x2730))));
evalcond[7]=((((cj7)*(r01)*(x2729)))+(((cj7)*(r10)*(x2720)))+(((IkReal(-1.00000000000000))*(r00)*(x2723)*(x2728)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2726)))+(((IkReal(-1.00000000000000))*(x2721)*(x2725)))+(((sj7)*(x2727))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x2721)*(x2723)))+(((r01)*(sj7)*(x2729)))+(((IkReal(-1.00000000000000))*(x2727)*(x2728)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2721)))+(((r10)*(sj7)*(x2720)))+(((cj7)*(x2725))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2731=((cj3)*(cj5));
IkReal x2732=((r02)*(sj7));
IkReal x2733=((cj8)*(r00));
IkReal x2734=((cj5)*(sj7));
IkReal x2735=((cj5)*(sj3));
IkReal x2736=((sj3)*(sj5));
IkReal x2737=((IkReal(1.00000000000000))*(sj5));
IkReal x2738=((cj3)*(cj7)*(sj5));
IkReal x2739=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x2740=((cj7)*(cj8)*(r10));
IkReal x2741=((cj7)*(cj8)*(r20));
if( IKabs(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x2731)*(x2739)))+(((IkReal(-1.00000000000000))*(r11)*(x2735)*(x2739)))+(((x2731)*(x2732)))+(((cj7)*(x2731)*(x2733)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2737)))+(((r12)*(sj3)*(x2734)))+(((IkReal(-1.00000000000000))*(x2737)*(x2741)))+(((x2735)*(x2740))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2737)))+(((r22)*(x2734)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2739)))+(((IkReal(-1.00000000000000))*(r11)*(x2736)*(x2739)))+(((cj3)*(sj5)*(x2732)))+(((r12)*(sj7)*(x2736)))+(((x2736)*(x2740)))+(((x2733)*(x2738)))+(((cj5)*(x2741))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x2731)*(x2739)))+(((IkReal(-1.00000000000000))*(r11)*(x2735)*(x2739)))+(((x2731)*(x2732)))+(((cj7)*(x2731)*(x2733)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2737)))+(((r12)*(sj3)*(x2734)))+(((IkReal(-1.00000000000000))*(x2737)*(x2741)))+(((x2735)*(x2740)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2737)))+(((r22)*(x2734)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2739)))+(((IkReal(-1.00000000000000))*(r11)*(x2736)*(x2739)))+(((cj3)*(sj5)*(x2732)))+(((r12)*(sj7)*(x2736)))+(((x2736)*(x2740)))+(((x2733)*(x2738)))+(((cj5)*(x2741)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2742=IKcos(j4);
IkReal x2743=IKsin(j4);
IkReal x2744=((IkReal(1.00000000000000))*(cj7));
IkReal x2745=((cj8)*(r20));
IkReal x2746=((cj3)*(r02));
IkReal x2747=((IkReal(1.00000000000000))*(sj7));
IkReal x2748=((sj3)*(sj7));
IkReal x2749=((r21)*(sj8));
IkReal x2750=((IkReal(1.00000000000000))*(cj5));
IkReal x2751=((cj8)*(r10));
IkReal x2752=((sj5)*(x2743));
IkReal x2753=((sj5)*(x2742));
IkReal x2754=((r11)*(sj3)*(sj8));
IkReal x2755=((cj3)*(cj8)*(r00));
IkReal x2756=((cj3)*(r01)*(sj8));
IkReal x2757=((x2742)*(x2750));
evalcond[0]=((x2752)+(((cj7)*(x2749)))+(((IkReal(-1.00000000000000))*(x2744)*(x2745)))+(((IkReal(-1.00000000000000))*(x2757)))+(((IkReal(-1.00000000000000))*(r22)*(x2747))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2745)*(x2747)))+(((sj7)*(x2749)))+(((IkReal(-1.00000000000000))*(x2753)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2743)*(x2750))));
evalcond[2]=((x2753)+(((IkReal(-1.00000000000000))*(x2744)*(x2756)))+(((IkReal(-1.00000000000000))*(x2744)*(x2754)))+(((r12)*(x2748)))+(((cj7)*(x2755)))+(((cj7)*(sj3)*(x2751)))+(((sj7)*(x2746)))+(((cj5)*(x2743))));
evalcond[3]=((x2752)+(((IkReal(-1.00000000000000))*(x2744)*(x2746)))+(((sj7)*(x2755)))+(((x2748)*(x2751)))+(((IkReal(-1.00000000000000))*(x2757)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2744)))+(((IkReal(-1.00000000000000))*(x2747)*(x2756)))+(((IkReal(-1.00000000000000))*(x2747)*(x2754))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2758=((cj7)*(sj5));
IkReal x2759=((r21)*(sj8));
IkReal x2760=((cj5)*(cj7));
IkReal x2761=((cj8)*(r20));
IkReal x2762=((IkReal(1.00000000000000))*(sj7));
IkReal x2763=((sj5)*(sj7));
if( IKabs(((gconst54)*(((((x2758)*(x2761)))+(((IkReal(-1.00000000000000))*(cj5)*(x2761)*(x2762)))+(((IkReal(-1.00000000000000))*(x2758)*(x2759)))+(((r22)*(x2763)))+(((r22)*(x2760)))+(((cj5)*(sj7)*(x2759))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((r22)*(x2758)))+(((x2759)*(x2763)))+(((x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(sj5)*(x2761)*(x2762)))+(((IkReal(-1.00000000000000))*(x2760)*(x2761)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x2762))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((x2758)*(x2761)))+(((IkReal(-1.00000000000000))*(cj5)*(x2761)*(x2762)))+(((IkReal(-1.00000000000000))*(x2758)*(x2759)))+(((r22)*(x2763)))+(((r22)*(x2760)))+(((cj5)*(sj7)*(x2759)))))), ((gconst54)*(((((r22)*(x2758)))+(((x2759)*(x2763)))+(((x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(sj5)*(x2761)*(x2762)))+(((IkReal(-1.00000000000000))*(x2760)*(x2761)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x2762)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2764=IKcos(j4);
IkReal x2765=IKsin(j4);
IkReal x2766=((IkReal(1.00000000000000))*(cj7));
IkReal x2767=((cj8)*(r20));
IkReal x2768=((cj3)*(r02));
IkReal x2769=((IkReal(1.00000000000000))*(sj7));
IkReal x2770=((sj3)*(sj7));
IkReal x2771=((r21)*(sj8));
IkReal x2772=((IkReal(1.00000000000000))*(cj5));
IkReal x2773=((cj8)*(r10));
IkReal x2774=((sj5)*(x2765));
IkReal x2775=((sj5)*(x2764));
IkReal x2776=((r11)*(sj3)*(sj8));
IkReal x2777=((cj3)*(cj8)*(r00));
IkReal x2778=((cj3)*(r01)*(sj8));
IkReal x2779=((x2764)*(x2772));
evalcond[0]=((x2774)+(((cj7)*(x2771)))+(((IkReal(-1.00000000000000))*(x2779)))+(((IkReal(-1.00000000000000))*(r22)*(x2769)))+(((IkReal(-1.00000000000000))*(x2766)*(x2767))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2775)))+(((sj7)*(x2771)))+(((IkReal(-1.00000000000000))*(x2767)*(x2769)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2765)*(x2772))));
evalcond[2]=((x2775)+(((IkReal(-1.00000000000000))*(x2766)*(x2776)))+(((IkReal(-1.00000000000000))*(x2766)*(x2778)))+(((cj5)*(x2765)))+(((cj7)*(x2777)))+(((sj7)*(x2768)))+(((r12)*(x2770)))+(((cj7)*(sj3)*(x2773))));
evalcond[3]=((x2774)+(((x2770)*(x2773)))+(((sj7)*(x2777)))+(((IkReal(-1.00000000000000))*(x2769)*(x2776)))+(((IkReal(-1.00000000000000))*(x2769)*(x2778)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2766)))+(((IkReal(-1.00000000000000))*(x2779)))+(((IkReal(-1.00000000000000))*(x2766)*(x2768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2780=((r21)*(sj8));
IkReal x2781=((IkReal(1.00000000000000))*(r22));
IkReal x2782=((cj5)*(sj7));
IkReal x2783=((cj6)*(cj7));
IkReal x2784=((sj5)*(sj7));
IkReal x2785=((cj5)*(cj8)*(r20));
IkReal x2786=((IkReal(1.00000000000000))*(x2783));
IkReal x2787=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((cj6)*(r22)*(x2784)))+(((x2783)*(x2787)))+(((cj8)*(r20)*(x2782)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2781)))+(((IkReal(-1.00000000000000))*(sj5)*(x2780)*(x2786)))+(((IkReal(-1.00000000000000))*(x2780)*(x2782))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2781)))+(((IkReal(-1.00000000000000))*(x2785)*(x2786)))+(((cj8)*(r20)*(x2784)))+(((cj5)*(x2780)*(x2783)))+(((IkReal(-1.00000000000000))*(cj6)*(x2781)*(x2782)))+(((IkReal(-1.00000000000000))*(x2780)*(x2784))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((cj6)*(r22)*(x2784)))+(((x2783)*(x2787)))+(((cj8)*(r20)*(x2782)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2781)))+(((IkReal(-1.00000000000000))*(sj5)*(x2780)*(x2786)))+(((IkReal(-1.00000000000000))*(x2780)*(x2782)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2781)))+(((IkReal(-1.00000000000000))*(x2785)*(x2786)))+(((cj8)*(r20)*(x2784)))+(((cj5)*(x2780)*(x2783)))+(((IkReal(-1.00000000000000))*(cj6)*(x2781)*(x2782)))+(((IkReal(-1.00000000000000))*(x2780)*(x2784)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2788=IKsin(j4);
IkReal x2789=IKcos(j4);
IkReal x2790=((IkReal(1.00000000000000))*(cj8));
IkReal x2791=((cj3)*(r01));
IkReal x2792=((IkReal(1.00000000000000))*(sj8));
IkReal x2793=((r11)*(sj3));
IkReal x2794=((cj3)*(r00));
IkReal x2795=((IkReal(1.00000000000000))*(sj6));
IkReal x2796=((IkReal(1.00000000000000))*(cj7));
IkReal x2797=((cj3)*(r02));
IkReal x2798=((sj3)*(sj7));
IkReal x2799=((cj7)*(cj8));
IkReal x2800=((r21)*(sj8));
IkReal x2801=((r10)*(sj3));
IkReal x2802=((sj5)*(x2789));
IkReal x2803=((cj5)*(x2789));
IkReal x2804=((cj6)*(x2788));
IkReal x2805=((cj5)*(x2788));
IkReal x2806=((sj5)*(x2788));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2795)*(x2805)))+(((IkReal(-1.00000000000000))*(x2795)*(x2802)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2803)))+(((cj7)*(x2800)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2806)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2790))));
evalcond[2]=((((cj6)*(x2802)))+(((cj5)*(x2804)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2790)))+(((sj7)*(x2800))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2790)*(x2793)))+(((IkReal(-1.00000000000000))*(x2790)*(x2791)))+(((IkReal(-1.00000000000000))*(x2795)*(x2803)))+(((IkReal(-1.00000000000000))*(x2792)*(x2801)))+(((IkReal(-1.00000000000000))*(x2792)*(x2794)))+(((sj6)*(x2806))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x2792)*(x2793)))+(((x2794)*(x2799)))+(((IkReal(-1.00000000000000))*(cj7)*(x2791)*(x2792)))+(((sj7)*(x2797)))+(((r12)*(x2798)))+(((x2799)*(x2801)))+(x2802)+(x2805));
evalcond[5]=((((cj6)*(x2803)))+(((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((cj8)*(sj7)*(x2794)))+(((IkReal(-1.00000000000000))*(sj7)*(x2791)*(x2792)))+(((IkReal(-1.00000000000000))*(sj5)*(x2804)))+(((cj8)*(r10)*(x2798)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2796)))+(((IkReal(-1.00000000000000))*(sj7)*(x2792)*(x2793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2807=((sj5)*(sj6));
IkReal x2808=((r22)*(sj7));
IkReal x2809=((r20)*(sj8));
IkReal x2810=((cj8)*(r21));
IkReal x2811=((cj5)*(sj6));
IkReal x2812=((cj7)*(cj8)*(r20));
IkReal x2813=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((cj5)*(x2810)))+(((cj5)*(x2809)))+(((IkReal(-1.00000000000000))*(x2807)*(x2813)))+(((x2807)*(x2808)))+(((x2807)*(x2812))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x2808)*(x2811)))+(((IkReal(-1.00000000000000))*(x2811)*(x2812)))+(((sj5)*(x2809)))+(((sj5)*(x2810)))+(((x2811)*(x2813))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((cj5)*(x2810)))+(((cj5)*(x2809)))+(((IkReal(-1.00000000000000))*(x2807)*(x2813)))+(((x2807)*(x2808)))+(((x2807)*(x2812)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x2808)*(x2811)))+(((IkReal(-1.00000000000000))*(x2811)*(x2812)))+(((sj5)*(x2809)))+(((sj5)*(x2810)))+(((x2811)*(x2813)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2814=IKsin(j4);
IkReal x2815=IKcos(j4);
IkReal x2816=((IkReal(1.00000000000000))*(cj8));
IkReal x2817=((cj3)*(r01));
IkReal x2818=((IkReal(1.00000000000000))*(sj8));
IkReal x2819=((r11)*(sj3));
IkReal x2820=((cj3)*(r00));
IkReal x2821=((IkReal(1.00000000000000))*(sj6));
IkReal x2822=((IkReal(1.00000000000000))*(cj7));
IkReal x2823=((cj3)*(r02));
IkReal x2824=((sj3)*(sj7));
IkReal x2825=((cj7)*(cj8));
IkReal x2826=((r21)*(sj8));
IkReal x2827=((r10)*(sj3));
IkReal x2828=((sj5)*(x2815));
IkReal x2829=((cj5)*(x2815));
IkReal x2830=((cj6)*(x2814));
IkReal x2831=((cj5)*(x2814));
IkReal x2832=((sj5)*(x2814));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2821)*(x2828)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2821)*(x2831)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2829)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2816)))+(x2832)+(((cj7)*(x2826))));
evalcond[2]=((((cj6)*(x2828)))+(((cj5)*(x2830)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2816)))+(((sj7)*(x2826)))+(((cj7)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2821)*(x2829)))+(((IkReal(-1.00000000000000))*(x2818)*(x2827)))+(((IkReal(-1.00000000000000))*(x2818)*(x2820)))+(((IkReal(-1.00000000000000))*(x2816)*(x2817)))+(((IkReal(-1.00000000000000))*(x2816)*(x2819)))+(((sj6)*(x2832))));
evalcond[4]=((((sj7)*(x2823)))+(((IkReal(-1.00000000000000))*(cj7)*(x2817)*(x2818)))+(((x2825)*(x2827)))+(((IkReal(-1.00000000000000))*(cj7)*(x2818)*(x2819)))+(x2831)+(x2828)+(((x2820)*(x2825)))+(((r12)*(x2824))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x2818)*(x2819)))+(((cj6)*(x2829)))+(((IkReal(-1.00000000000000))*(x2822)*(x2823)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2822)))+(((cj8)*(r10)*(x2824)))+(((IkReal(-1.00000000000000))*(sj5)*(x2830)))+(((IkReal(-1.00000000000000))*(sj7)*(x2817)*(x2818)))+(((cj8)*(sj7)*(x2820))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2833=((cj6)*(sj7));
IkReal x2834=((cj6)*(cj7));
IkReal x2835=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst0)*(((((r12)*(x2833)))+(((cj8)*(r10)*(x2834)))+(((IkReal(-1.00000000000000))*(r11)*(x2834)*(x2835))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x2834)*(x2835)))+(((r02)*(x2833)))+(((cj8)*(r00)*(x2834))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst0)*(((((r12)*(x2833)))+(((cj8)*(r10)*(x2834)))+(((IkReal(-1.00000000000000))*(r11)*(x2834)*(x2835)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x2834)*(x2835)))+(((r02)*(x2833)))+(((cj8)*(r00)*(x2834)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2836=IKsin(j3);
IkReal x2837=IKcos(j3);
IkReal x2838=((IkReal(1.00000000000000))*(r11));
IkReal x2839=((r01)*(sj8));
IkReal x2840=((cj8)*(r10));
IkReal x2841=((IkReal(1.00000000000000))*(sj7));
IkReal x2842=((sj7)*(x2837));
IkReal x2843=((cj7)*(x2836));
IkReal x2844=((r00)*(x2836));
IkReal x2845=((cj7)*(x2837));
evalcond[0]=((((sj8)*(x2844)))+(cj6)+(((IkReal(-1.00000000000000))*(cj8)*(x2837)*(x2838)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2837)))+(((cj8)*(r01)*(x2836))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj8)*(x2838)*(x2845)))+(((r12)*(x2842)))+(((IkReal(-1.00000000000000))*(r02)*(x2836)*(x2841)))+(((x2840)*(x2845)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x2843)))+(((x2839)*(x2843))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x2838)*(x2842)))+(sj6)+(((IkReal(-1.00000000000000))*(r12)*(x2845)))+(((x2840)*(x2842)))+(((IkReal(-1.00000000000000))*(cj8)*(x2841)*(x2844)))+(((sj7)*(x2836)*(x2839)))+(((r02)*(x2843))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2846=((IkReal(1.00000000000000))*(cj3));
IkReal x2847=((cj7)*(r02));
IkReal x2848=((cj8)*(sj7));
IkReal x2849=((r01)*(sj3));
IkReal x2850=((IkReal(1.00000000000000))*(sj3));
IkReal x2851=((sj7)*(sj8));
IkReal x2852=((cj7)*(r12));
IkReal x2853=((cj7)*(cj8));
IkReal x2854=((cj3)*(r10));
IkReal x2855=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2846)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2846)))+(((cj8)*(x2849))));
evalcond[2]=((((r21)*(x2851)))+(((IkReal(-1.00000000000000))*(r20)*(x2848)))+(((cj7)*(r22))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2851)))+(((IkReal(-1.00000000000000))*(npx)*(x2848)))+(((cj7)*(npz))));
evalcond[4]=((((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r00)*(x2850)*(x2853)))+(((x2849)*(x2855)))+(((x2853)*(x2854)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2850)))+(((IkReal(-1.00000000000000))*(r11)*(x2846)*(x2855))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2849)*(x2851)))+(((sj3)*(x2847)))+(((x2848)*(x2854)))+(((IkReal(-1.00000000000000))*(r00)*(x2848)*(x2850)))+(((IkReal(-1.00000000000000))*(r11)*(x2846)*(x2851)))+(((IkReal(-1.00000000000000))*(x2846)*(x2852))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2846)*(x2847)))+(((r10)*(sj3)*(x2848)))+(((IkReal(-1.00000000000000))*(r01)*(x2846)*(x2851)))+(((IkReal(-1.00000000000000))*(x2850)*(x2852)))+(((IkReal(-1.00000000000000))*(r11)*(x2850)*(x2851)))+(((cj3)*(r00)*(x2848))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2856=((IkReal(4.00000000000000))*(npx));
IkReal x2857=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2856)))+(((IkReal(-1.00000000000000))*(cj8)*(x2857))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2857)))+(((cj7)*(cj8)*(x2856)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2856)))+(((IkReal(-1.00000000000000))*(cj8)*(x2857)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2857)))+(((cj7)*(cj8)*(x2856)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2856)))+(((IkReal(-1.00000000000000))*(cj8)*(x2857)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2857)))+(((cj7)*(cj8)*(x2856)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2858=((cj8)*(sj5));
IkReal x2859=((cj3)*(r01));
IkReal x2860=((IkReal(1.00000000000000))*(cj5));
IkReal x2861=((r11)*(sj3));
IkReal x2862=((sj5)*(sj8));
IkReal x2863=((r10)*(sj3));
IkReal x2864=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((x2858)*(x2859)))+(((cj5)*(r20)*(sj8)))+(((x2858)*(x2861)))+(((cj3)*(r00)*(x2862)))+(((x2862)*(x2863)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((r21)*(x2858)))+(((IkReal(-1.00000000000000))*(cj8)*(x2859)*(x2860)))+(((IkReal(-1.00000000000000))*(x2860)*(x2864)))+(((IkReal(-1.00000000000000))*(cj8)*(x2860)*(x2861)))+(((r20)*(x2862)))+(((IkReal(-1.00000000000000))*(sj8)*(x2860)*(x2863))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((x2858)*(x2859)))+(((cj5)*(r20)*(sj8)))+(((x2858)*(x2861)))+(((cj3)*(r00)*(x2862)))+(((x2862)*(x2863)))+(((cj5)*(cj8)*(r21)))))), ((gconst57)*(((((r21)*(x2858)))+(((IkReal(-1.00000000000000))*(cj8)*(x2859)*(x2860)))+(((IkReal(-1.00000000000000))*(x2860)*(x2864)))+(((IkReal(-1.00000000000000))*(cj8)*(x2860)*(x2861)))+(((r20)*(x2862)))+(((IkReal(-1.00000000000000))*(sj8)*(x2860)*(x2863)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2865=IKsin(j4);
IkReal x2866=IKcos(j4);
IkReal x2867=((IkReal(1.00000000000000))*(cj8));
IkReal x2868=((cj3)*(r01));
IkReal x2869=((cj3)*(r00));
IkReal x2870=((cj7)*(cj8));
IkReal x2871=((IkReal(1.00000000000000))*(cj5));
IkReal x2872=((IkReal(1.00000000000000))*(sj8));
IkReal x2873=((r11)*(sj3));
IkReal x2874=((r10)*(sj3));
IkReal x2875=((sj5)*(x2865));
IkReal x2876=((sj5)*(x2866));
IkReal x2877=((x2866)*(x2871));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2865)*(x2871)))+(((IkReal(-1.00000000000000))*(x2876)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2877)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2867)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2875)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2877)))+(((IkReal(-1.00000000000000))*(x2869)*(x2872)))+(((IkReal(-1.00000000000000))*(x2872)*(x2874)))+(((IkReal(-1.00000000000000))*(x2867)*(x2868)))+(((IkReal(-1.00000000000000))*(x2867)*(x2873)))+(x2875));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2868)*(x2872)))+(((x2870)*(x2874)))+(((cj5)*(x2865)))+(((x2869)*(x2870)))+(((IkReal(-1.00000000000000))*(cj7)*(x2872)*(x2873)))+(((cj3)*(r02)*(sj7)))+(x2876));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2878=((cj7)*(sj5));
IkReal x2879=((r21)*(sj8));
IkReal x2880=((cj8)*(r20));
IkReal x2881=((cj5)*(cj7));
IkReal x2882=((r22)*(sj7));
IkReal x2883=((cj8)*(r21));
IkReal x2884=((r20)*(sj8));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(x2878)*(x2879)))+(((sj5)*(x2882)))+(((x2878)*(x2880)))+(((cj5)*(x2883)))+(((cj5)*(x2884))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((sj5)*(x2883)))+(((sj5)*(x2884)))+(((IkReal(-1.00000000000000))*(x2880)*(x2881)))+(((x2879)*(x2881)))+(((IkReal(-1.00000000000000))*(cj5)*(x2882))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(x2878)*(x2879)))+(((sj5)*(x2882)))+(((x2878)*(x2880)))+(((cj5)*(x2883)))+(((cj5)*(x2884)))))), ((gconst56)*(((((sj5)*(x2883)))+(((sj5)*(x2884)))+(((IkReal(-1.00000000000000))*(x2880)*(x2881)))+(((x2879)*(x2881)))+(((IkReal(-1.00000000000000))*(cj5)*(x2882)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2885=IKsin(j4);
IkReal x2886=IKcos(j4);
IkReal x2887=((IkReal(1.00000000000000))*(cj8));
IkReal x2888=((cj3)*(r01));
IkReal x2889=((cj3)*(r00));
IkReal x2890=((cj7)*(cj8));
IkReal x2891=((IkReal(1.00000000000000))*(cj5));
IkReal x2892=((IkReal(1.00000000000000))*(sj8));
IkReal x2893=((r11)*(sj3));
IkReal x2894=((r10)*(sj3));
IkReal x2895=((sj5)*(x2885));
IkReal x2896=((sj5)*(x2886));
IkReal x2897=((x2886)*(x2891));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2896)))+(((IkReal(-1.00000000000000))*(x2885)*(x2891)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2897)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2887)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2895)+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2887)*(x2888)))+(((IkReal(-1.00000000000000))*(x2889)*(x2892)))+(((IkReal(-1.00000000000000))*(x2887)*(x2893)))+(((IkReal(-1.00000000000000))*(x2892)*(x2894)))+(((IkReal(-1.00000000000000))*(x2897)))+(x2895));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2890)*(x2894)))+(((x2889)*(x2890)))+(((IkReal(-1.00000000000000))*(cj7)*(x2888)*(x2892)))+(((IkReal(-1.00000000000000))*(cj7)*(x2892)*(x2893)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x2885)))+(x2896));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2898=((IkReal(1.00000000000000))*(cj3));
IkReal x2899=((cj7)*(r02));
IkReal x2900=((cj8)*(sj7));
IkReal x2901=((r01)*(sj3));
IkReal x2902=((IkReal(1.00000000000000))*(sj3));
IkReal x2903=((sj7)*(sj8));
IkReal x2904=((cj7)*(r12));
IkReal x2905=((cj7)*(cj8));
IkReal x2906=((cj3)*(r10));
IkReal x2907=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2898)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2898)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x2901))));
evalcond[2]=((((r21)*(x2903)))+(((IkReal(-1.00000000000000))*(r20)*(x2900)))+(((cj7)*(r22))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2903)))+(((IkReal(-1.00000000000000))*(npx)*(x2900)))+(((cj7)*(npz))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2902)*(x2905)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2902)))+(((IkReal(-1.00000000000000))*(r11)*(x2898)*(x2907)))+(((cj3)*(r12)*(sj7)))+(((x2901)*(x2907)))+(((x2905)*(x2906))));
evalcond[5]=((IkReal(-1.00000000000000))+(((sj3)*(x2899)))+(((IkReal(-1.00000000000000))*(r11)*(x2898)*(x2903)))+(((x2901)*(x2903)))+(((IkReal(-1.00000000000000))*(x2898)*(x2904)))+(((IkReal(-1.00000000000000))*(r00)*(x2900)*(x2902)))+(((x2900)*(x2906))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2902)*(x2904)))+(((r10)*(sj3)*(x2900)))+(((IkReal(-1.00000000000000))*(r01)*(x2898)*(x2903)))+(((cj3)*(r00)*(x2900)))+(((IkReal(-1.00000000000000))*(x2898)*(x2899)))+(((IkReal(-1.00000000000000))*(r11)*(x2902)*(x2903))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2908=((IkReal(4.00000000000000))*(npx));
IkReal x2909=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((sj8)*(x2908)))+(((cj8)*(x2909))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2908)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2909)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((sj8)*(x2908)))+(((cj8)*(x2909)))))+IKsqr(((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2908)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2909)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((sj8)*(x2908)))+(((cj8)*(x2909)))), ((IkReal(-0.940000000000000))+(((cj7)*(cj8)*(x2908)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2909)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2910=((IkReal(1.00000000000000))*(sj5));
IkReal x2911=((r20)*(sj8));
IkReal x2912=((cj5)*(cj8));
IkReal x2913=((r11)*(sj3));
IkReal x2914=((cj3)*(r01));
IkReal x2915=((cj3)*(r00)*(sj8));
IkReal x2916=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(cj5)*(x2911)))+(((IkReal(-1.00000000000000))*(cj8)*(x2910)*(x2913)))+(((IkReal(-1.00000000000000))*(cj8)*(x2910)*(x2914)))+(((IkReal(-1.00000000000000))*(r21)*(x2912)))+(((IkReal(-1.00000000000000))*(x2910)*(x2916)))+(((IkReal(-1.00000000000000))*(x2910)*(x2915))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((x2912)*(x2914)))+(((x2912)*(x2913)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2910)))+(((IkReal(-1.00000000000000))*(x2910)*(x2911)))+(((cj5)*(x2915)))+(((cj5)*(x2916))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(cj5)*(x2911)))+(((IkReal(-1.00000000000000))*(cj8)*(x2910)*(x2913)))+(((IkReal(-1.00000000000000))*(cj8)*(x2910)*(x2914)))+(((IkReal(-1.00000000000000))*(r21)*(x2912)))+(((IkReal(-1.00000000000000))*(x2910)*(x2916)))+(((IkReal(-1.00000000000000))*(x2910)*(x2915)))))), ((gconst59)*(((((x2912)*(x2914)))+(((x2912)*(x2913)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2910)))+(((IkReal(-1.00000000000000))*(x2910)*(x2911)))+(((cj5)*(x2915)))+(((cj5)*(x2916)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2917=IKsin(j4);
IkReal x2918=IKcos(j4);
IkReal x2919=((IkReal(1.00000000000000))*(cj8));
IkReal x2920=((cj3)*(r01));
IkReal x2921=((cj3)*(r00));
IkReal x2922=((cj7)*(cj8));
IkReal x2923=((r11)*(sj3));
IkReal x2924=((IkReal(1.00000000000000))*(sj8));
IkReal x2925=((r10)*(sj3));
IkReal x2926=((sj5)*(x2918));
IkReal x2927=((cj5)*(x2917));
IkReal x2928=((cj5)*(x2918));
IkReal x2929=((sj5)*(x2917));
IkReal x2930=((x2927)+(x2926));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2930));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(x2929)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2919)))+(((IkReal(-1.00000000000000))*(x2928))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2921)*(x2924)))+(((IkReal(-1.00000000000000))*(x2919)*(x2920)))+(((IkReal(-1.00000000000000))*(x2919)*(x2923)))+(((IkReal(-1.00000000000000))*(x2924)*(x2925)))+(x2928)+(((IkReal(-1.00000000000000))*(x2929))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x2921)*(x2922)))+(((IkReal(-1.00000000000000))*(cj7)*(x2920)*(x2924)))+(((IkReal(-1.00000000000000))*(cj7)*(x2923)*(x2924)))+(((cj3)*(r02)*(sj7)))+(((x2922)*(x2925)))+(x2930));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2931=((r22)*(sj7));
IkReal x2932=((cj8)*(sj5));
IkReal x2933=((sj5)*(sj8));
IkReal x2934=((cj7)*(r20));
IkReal x2935=((cj5)*(cj8));
IkReal x2936=((cj7)*(r21));
IkReal x2937=((cj5)*(sj8));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(sj5)*(x2931)))+(((r21)*(x2935)))+(((IkReal(-1.00000000000000))*(x2932)*(x2934)))+(((r20)*(x2937)))+(((x2933)*(x2936))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((r21)*(x2932)))+(((cj5)*(x2931)))+(((r20)*(x2933)))+(((IkReal(-1.00000000000000))*(x2936)*(x2937)))+(((x2934)*(x2935))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(sj5)*(x2931)))+(((r21)*(x2935)))+(((IkReal(-1.00000000000000))*(x2932)*(x2934)))+(((r20)*(x2937)))+(((x2933)*(x2936)))))), ((gconst58)*(((((r21)*(x2932)))+(((cj5)*(x2931)))+(((r20)*(x2933)))+(((IkReal(-1.00000000000000))*(x2936)*(x2937)))+(((x2934)*(x2935)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2938=IKsin(j4);
IkReal x2939=IKcos(j4);
IkReal x2940=((IkReal(1.00000000000000))*(cj8));
IkReal x2941=((cj3)*(r01));
IkReal x2942=((cj3)*(r00));
IkReal x2943=((cj7)*(cj8));
IkReal x2944=((r11)*(sj3));
IkReal x2945=((IkReal(1.00000000000000))*(sj8));
IkReal x2946=((r10)*(sj3));
IkReal x2947=((sj5)*(x2939));
IkReal x2948=((cj5)*(x2938));
IkReal x2949=((cj5)*(x2939));
IkReal x2950=((sj5)*(x2938));
IkReal x2951=((x2948)+(x2947));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2951));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2949)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2940)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(x2950));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2950)))+(((IkReal(-1.00000000000000))*(x2940)*(x2941)))+(((IkReal(-1.00000000000000))*(x2940)*(x2944)))+(((IkReal(-1.00000000000000))*(x2942)*(x2945)))+(((IkReal(-1.00000000000000))*(x2945)*(x2946)))+(x2949));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2941)*(x2945)))+(((IkReal(-1.00000000000000))*(cj7)*(x2944)*(x2945)))+(((cj3)*(r02)*(sj7)))+(((x2943)*(x2946)))+(((x2942)*(x2943)))+(x2951));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2952=((cj3)*(cj8));
IkReal x2953=((r01)*(sj3));
IkReal x2954=((r02)*(sj3));
IkReal x2955=((IkReal(1.00000000000000))*(sj7));
IkReal x2956=((IkReal(1.00000000000000))*(r11));
IkReal x2957=((cj3)*(r12));
IkReal x2958=((IkReal(1.00000000000000))*(cj7));
IkReal x2959=((cj8)*(sj3));
IkReal x2960=((sj3)*(sj8));
IkReal x2961=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2952)*(x2956)))+(((r00)*(x2960)))+(((cj8)*(x2953)))+(((IkReal(-1.00000000000000))*(r10)*(x2961))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x2952)))+(((IkReal(-1.00000000000000))*(r00)*(x2961)))+(((IkReal(-1.00000000000000))*(x2956)*(x2959)))+(((IkReal(-1.00000000000000))*(r10)*(x2960))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2956)))+(((sj7)*(x2957)))+(((IkReal(-1.00000000000000))*(x2954)*(x2955)))+(((cj7)*(r10)*(x2952)))+(((cj7)*(sj8)*(x2953)))+(((IkReal(-1.00000000000000))*(r00)*(x2958)*(x2959))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2955)*(x2959)))+(((cj7)*(x2954)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2955)))+(((sj7)*(sj8)*(x2953)))+(((r10)*(sj7)*(x2952)))+(((IkReal(-1.00000000000000))*(x2957)*(x2958))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2962=((IkReal(4.00000000000000))*(sj7));
IkReal x2963=((npy)*(sj8));
IkReal x2964=((IkReal(4.00000000000000))*(cj7));
IkReal x2965=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2964)))+(((x2962)*(x2963)))+(((IkReal(-1.00000000000000))*(x2962)*(x2965))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2963)*(x2964)))+(((npz)*(x2962)))+(((x2964)*(x2965)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2964)))+(((x2962)*(x2963)))+(((IkReal(-1.00000000000000))*(x2962)*(x2965)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2963)*(x2964)))+(((npz)*(x2962)))+(((x2964)*(x2965)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj7)))+(((npz)*(x2964)))+(((x2962)*(x2963)))+(((IkReal(-1.00000000000000))*(x2962)*(x2965)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2963)*(x2964)))+(((npz)*(x2962)))+(((x2964)*(x2965)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2966=((IkReal(1.00000000000000))*(sj7));
IkReal x2967=((npy)*(sj8));
IkReal x2968=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x2968)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x2967)))+(((IkReal(-1.00000000000000))*(npz)*(x2966)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2967)))+(((IkReal(-0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x2966)*(x2968)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2969=((cj3)*(cj5));
IkReal x2970=((r02)*(sj7));
IkReal x2971=((cj8)*(r00));
IkReal x2972=((cj5)*(sj7));
IkReal x2973=((cj5)*(sj3));
IkReal x2974=((cj7)*(cj8));
IkReal x2975=((IkReal(1.00000000000000))*(sj5));
IkReal x2976=((r12)*(sj3));
IkReal x2977=((sj3)*(sj5));
IkReal x2978=((cj3)*(cj7)*(sj5));
IkReal x2979=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst61)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2974)*(x2975)))+(((cj7)*(x2969)*(x2971)))+(((IkReal(-1.00000000000000))*(r11)*(x2973)*(x2979)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2975)))+(((x2969)*(x2970)))+(((r10)*(x2973)*(x2974)))+(((IkReal(-1.00000000000000))*(r01)*(x2969)*(x2979)))+(((x2972)*(x2976))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((cj5)*(r20)*(x2974)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2975)))+(((r10)*(x2974)*(x2977)))+(((x2971)*(x2978)))+(((sj5)*(sj7)*(x2976)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2979)))+(((r22)*(x2972)))+(((cj3)*(sj5)*(x2970)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2975))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2974)*(x2975)))+(((cj7)*(x2969)*(x2971)))+(((IkReal(-1.00000000000000))*(r11)*(x2973)*(x2979)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x2975)))+(((x2969)*(x2970)))+(((r10)*(x2973)*(x2974)))+(((IkReal(-1.00000000000000))*(r01)*(x2969)*(x2979)))+(((x2972)*(x2976)))))), ((gconst61)*(((((cj5)*(r20)*(x2974)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2975)))+(((r10)*(x2974)*(x2977)))+(((x2971)*(x2978)))+(((sj5)*(sj7)*(x2976)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2979)))+(((r22)*(x2972)))+(((cj3)*(sj5)*(x2970)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2975)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2980=IKcos(j4);
IkReal x2981=IKsin(j4);
IkReal x2982=((IkReal(1.00000000000000))*(cj7));
IkReal x2983=((cj8)*(r20));
IkReal x2984=((cj3)*(r02));
IkReal x2985=((IkReal(1.00000000000000))*(sj7));
IkReal x2986=((sj3)*(sj7));
IkReal x2987=((r21)*(sj8));
IkReal x2988=((cj8)*(r10));
IkReal x2989=((sj5)*(x2980));
IkReal x2990=((cj5)*(x2981));
IkReal x2991=((r11)*(sj3)*(sj8));
IkReal x2992=((cj3)*(cj8)*(r00));
IkReal x2993=((cj5)*(x2980));
IkReal x2994=((cj3)*(r01)*(sj8));
IkReal x2995=((sj5)*(x2981));
IkReal x2996=((x2989)+(x2990));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2982)*(x2983)))+(((IkReal(-1.00000000000000))*(r22)*(x2985)))+(((IkReal(-1.00000000000000))*(x2993)))+(x2995)+(((cj7)*(x2987))));
evalcond[1]=((((sj7)*(x2987)))+(((IkReal(-1.00000000000000))*(x2983)*(x2985)))+(((cj7)*(r22)))+(x2996));
evalcond[2]=((((cj7)*(x2992)))+(((cj7)*(sj3)*(x2988)))+(((sj7)*(x2984)))+(((r12)*(x2986)))+(((IkReal(-1.00000000000000))*(x2982)*(x2994)))+(((IkReal(-1.00000000000000))*(x2982)*(x2991)))+(x2996));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2982)*(x2984)))+(((IkReal(-1.00000000000000))*(x2985)*(x2991)))+(((IkReal(-1.00000000000000))*(x2985)*(x2994)))+(((x2986)*(x2988)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2982)))+(((sj7)*(x2992)))+(((IkReal(-1.00000000000000))*(x2995)))+(x2993));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2997=((sj5)*(sj7));
IkReal x2998=((r21)*(sj8));
IkReal x2999=((cj5)*(sj7));
IkReal x3000=((cj8)*(r20));
IkReal x3001=((cj5)*(cj7));
IkReal x3002=((cj7)*(sj5));
if( IKabs(((gconst60)*(((((x2998)*(x3002)))+(((IkReal(-1.00000000000000))*(x3000)*(x3002)))+(((IkReal(-1.00000000000000))*(r22)*(x2997)))+(((r22)*(x3001)))+(((IkReal(-1.00000000000000))*(x2999)*(x3000)))+(((x2998)*(x2999))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x2998)*(x3001)))+(((r22)*(x3002)))+(((x3000)*(x3001)))+(((IkReal(-1.00000000000000))*(x2997)*(x3000)))+(((x2997)*(x2998)))+(((r22)*(x2999))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((x2998)*(x3002)))+(((IkReal(-1.00000000000000))*(x3000)*(x3002)))+(((IkReal(-1.00000000000000))*(r22)*(x2997)))+(((r22)*(x3001)))+(((IkReal(-1.00000000000000))*(x2999)*(x3000)))+(((x2998)*(x2999)))))), ((gconst60)*(((((IkReal(-1.00000000000000))*(x2998)*(x3001)))+(((r22)*(x3002)))+(((x3000)*(x3001)))+(((IkReal(-1.00000000000000))*(x2997)*(x3000)))+(((x2997)*(x2998)))+(((r22)*(x2999)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3003=IKcos(j4);
IkReal x3004=IKsin(j4);
IkReal x3005=((IkReal(1.00000000000000))*(cj7));
IkReal x3006=((cj8)*(r20));
IkReal x3007=((cj3)*(r02));
IkReal x3008=((IkReal(1.00000000000000))*(sj7));
IkReal x3009=((sj3)*(sj7));
IkReal x3010=((r21)*(sj8));
IkReal x3011=((cj8)*(r10));
IkReal x3012=((sj5)*(x3003));
IkReal x3013=((cj5)*(x3004));
IkReal x3014=((r11)*(sj3)*(sj8));
IkReal x3015=((cj3)*(cj8)*(r00));
IkReal x3016=((cj5)*(x3003));
IkReal x3017=((cj3)*(r01)*(sj8));
IkReal x3018=((sj5)*(x3004));
IkReal x3019=((x3012)+(x3013));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3008)))+(x3018)+(((cj7)*(x3010)))+(((IkReal(-1.00000000000000))*(x3005)*(x3006)))+(((IkReal(-1.00000000000000))*(x3016))));
evalcond[1]=((((sj7)*(x3010)))+(x3019)+(((IkReal(-1.00000000000000))*(x3006)*(x3008)))+(((cj7)*(r22))));
evalcond[2]=((((cj7)*(sj3)*(x3011)))+(((sj7)*(x3007)))+(x3019)+(((cj7)*(x3015)))+(((r12)*(x3009)))+(((IkReal(-1.00000000000000))*(x3005)*(x3017)))+(((IkReal(-1.00000000000000))*(x3005)*(x3014))));
evalcond[3]=((((sj7)*(x3015)))+(((x3009)*(x3011)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3005)))+(x3016)+(((IkReal(-1.00000000000000))*(x3005)*(x3007)))+(((IkReal(-1.00000000000000))*(x3008)*(x3017)))+(((IkReal(-1.00000000000000))*(x3008)*(x3014)))+(((IkReal(-1.00000000000000))*(x3018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3020=((cj3)*(cj8));
IkReal x3021=((r01)*(sj3));
IkReal x3022=((r02)*(sj3));
IkReal x3023=((IkReal(1.00000000000000))*(sj7));
IkReal x3024=((IkReal(1.00000000000000))*(r11));
IkReal x3025=((cj3)*(r12));
IkReal x3026=((IkReal(1.00000000000000))*(cj7));
IkReal x3027=((cj8)*(sj3));
IkReal x3028=((sj3)*(sj8));
IkReal x3029=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((cj8)*(x3021)))+(((IkReal(-1.00000000000000))*(x3020)*(x3024)))+(((r00)*(x3028)))+(((IkReal(-1.00000000000000))*(r10)*(x3029))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x3029)))+(((IkReal(-1.00000000000000))*(r01)*(x3020)))+(((IkReal(-1.00000000000000))*(x3024)*(x3027)))+(((IkReal(-1.00000000000000))*(r10)*(x3028))));
evalcond[5]=((((cj7)*(sj8)*(x3021)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3024)))+(((cj7)*(r10)*(x3020)))+(((sj7)*(x3025)))+(((IkReal(-1.00000000000000))*(x3022)*(x3023)))+(((IkReal(-1.00000000000000))*(r00)*(x3026)*(x3027))));
evalcond[6]=((((sj7)*(sj8)*(x3021)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3023)))+(((IkReal(-1.00000000000000))*(x3025)*(x3026)))+(((r10)*(sj7)*(x3020)))+(((IkReal(-1.00000000000000))*(r00)*(x3023)*(x3027)))+(((cj7)*(x3022))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3030=((IkReal(4.00000000000000))*(sj7));
IkReal x3031=((npy)*(sj8));
IkReal x3032=((IkReal(4.00000000000000))*(cj7));
IkReal x3033=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3032)))+(((x3030)*(x3033)))+(((IkReal(-1.00000000000000))*(x3030)*(x3031)))+(((IkReal(-0.360000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x3032)*(x3033)))+(((npz)*(x3030)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3032)))+(((x3030)*(x3033)))+(((IkReal(-1.00000000000000))*(x3030)*(x3031)))+(((IkReal(-0.360000000000000))*(sj7)))))+IKsqr(((IkReal(-0.940000000000000))+(((x3032)*(x3033)))+(((npz)*(x3030)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3032)))+(((x3030)*(x3033)))+(((IkReal(-1.00000000000000))*(x3030)*(x3031)))+(((IkReal(-0.360000000000000))*(sj7)))), ((IkReal(-0.940000000000000))+(((x3032)*(x3033)))+(((npz)*(x3030)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x3034=((IkReal(1.00000000000000))*(sj7));
IkReal x3035=((npy)*(sj8));
IkReal x3036=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3034)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x3035)))+(((IkReal(-1.00000000000000))*(cj7)*(x3036)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((sj7)*(x3035)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3034)*(x3036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3037=((cj3)*(cj5));
IkReal x3038=((r02)*(sj7));
IkReal x3039=((cj8)*(r00));
IkReal x3040=((cj5)*(sj7));
IkReal x3041=((cj5)*(sj3));
IkReal x3042=((cj7)*(cj8));
IkReal x3043=((IkReal(1.00000000000000))*(sj5));
IkReal x3044=((r12)*(sj3));
IkReal x3045=((sj3)*(sj5));
IkReal x3046=((cj3)*(cj7)*(sj5));
IkReal x3047=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((r10)*(x3041)*(x3042)))+(((IkReal(-1.00000000000000))*(r20)*(x3042)*(x3043)))+(((x3037)*(x3038)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3043)))+(((IkReal(-1.00000000000000))*(r01)*(x3037)*(x3047)))+(((cj7)*(x3037)*(x3039)))+(((x3040)*(x3044)))+(((IkReal(-1.00000000000000))*(r11)*(x3041)*(x3047))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((r22)*(x3040)))+(((r10)*(x3042)*(x3045)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3043)))+(((x3039)*(x3046)))+(((cj5)*(r20)*(x3042)))+(((sj5)*(sj7)*(x3044)))+(((cj3)*(sj5)*(x3038)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3043)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3047))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((r10)*(x3041)*(x3042)))+(((IkReal(-1.00000000000000))*(r20)*(x3042)*(x3043)))+(((x3037)*(x3038)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3043)))+(((IkReal(-1.00000000000000))*(r01)*(x3037)*(x3047)))+(((cj7)*(x3037)*(x3039)))+(((x3040)*(x3044)))+(((IkReal(-1.00000000000000))*(r11)*(x3041)*(x3047)))))), ((gconst63)*(((((r22)*(x3040)))+(((r10)*(x3042)*(x3045)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3043)))+(((x3039)*(x3046)))+(((cj5)*(r20)*(x3042)))+(((sj5)*(sj7)*(x3044)))+(((cj3)*(sj5)*(x3038)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3043)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3047)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3048=IKcos(j4);
IkReal x3049=IKsin(j4);
IkReal x3050=((IkReal(1.00000000000000))*(cj7));
IkReal x3051=((cj8)*(r20));
IkReal x3052=((cj3)*(r02));
IkReal x3053=((IkReal(1.00000000000000))*(sj7));
IkReal x3054=((sj3)*(sj7));
IkReal x3055=((r21)*(sj8));
IkReal x3056=((IkReal(1.00000000000000))*(cj5));
IkReal x3057=((cj8)*(r10));
IkReal x3058=((sj5)*(x3049));
IkReal x3059=((sj5)*(x3048));
IkReal x3060=((r11)*(sj3)*(sj8));
IkReal x3061=((cj3)*(cj8)*(r00));
IkReal x3062=((cj3)*(r01)*(sj8));
IkReal x3063=((x3048)*(x3056));
evalcond[0]=((x3058)+(((IkReal(-1.00000000000000))*(x3063)))+(((cj7)*(x3055)))+(((IkReal(-1.00000000000000))*(x3050)*(x3051)))+(((IkReal(-1.00000000000000))*(r22)*(x3053))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3059)))+(((IkReal(-1.00000000000000))*(x3051)*(x3053)))+(((sj7)*(x3055)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3049)*(x3056))));
evalcond[2]=((((cj7)*(x3061)))+(x3059)+(((IkReal(-1.00000000000000))*(x3050)*(x3060)))+(((IkReal(-1.00000000000000))*(x3050)*(x3062)))+(((cj5)*(x3049)))+(((r12)*(x3054)))+(((cj7)*(sj3)*(x3057)))+(((sj7)*(x3052))));
evalcond[3]=((x3058)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3050)))+(((IkReal(-1.00000000000000))*(x3063)))+(((IkReal(-1.00000000000000))*(x3053)*(x3060)))+(((IkReal(-1.00000000000000))*(x3053)*(x3062)))+(((x3054)*(x3057)))+(((IkReal(-1.00000000000000))*(x3050)*(x3052)))+(((sj7)*(x3061))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3064=((cj7)*(sj5));
IkReal x3065=((r21)*(sj8));
IkReal x3066=((cj5)*(cj7));
IkReal x3067=((cj8)*(r20));
IkReal x3068=((sj5)*(sj7));
IkReal x3069=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((r22)*(x3066)))+(((r22)*(x3068)))+(((IkReal(-1.00000000000000))*(x3067)*(x3069)))+(((x3064)*(x3067)))+(((IkReal(-1.00000000000000))*(x3064)*(x3065)))+(((cj5)*(sj7)*(x3065))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x3069)))+(((r22)*(x3064)))+(((IkReal(-1.00000000000000))*(x3067)*(x3068)))+(((x3065)*(x3066)))+(((x3065)*(x3068)))+(((IkReal(-1.00000000000000))*(x3066)*(x3067))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((r22)*(x3066)))+(((r22)*(x3068)))+(((IkReal(-1.00000000000000))*(x3067)*(x3069)))+(((x3064)*(x3067)))+(((IkReal(-1.00000000000000))*(x3064)*(x3065)))+(((cj5)*(sj7)*(x3065)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x3069)))+(((r22)*(x3064)))+(((IkReal(-1.00000000000000))*(x3067)*(x3068)))+(((x3065)*(x3066)))+(((x3065)*(x3068)))+(((IkReal(-1.00000000000000))*(x3066)*(x3067)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3070=IKcos(j4);
IkReal x3071=IKsin(j4);
IkReal x3072=((IkReal(1.00000000000000))*(cj7));
IkReal x3073=((cj8)*(r20));
IkReal x3074=((cj3)*(r02));
IkReal x3075=((IkReal(1.00000000000000))*(sj7));
IkReal x3076=((sj3)*(sj7));
IkReal x3077=((r21)*(sj8));
IkReal x3078=((IkReal(1.00000000000000))*(cj5));
IkReal x3079=((cj8)*(r10));
IkReal x3080=((sj5)*(x3071));
IkReal x3081=((sj5)*(x3070));
IkReal x3082=((r11)*(sj3)*(sj8));
IkReal x3083=((cj3)*(cj8)*(r00));
IkReal x3084=((cj3)*(r01)*(sj8));
IkReal x3085=((x3070)*(x3078));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3085)))+(((IkReal(-1.00000000000000))*(x3072)*(x3073)))+(((IkReal(-1.00000000000000))*(r22)*(x3075)))+(x3080)+(((cj7)*(x3077))));
evalcond[1]=((((sj7)*(x3077)))+(((IkReal(-1.00000000000000))*(x3073)*(x3075)))+(((IkReal(-1.00000000000000))*(x3081)))+(((IkReal(-1.00000000000000))*(x3071)*(x3078)))+(((cj7)*(r22))));
evalcond[2]=((x3081)+(((sj7)*(x3074)))+(((cj7)*(sj3)*(x3079)))+(((cj5)*(x3071)))+(((r12)*(x3076)))+(((IkReal(-1.00000000000000))*(x3072)*(x3084)))+(((IkReal(-1.00000000000000))*(x3072)*(x3082)))+(((cj7)*(x3083))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3085)))+(((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(x3080)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3072)))+(((x3076)*(x3079)))+(((IkReal(-1.00000000000000))*(x3075)*(x3082)))+(((IkReal(-1.00000000000000))*(x3075)*(x3084)))+(((sj7)*(x3083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3086=((IkReal(4.00000000000000))*(cj7));
IkReal x3087=((cj8)*(npx));
IkReal x3088=((IkReal(4.00000000000000))*(sj7));
IkReal x3089=((IkReal(4.00000000000000))*(npy)*(sj8));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((npy)*(sj8)*(x3088)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x3087)*(x3088))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x3088)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x3086)))+(((x3086)*(x3087)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((npy)*(sj8)*(x3088)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x3087)*(x3088)))))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x3088)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x3086)))+(((x3086)*(x3087)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.360000000000000))*(sj7)))+(((npy)*(sj8)*(x3088)))+(((IkReal(-0.380000000000000))*(sj6)))+(((npz)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x3087)*(x3088)))))), ((IkReal(-0.940000000000000))+(((npz)*(x3088)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x3086)))+(((x3086)*(x3087)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3090=IKsin(j5);
IkReal x3091=((IkReal(1.00000000000000))*(sj7));
IkReal x3092=((npy)*(sj8));
IkReal x3093=((cj8)*(npx));
IkReal x3094=((IkReal(0.250000000000000))*(x3090));
evalcond[0]=((((IkReal(-0.0300000000000000))*(sj6)))+(((IkReal(-0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((sj6)*(x3094)))+(((cj8)*(npy))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3091)))+(((IkReal(-1.00000000000000))*(cj7)*(x3093)))+(((cj7)*(x3092)))+(((IkReal(0.250000000000000))*(IKcos(j5)))));
evalcond[2]=((((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x3092)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-0.0950000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(x3091)*(x3093)))+(((IkReal(-1.00000000000000))*(cj6)*(x3094)))+(((cj7)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3095=((IkReal(1.00000000000000))*(sj7));
IkReal x3096=((IkReal(1.00000000000000))*(cj3));
IkReal x3097=((cj7)*(r02));
IkReal x3098=((cj8)*(r00));
IkReal x3099=((cj3)*(sj7));
IkReal x3100=((cj8)*(npx));
IkReal x3101=((r01)*(sj3));
IkReal x3102=((cj7)*(sj8));
IkReal x3103=((r11)*(sj8));
IkReal x3104=((IkReal(1.00000000000000))*(cj7));
IkReal x3105=((sj7)*(sj8));
IkReal x3106=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3095)))+(((IkReal(-1.00000000000000))*(x3100)*(x3104)))+(((npy)*(x3102))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3096)))+(((cj8)*(x3101)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3096))));
evalcond[4]=((((r21)*(x3105)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3095)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3095)*(x3100)))+(((npy)*(x3105)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x3096)*(x3102)))+(((cj3)*(cj7)*(x3106)))+(((IkReal(-1.00000000000000))*(sj3)*(x3098)*(x3104)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3095)))+(((x3101)*(x3102)))+(((r12)*(x3099))));
evalcond[7]=((IkReal(1.00000000000000))+(((x3099)*(x3106)))+(((sj3)*(x3097)))+(((IkReal(-1.00000000000000))*(sj3)*(x3095)*(x3098)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3096)))+(((IkReal(-1.00000000000000))*(cj3)*(x3095)*(x3103)))+(((x3101)*(x3105))));
evalcond[8]=((((x3098)*(x3099)))+(((IkReal(-1.00000000000000))*(sj3)*(x3095)*(x3103)))+(((sj3)*(sj7)*(x3106)))+(((IkReal(-1.00000000000000))*(x3096)*(x3097)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3095)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3104))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3107=((cj8)*(sj5));
IkReal x3108=((cj3)*(r01));
IkReal x3109=((IkReal(1.00000000000000))*(cj5));
IkReal x3110=((r11)*(sj3));
IkReal x3111=((sj5)*(sj8));
IkReal x3112=((r10)*(sj3));
IkReal x3113=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x3107)*(x3108)))+(((cj5)*(r20)*(sj8)))+(((x3107)*(x3110)))+(((x3111)*(x3112)))+(((cj3)*(r00)*(x3111)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x3109)*(x3112)))+(((IkReal(-1.00000000000000))*(cj8)*(x3108)*(x3109)))+(((IkReal(-1.00000000000000))*(cj8)*(x3109)*(x3110)))+(((IkReal(-1.00000000000000))*(x3109)*(x3113)))+(((r21)*(x3107)))+(((r20)*(x3111))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x3107)*(x3108)))+(((cj5)*(r20)*(sj8)))+(((x3107)*(x3110)))+(((x3111)*(x3112)))+(((cj3)*(r00)*(x3111)))+(((cj5)*(cj8)*(r21)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x3109)*(x3112)))+(((IkReal(-1.00000000000000))*(cj8)*(x3108)*(x3109)))+(((IkReal(-1.00000000000000))*(cj8)*(x3109)*(x3110)))+(((IkReal(-1.00000000000000))*(x3109)*(x3113)))+(((r21)*(x3107)))+(((r20)*(x3111)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3114=IKsin(j4);
IkReal x3115=IKcos(j4);
IkReal x3116=((IkReal(1.00000000000000))*(cj8));
IkReal x3117=((cj3)*(r01));
IkReal x3118=((cj3)*(r00));
IkReal x3119=((cj7)*(cj8));
IkReal x3120=((IkReal(1.00000000000000))*(cj5));
IkReal x3121=((IkReal(1.00000000000000))*(sj8));
IkReal x3122=((r11)*(sj3));
IkReal x3123=((r10)*(sj3));
IkReal x3124=((sj5)*(x3114));
IkReal x3125=((sj5)*(x3115));
IkReal x3126=((x3115)*(x3120));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3114)*(x3120)))+(((IkReal(-1.00000000000000))*(x3125)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3124)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3116)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3126)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x3124)+(((IkReal(-1.00000000000000))*(x3116)*(x3122)))+(((IkReal(-1.00000000000000))*(x3121)*(x3123)))+(((IkReal(-1.00000000000000))*(x3126)))+(((IkReal(-1.00000000000000))*(x3118)*(x3121)))+(((IkReal(-1.00000000000000))*(x3116)*(x3117))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x3125)+(((x3118)*(x3119)))+(((x3119)*(x3123)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x3114)))+(((IkReal(-1.00000000000000))*(cj7)*(x3121)*(x3122)))+(((IkReal(-1.00000000000000))*(cj7)*(x3117)*(x3121))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3127=((sj5)*(sj8));
IkReal x3128=((IkReal(1.00000000000000))*(cj7));
IkReal x3129=((r22)*(sj7));
IkReal x3130=((cj8)*(sj5));
IkReal x3131=((cj5)*(cj8));
IkReal x3132=((cj5)*(sj8));
if( IKabs(((gconst48)*(((((r20)*(x3132)))+(((r21)*(x3131)))+(((IkReal(-1.00000000000000))*(r21)*(x3127)*(x3128)))+(((sj5)*(x3129)))+(((cj7)*(r20)*(x3130))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((r20)*(x3127)))+(((r21)*(x3130)))+(((cj7)*(r21)*(x3132)))+(((IkReal(-1.00000000000000))*(cj5)*(x3129)))+(((IkReal(-1.00000000000000))*(r20)*(x3128)*(x3131))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((r20)*(x3132)))+(((r21)*(x3131)))+(((IkReal(-1.00000000000000))*(r21)*(x3127)*(x3128)))+(((sj5)*(x3129)))+(((cj7)*(r20)*(x3130)))))), ((gconst48)*(((((r20)*(x3127)))+(((r21)*(x3130)))+(((cj7)*(r21)*(x3132)))+(((IkReal(-1.00000000000000))*(cj5)*(x3129)))+(((IkReal(-1.00000000000000))*(r20)*(x3128)*(x3131)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3133=IKsin(j4);
IkReal x3134=IKcos(j4);
IkReal x3135=((IkReal(1.00000000000000))*(cj8));
IkReal x3136=((cj3)*(r01));
IkReal x3137=((cj3)*(r00));
IkReal x3138=((cj7)*(cj8));
IkReal x3139=((IkReal(1.00000000000000))*(cj5));
IkReal x3140=((IkReal(1.00000000000000))*(sj8));
IkReal x3141=((r11)*(sj3));
IkReal x3142=((r10)*(sj3));
IkReal x3143=((sj5)*(x3133));
IkReal x3144=((sj5)*(x3134));
IkReal x3145=((x3134)*(x3139));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3144)))+(((IkReal(-1.00000000000000))*(x3133)*(x3139)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3143)+(((IkReal(-1.00000000000000))*(x3145)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3135)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x3143)+(((IkReal(-1.00000000000000))*(x3145)))+(((IkReal(-1.00000000000000))*(x3140)*(x3142)))+(((IkReal(-1.00000000000000))*(x3135)*(x3141)))+(((IkReal(-1.00000000000000))*(x3135)*(x3136)))+(((IkReal(-1.00000000000000))*(x3137)*(x3140))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x3144)+(((IkReal(-1.00000000000000))*(cj7)*(x3140)*(x3141)))+(((x3137)*(x3138)))+(((cj5)*(x3133)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3136)*(x3140)))+(((x3138)*(x3142))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3146=((IkReal(1.00000000000000))*(sj7));
IkReal x3147=((IkReal(1.00000000000000))*(cj3));
IkReal x3148=((cj7)*(r02));
IkReal x3149=((cj8)*(r00));
IkReal x3150=((cj3)*(sj7));
IkReal x3151=((cj8)*(npx));
IkReal x3152=((r01)*(sj3));
IkReal x3153=((cj7)*(sj8));
IkReal x3154=((r11)*(sj8));
IkReal x3155=((IkReal(1.00000000000000))*(cj7));
IkReal x3156=((sj7)*(sj8));
IkReal x3157=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x3153)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3146)))+(((IkReal(-1.00000000000000))*(x3151)*(x3155))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3147)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x3152)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3147))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3146)))+(((cj7)*(r22)))+(((r21)*(x3156))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3146)*(x3151)))+(((npy)*(x3156)))+(((cj7)*(npz))));
evalcond[6]=((((r12)*(x3150)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3146)))+(((IkReal(-1.00000000000000))*(r11)*(x3147)*(x3153)))+(((IkReal(-1.00000000000000))*(sj3)*(x3149)*(x3155)))+(((x3152)*(x3153)))+(((cj3)*(cj7)*(x3157))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj3)*(x3148)))+(((x3150)*(x3157)))+(((IkReal(-1.00000000000000))*(sj3)*(x3146)*(x3149)))+(((IkReal(-1.00000000000000))*(cj3)*(x3146)*(x3154)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3147)))+(((x3152)*(x3156))));
evalcond[8]=((((x3149)*(x3150)))+(((IkReal(-1.00000000000000))*(x3147)*(x3148)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3146)))+(((sj3)*(sj7)*(x3157)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3155)))+(((IkReal(-1.00000000000000))*(sj3)*(x3146)*(x3154))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3158=((IkReal(1.00000000000000))*(sj5));
IkReal x3159=((r20)*(sj8));
IkReal x3160=((cj5)*(cj8));
IkReal x3161=((r11)*(sj3));
IkReal x3162=((cj3)*(r01));
IkReal x3163=((cj3)*(r00)*(sj8));
IkReal x3164=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3158)*(x3163)))+(((IkReal(-1.00000000000000))*(x3158)*(x3164)))+(((IkReal(-1.00000000000000))*(r21)*(x3160)))+(((IkReal(-1.00000000000000))*(cj8)*(x3158)*(x3162)))+(((IkReal(-1.00000000000000))*(cj8)*(x3158)*(x3161)))+(((IkReal(-1.00000000000000))*(cj5)*(x3159))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3158)*(x3159)))+(((cj5)*(x3164)))+(((cj5)*(x3163)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3158)))+(((x3160)*(x3161)))+(((x3160)*(x3162))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x3158)*(x3163)))+(((IkReal(-1.00000000000000))*(x3158)*(x3164)))+(((IkReal(-1.00000000000000))*(r21)*(x3160)))+(((IkReal(-1.00000000000000))*(cj8)*(x3158)*(x3162)))+(((IkReal(-1.00000000000000))*(cj8)*(x3158)*(x3161)))+(((IkReal(-1.00000000000000))*(cj5)*(x3159)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(x3158)*(x3159)))+(((cj5)*(x3164)))+(((cj5)*(x3163)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3158)))+(((x3160)*(x3161)))+(((x3160)*(x3162)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3165=IKsin(j4);
IkReal x3166=IKcos(j4);
IkReal x3167=((IkReal(1.00000000000000))*(cj8));
IkReal x3168=((cj3)*(r01));
IkReal x3169=((cj3)*(r00));
IkReal x3170=((cj7)*(cj8));
IkReal x3171=((r11)*(sj3));
IkReal x3172=((IkReal(1.00000000000000))*(sj8));
IkReal x3173=((r10)*(sj3));
IkReal x3174=((sj5)*(x3166));
IkReal x3175=((cj5)*(x3165));
IkReal x3176=((cj5)*(x3166));
IkReal x3177=((sj5)*(x3165));
IkReal x3178=((x3175)+(x3174));
evalcond[0]=((x3178)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3177)+(((IkReal(-1.00000000000000))*(x3176)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3167)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3169)*(x3172)))+(x3176)+(((IkReal(-1.00000000000000))*(x3167)*(x3168)))+(((IkReal(-1.00000000000000))*(x3177)))+(((IkReal(-1.00000000000000))*(x3167)*(x3171)))+(((IkReal(-1.00000000000000))*(x3172)*(x3173))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(x3178)+(((IkReal(-1.00000000000000))*(cj7)*(x3171)*(x3172)))+(((x3170)*(x3173)))+(((cj3)*(r02)*(sj7)))+(((x3169)*(x3170)))+(((IkReal(-1.00000000000000))*(cj7)*(x3168)*(x3172))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3179=((cj8)*(sj5));
IkReal x3180=((sj5)*(sj8));
IkReal x3181=((r22)*(sj7));
IkReal x3182=((cj7)*(r20));
IkReal x3183=((cj5)*(cj8));
IkReal x3184=((cj7)*(r21));
IkReal x3185=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((r20)*(x3185)))+(((x3180)*(x3184)))+(((IkReal(-1.00000000000000))*(sj5)*(x3181)))+(((IkReal(-1.00000000000000))*(x3179)*(x3182)))+(((r21)*(x3183))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r20)*(x3180)))+(((x3182)*(x3183)))+(((r21)*(x3179)))+(((cj5)*(x3181)))+(((IkReal(-1.00000000000000))*(x3184)*(x3185))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((r20)*(x3185)))+(((x3180)*(x3184)))+(((IkReal(-1.00000000000000))*(sj5)*(x3181)))+(((IkReal(-1.00000000000000))*(x3179)*(x3182)))+(((r21)*(x3183)))))), ((gconst50)*(((((r20)*(x3180)))+(((x3182)*(x3183)))+(((r21)*(x3179)))+(((cj5)*(x3181)))+(((IkReal(-1.00000000000000))*(x3184)*(x3185)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3186=IKsin(j4);
IkReal x3187=IKcos(j4);
IkReal x3188=((IkReal(1.00000000000000))*(cj8));
IkReal x3189=((cj3)*(r01));
IkReal x3190=((cj3)*(r00));
IkReal x3191=((cj7)*(cj8));
IkReal x3192=((r11)*(sj3));
IkReal x3193=((IkReal(1.00000000000000))*(sj8));
IkReal x3194=((r10)*(sj3));
IkReal x3195=((sj5)*(x3187));
IkReal x3196=((cj5)*(x3186));
IkReal x3197=((cj5)*(x3187));
IkReal x3198=((sj5)*(x3186));
IkReal x3199=((x3196)+(x3195));
evalcond[0]=((x3199)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3198)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3188)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3197)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3190)*(x3193)))+(x3197)+(((IkReal(-1.00000000000000))*(x3193)*(x3194)))+(((IkReal(-1.00000000000000))*(x3188)*(x3192)))+(((IkReal(-1.00000000000000))*(x3188)*(x3189)))+(((IkReal(-1.00000000000000))*(x3198))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3189)*(x3193)))+(x3199)+(((IkReal(-1.00000000000000))*(cj7)*(x3192)*(x3193)))+(((cj3)*(r02)*(sj7)))+(((x3190)*(x3191)))+(((x3191)*(x3194))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3200=((cj3)*(cj8));
IkReal x3201=((IkReal(1.00000000000000))*(sj7));
IkReal x3202=((cj8)*(npx));
IkReal x3203=((cj8)*(sj3));
IkReal x3204=((npy)*(sj8));
IkReal x3205=((r02)*(sj3));
IkReal x3206=((IkReal(1.00000000000000))*(r11));
IkReal x3207=((cj3)*(r12));
IkReal x3208=((IkReal(1.00000000000000))*(cj7));
IkReal x3209=((sj3)*(sj8));
IkReal x3210=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj7)*(x3204)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3202)*(x3208)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3201))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3210)))+(((IkReal(-1.00000000000000))*(x3200)*(x3206)))+(((r00)*(x3209)))+(((r01)*(x3203))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3201)*(x3202)))+(((sj7)*(x3204)))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3210)))+(((IkReal(-1.00000000000000))*(x3203)*(x3206)))+(((IkReal(-1.00000000000000))*(r10)*(x3209)))+(((IkReal(-1.00000000000000))*(r01)*(x3200))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3206)))+(((IkReal(-1.00000000000000))*(x3201)*(x3205)))+(((cj7)*(r10)*(x3200)))+(((IkReal(-1.00000000000000))*(r00)*(x3203)*(x3208)))+(((sj7)*(x3207)))+(((cj7)*(r01)*(x3209))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3207)*(x3208)))+(((cj7)*(x3205)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3201)))+(((r10)*(sj7)*(x3200)))+(((IkReal(-1.00000000000000))*(r00)*(x3201)*(x3203)))+(((r01)*(sj7)*(x3209))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3211=((cj3)*(cj5));
IkReal x3212=((r02)*(sj7));
IkReal x3213=((cj5)*(sj7));
IkReal x3214=((cj3)*(sj5));
IkReal x3215=((r11)*(sj3));
IkReal x3216=((r10)*(sj3));
IkReal x3217=((r12)*(sj3));
IkReal x3218=((sj5)*(sj7));
IkReal x3219=((cj7)*(cj8)*(sj5));
IkReal x3220=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x3221=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x3219)))+(((IkReal(-1.00000000000000))*(r22)*(x3218)))+(((x3216)*(x3221)))+(((x3211)*(x3212)))+(((x3213)*(x3217)))+(((cj7)*(cj8)*(r00)*(x3211)))+(((IkReal(-1.00000000000000))*(cj5)*(x3215)*(x3220)))+(((IkReal(-1.00000000000000))*(r01)*(x3211)*(x3220))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x3212)*(x3214)))+(((IkReal(-1.00000000000000))*(r01)*(x3214)*(x3220)))+(((r22)*(x3213)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3220)))+(((IkReal(-1.00000000000000))*(sj5)*(x3215)*(x3220)))+(((cj7)*(cj8)*(r00)*(x3214)))+(((x3216)*(x3219)))+(((r20)*(x3221)))+(((x3217)*(x3218))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x3219)))+(((IkReal(-1.00000000000000))*(r22)*(x3218)))+(((x3216)*(x3221)))+(((x3211)*(x3212)))+(((x3213)*(x3217)))+(((cj7)*(cj8)*(r00)*(x3211)))+(((IkReal(-1.00000000000000))*(cj5)*(x3215)*(x3220)))+(((IkReal(-1.00000000000000))*(r01)*(x3211)*(x3220)))))), ((gconst53)*(((((x3212)*(x3214)))+(((IkReal(-1.00000000000000))*(r01)*(x3214)*(x3220)))+(((r22)*(x3213)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3220)))+(((IkReal(-1.00000000000000))*(sj5)*(x3215)*(x3220)))+(((cj7)*(cj8)*(r00)*(x3214)))+(((x3216)*(x3219)))+(((r20)*(x3221)))+(((x3217)*(x3218)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3222=IKcos(j4);
IkReal x3223=IKsin(j4);
IkReal x3224=((IkReal(1.00000000000000))*(cj7));
IkReal x3225=((cj8)*(r20));
IkReal x3226=((cj3)*(r02));
IkReal x3227=((IkReal(1.00000000000000))*(sj7));
IkReal x3228=((sj3)*(sj7));
IkReal x3229=((r21)*(sj8));
IkReal x3230=((cj8)*(r10));
IkReal x3231=((sj5)*(x3222));
IkReal x3232=((cj5)*(x3223));
IkReal x3233=((r11)*(sj3)*(sj8));
IkReal x3234=((cj3)*(cj8)*(r00));
IkReal x3235=((cj5)*(x3222));
IkReal x3236=((cj3)*(r01)*(sj8));
IkReal x3237=((sj5)*(x3223));
IkReal x3238=((x3232)+(x3231));
evalcond[0]=((x3237)+(((IkReal(-1.00000000000000))*(x3224)*(x3225)))+(((cj7)*(x3229)))+(((IkReal(-1.00000000000000))*(x3235)))+(((IkReal(-1.00000000000000))*(r22)*(x3227))));
evalcond[1]=((x3238)+(((IkReal(-1.00000000000000))*(x3225)*(x3227)))+(((sj7)*(x3229)))+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x3228)))+(((cj7)*(sj3)*(x3230)))+(x3238)+(((IkReal(-1.00000000000000))*(x3224)*(x3233)))+(((IkReal(-1.00000000000000))*(x3224)*(x3236)))+(((sj7)*(x3226)))+(((cj7)*(x3234))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3224)))+(x3235)+(((IkReal(-1.00000000000000))*(x3224)*(x3226)))+(((IkReal(-1.00000000000000))*(x3237)))+(((IkReal(-1.00000000000000))*(x3227)*(x3233)))+(((IkReal(-1.00000000000000))*(x3227)*(x3236)))+(((x3228)*(x3230)))+(((sj7)*(x3234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3239=((r21)*(sj8));
IkReal x3240=((sj5)*(sj7));
IkReal x3241=((cj5)*(sj7));
IkReal x3242=((cj5)*(cj7));
IkReal x3243=((cj8)*(r20));
IkReal x3244=((cj7)*(sj5));
if( IKabs(((gconst52)*(((((r22)*(x3242)))+(((IkReal(-1.00000000000000))*(x3241)*(x3243)))+(((IkReal(-1.00000000000000))*(r22)*(x3240)))+(((x3239)*(x3244)))+(((x3239)*(x3241)))+(((IkReal(-1.00000000000000))*(x3243)*(x3244))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x3241)))+(((r22)*(x3244)))+(((IkReal(-1.00000000000000))*(x3239)*(x3242)))+(((IkReal(-1.00000000000000))*(x3240)*(x3243)))+(((x3239)*(x3240)))+(((x3242)*(x3243))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((r22)*(x3242)))+(((IkReal(-1.00000000000000))*(x3241)*(x3243)))+(((IkReal(-1.00000000000000))*(r22)*(x3240)))+(((x3239)*(x3244)))+(((x3239)*(x3241)))+(((IkReal(-1.00000000000000))*(x3243)*(x3244)))))), ((gconst52)*(((((r22)*(x3241)))+(((r22)*(x3244)))+(((IkReal(-1.00000000000000))*(x3239)*(x3242)))+(((IkReal(-1.00000000000000))*(x3240)*(x3243)))+(((x3239)*(x3240)))+(((x3242)*(x3243)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3245=IKcos(j4);
IkReal x3246=IKsin(j4);
IkReal x3247=((IkReal(1.00000000000000))*(cj7));
IkReal x3248=((cj8)*(r20));
IkReal x3249=((cj3)*(r02));
IkReal x3250=((IkReal(1.00000000000000))*(sj7));
IkReal x3251=((sj3)*(sj7));
IkReal x3252=((r21)*(sj8));
IkReal x3253=((cj8)*(r10));
IkReal x3254=((sj5)*(x3245));
IkReal x3255=((cj5)*(x3246));
IkReal x3256=((r11)*(sj3)*(sj8));
IkReal x3257=((cj3)*(cj8)*(r00));
IkReal x3258=((cj5)*(x3245));
IkReal x3259=((cj3)*(r01)*(sj8));
IkReal x3260=((sj5)*(x3246));
IkReal x3261=((x3254)+(x3255));
evalcond[0]=((x3260)+(((cj7)*(x3252)))+(((IkReal(-1.00000000000000))*(x3258)))+(((IkReal(-1.00000000000000))*(r22)*(x3250)))+(((IkReal(-1.00000000000000))*(x3247)*(x3248))));
evalcond[1]=((x3261)+(((IkReal(-1.00000000000000))*(x3248)*(x3250)))+(((sj7)*(x3252)))+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x3251)))+(((sj7)*(x3249)))+(((IkReal(-1.00000000000000))*(x3247)*(x3256)))+(((IkReal(-1.00000000000000))*(x3247)*(x3259)))+(x3261)+(((cj7)*(sj3)*(x3253)))+(((cj7)*(x3257))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3260)))+(x3258)+(((x3251)*(x3253)))+(((sj7)*(x3257)))+(((IkReal(-1.00000000000000))*(x3250)*(x3259)))+(((IkReal(-1.00000000000000))*(x3250)*(x3256)))+(((IkReal(-1.00000000000000))*(x3247)*(x3249)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3247))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3262=((cj3)*(cj8));
IkReal x3263=((IkReal(1.00000000000000))*(sj7));
IkReal x3264=((cj8)*(npx));
IkReal x3265=((cj8)*(sj3));
IkReal x3266=((npy)*(sj8));
IkReal x3267=((r02)*(sj3));
IkReal x3268=((IkReal(1.00000000000000))*(r11));
IkReal x3269=((cj3)*(r12));
IkReal x3270=((IkReal(1.00000000000000))*(cj7));
IkReal x3271=((sj3)*(sj8));
IkReal x3272=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x3264)*(x3270)))+(((cj7)*(x3266)))+(((IkReal(-1.00000000000000))*(npz)*(x3263))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r01)*(x3265)))+(((r00)*(x3271)))+(((IkReal(-1.00000000000000))*(r10)*(x3272)))+(((IkReal(-1.00000000000000))*(x3262)*(x3268))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x3266)))+(((IkReal(0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x3263)*(x3264)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3272)))+(((IkReal(-1.00000000000000))*(x3265)*(x3268)))+(((IkReal(-1.00000000000000))*(r01)*(x3262)))+(((IkReal(-1.00000000000000))*(r10)*(x3271))));
evalcond[7]=((((sj7)*(x3269)))+(((IkReal(-1.00000000000000))*(r00)*(x3265)*(x3270)))+(((cj7)*(r01)*(x3271)))+(((cj7)*(r10)*(x3262)))+(((IkReal(-1.00000000000000))*(x3263)*(x3267)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3268))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3263)))+(((IkReal(-1.00000000000000))*(r00)*(x3263)*(x3265)))+(((IkReal(-1.00000000000000))*(x3269)*(x3270)))+(((cj7)*(x3267)))+(((r01)*(sj7)*(x3271)))+(((r10)*(sj7)*(x3262))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3273=((cj3)*(cj5));
IkReal x3274=((r02)*(sj7));
IkReal x3275=((cj8)*(r00));
IkReal x3276=((cj5)*(sj7));
IkReal x3277=((cj5)*(sj3));
IkReal x3278=((sj3)*(sj5));
IkReal x3279=((IkReal(1.00000000000000))*(sj5));
IkReal x3280=((cj3)*(cj7)*(sj5));
IkReal x3281=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x3282=((cj7)*(cj8)*(r10));
IkReal x3283=((cj7)*(cj8)*(r20));
if( IKabs(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x3279)*(x3283)))+(((x3273)*(x3274)))+(((IkReal(-1.00000000000000))*(r01)*(x3273)*(x3281)))+(((cj7)*(x3273)*(x3275)))+(((r12)*(sj3)*(x3276)))+(((IkReal(-1.00000000000000))*(r11)*(x3277)*(x3281)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3279)))+(((x3277)*(x3282))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj5)*(x3283)))+(((r12)*(sj7)*(x3278)))+(((x3275)*(x3280)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3281)))+(((r22)*(x3276)))+(((IkReal(-1.00000000000000))*(r11)*(x3278)*(x3281)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3279)))+(((x3278)*(x3282)))+(((cj3)*(sj5)*(x3274))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x3279)*(x3283)))+(((x3273)*(x3274)))+(((IkReal(-1.00000000000000))*(r01)*(x3273)*(x3281)))+(((cj7)*(x3273)*(x3275)))+(((r12)*(sj3)*(x3276)))+(((IkReal(-1.00000000000000))*(r11)*(x3277)*(x3281)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3279)))+(((x3277)*(x3282)))))), ((gconst55)*(((((cj5)*(x3283)))+(((r12)*(sj7)*(x3278)))+(((x3275)*(x3280)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3281)))+(((r22)*(x3276)))+(((IkReal(-1.00000000000000))*(r11)*(x3278)*(x3281)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3279)))+(((x3278)*(x3282)))+(((cj3)*(sj5)*(x3274)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3284=IKcos(j4);
IkReal x3285=IKsin(j4);
IkReal x3286=((IkReal(1.00000000000000))*(cj7));
IkReal x3287=((cj8)*(r20));
IkReal x3288=((cj3)*(r02));
IkReal x3289=((IkReal(1.00000000000000))*(sj7));
IkReal x3290=((sj3)*(sj7));
IkReal x3291=((r21)*(sj8));
IkReal x3292=((IkReal(1.00000000000000))*(cj5));
IkReal x3293=((cj8)*(r10));
IkReal x3294=((sj5)*(x3285));
IkReal x3295=((sj5)*(x3284));
IkReal x3296=((r11)*(sj3)*(sj8));
IkReal x3297=((cj3)*(cj8)*(r00));
IkReal x3298=((cj3)*(r01)*(sj8));
IkReal x3299=((x3284)*(x3292));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3299)))+(((IkReal(-1.00000000000000))*(r22)*(x3289)))+(x3294)+(((cj7)*(x3291)))+(((IkReal(-1.00000000000000))*(x3286)*(x3287))));
evalcond[1]=((((sj7)*(x3291)))+(((IkReal(-1.00000000000000))*(x3287)*(x3289)))+(((IkReal(-1.00000000000000))*(x3295)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3285)*(x3292))));
evalcond[2]=((((sj7)*(x3288)))+(x3295)+(((cj5)*(x3285)))+(((cj7)*(x3297)))+(((cj7)*(sj3)*(x3293)))+(((r12)*(x3290)))+(((IkReal(-1.00000000000000))*(x3286)*(x3298)))+(((IkReal(-1.00000000000000))*(x3286)*(x3296))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3286)))+(((sj7)*(x3297)))+(((IkReal(-1.00000000000000))*(x3299)))+(x3294)+(((x3290)*(x3293)))+(((IkReal(-1.00000000000000))*(x3289)*(x3296)))+(((IkReal(-1.00000000000000))*(x3289)*(x3298)))+(((IkReal(-1.00000000000000))*(x3286)*(x3288))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3300=((cj7)*(sj5));
IkReal x3301=((r21)*(sj8));
IkReal x3302=((cj5)*(cj7));
IkReal x3303=((cj8)*(r20));
IkReal x3304=((IkReal(1.00000000000000))*(sj7));
IkReal x3305=((sj5)*(sj7));
if( IKabs(((gconst54)*(((((x3300)*(x3303)))+(((IkReal(-1.00000000000000))*(cj5)*(x3303)*(x3304)))+(((r22)*(x3305)))+(((r22)*(x3302)))+(((cj5)*(sj7)*(x3301)))+(((IkReal(-1.00000000000000))*(x3300)*(x3301))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((r22)*(x3300)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x3304)))+(((IkReal(-1.00000000000000))*(sj5)*(x3303)*(x3304)))+(((x3301)*(x3305)))+(((x3301)*(x3302)))+(((IkReal(-1.00000000000000))*(x3302)*(x3303))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((x3300)*(x3303)))+(((IkReal(-1.00000000000000))*(cj5)*(x3303)*(x3304)))+(((r22)*(x3305)))+(((r22)*(x3302)))+(((cj5)*(sj7)*(x3301)))+(((IkReal(-1.00000000000000))*(x3300)*(x3301)))))), ((gconst54)*(((((r22)*(x3300)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x3304)))+(((IkReal(-1.00000000000000))*(sj5)*(x3303)*(x3304)))+(((x3301)*(x3305)))+(((x3301)*(x3302)))+(((IkReal(-1.00000000000000))*(x3302)*(x3303)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3306=IKcos(j4);
IkReal x3307=IKsin(j4);
IkReal x3308=((IkReal(1.00000000000000))*(cj7));
IkReal x3309=((cj8)*(r20));
IkReal x3310=((cj3)*(r02));
IkReal x3311=((IkReal(1.00000000000000))*(sj7));
IkReal x3312=((sj3)*(sj7));
IkReal x3313=((r21)*(sj8));
IkReal x3314=((IkReal(1.00000000000000))*(cj5));
IkReal x3315=((cj8)*(r10));
IkReal x3316=((sj5)*(x3307));
IkReal x3317=((sj5)*(x3306));
IkReal x3318=((r11)*(sj3)*(sj8));
IkReal x3319=((cj3)*(cj8)*(r00));
IkReal x3320=((cj3)*(r01)*(sj8));
IkReal x3321=((x3306)*(x3314));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3321)))+(((cj7)*(x3313)))+(x3316)+(((IkReal(-1.00000000000000))*(r22)*(x3311)))+(((IkReal(-1.00000000000000))*(x3308)*(x3309))));
evalcond[1]=((((sj7)*(x3313)))+(((IkReal(-1.00000000000000))*(x3309)*(x3311)))+(((IkReal(-1.00000000000000))*(x3317)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3307)*(x3314))));
evalcond[2]=((((cj7)*(x3319)))+(x3317)+(((sj7)*(x3310)))+(((r12)*(x3312)))+(((cj7)*(sj3)*(x3315)))+(((IkReal(-1.00000000000000))*(x3308)*(x3318)))+(((IkReal(-1.00000000000000))*(x3308)*(x3320)))+(((cj5)*(x3307))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3321)))+(((IkReal(-1.00000000000000))*(x3311)*(x3320)))+(x3316)+(((sj7)*(x3319)))+(((x3312)*(x3315)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3308)))+(((IkReal(-1.00000000000000))*(x3308)*(x3310)))+(((IkReal(-1.00000000000000))*(x3311)*(x3318))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3322=((r21)*(sj8));
IkReal x3323=((IkReal(1.00000000000000))*(r22));
IkReal x3324=((cj5)*(sj7));
IkReal x3325=((cj6)*(cj7));
IkReal x3326=((sj5)*(sj7));
IkReal x3327=((cj5)*(cj8)*(r20));
IkReal x3328=((IkReal(1.00000000000000))*(x3325));
IkReal x3329=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3322)*(x3324)))+(((x3325)*(x3329)))+(((cj6)*(r22)*(x3326)))+(((IkReal(-1.00000000000000))*(sj5)*(x3322)*(x3328)))+(((cj8)*(r20)*(x3324)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3323))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3322)*(x3326)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3323)))+(((IkReal(-1.00000000000000))*(x3327)*(x3328)))+(((cj5)*(x3322)*(x3325)))+(((IkReal(-1.00000000000000))*(cj6)*(x3323)*(x3324)))+(((cj8)*(r20)*(x3326))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3322)*(x3324)))+(((x3325)*(x3329)))+(((cj6)*(r22)*(x3326)))+(((IkReal(-1.00000000000000))*(sj5)*(x3322)*(x3328)))+(((cj8)*(r20)*(x3324)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3323)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3322)*(x3326)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3323)))+(((IkReal(-1.00000000000000))*(x3327)*(x3328)))+(((cj5)*(x3322)*(x3325)))+(((IkReal(-1.00000000000000))*(cj6)*(x3323)*(x3324)))+(((cj8)*(r20)*(x3326)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3330=IKsin(j4);
IkReal x3331=IKcos(j4);
IkReal x3332=((IkReal(1.00000000000000))*(cj8));
IkReal x3333=((cj3)*(r01));
IkReal x3334=((IkReal(1.00000000000000))*(sj8));
IkReal x3335=((r11)*(sj3));
IkReal x3336=((cj3)*(r00));
IkReal x3337=((IkReal(1.00000000000000))*(sj6));
IkReal x3338=((IkReal(1.00000000000000))*(cj7));
IkReal x3339=((cj3)*(r02));
IkReal x3340=((sj3)*(sj7));
IkReal x3341=((cj7)*(cj8));
IkReal x3342=((r21)*(sj8));
IkReal x3343=((r10)*(sj3));
IkReal x3344=((sj5)*(x3331));
IkReal x3345=((cj5)*(x3331));
IkReal x3346=((cj6)*(x3330));
IkReal x3347=((cj5)*(x3330));
IkReal x3348=((sj5)*(x3330));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3337)*(x3344)))+(((IkReal(-1.00000000000000))*(x3337)*(x3347)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3345)))+(x3348)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3332)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x3342))));
evalcond[2]=((((cj5)*(x3346)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3332)))+(((cj6)*(x3344)))+(((cj7)*(r22)))+(((sj7)*(x3342))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3334)*(x3343)))+(((IkReal(-1.00000000000000))*(x3337)*(x3345)))+(((IkReal(-1.00000000000000))*(x3334)*(x3336)))+(((sj6)*(x3348)))+(((IkReal(-1.00000000000000))*(x3332)*(x3333)))+(((IkReal(-1.00000000000000))*(x3332)*(x3335))));
evalcond[4]=((x3347)+(x3344)+(((sj7)*(x3339)))+(((x3341)*(x3343)))+(((IkReal(-1.00000000000000))*(cj7)*(x3333)*(x3334)))+(((x3336)*(x3341)))+(((IkReal(-1.00000000000000))*(cj7)*(x3334)*(x3335)))+(((r12)*(x3340))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3338)))+(((IkReal(-1.00000000000000))*(x3338)*(x3339)))+(((IkReal(-1.00000000000000))*(sj7)*(x3333)*(x3334)))+(((IkReal(-1.00000000000000))*(sj7)*(x3334)*(x3335)))+(((IkReal(-1.00000000000000))*(sj5)*(x3346)))+(((cj8)*(sj7)*(x3336)))+(((cj6)*(x3345)))+(((cj8)*(r10)*(x3340))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3349=((sj5)*(sj6));
IkReal x3350=((r22)*(sj7));
IkReal x3351=((r20)*(sj8));
IkReal x3352=((cj8)*(r21));
IkReal x3353=((cj5)*(sj6));
IkReal x3354=((cj7)*(cj8)*(r20));
IkReal x3355=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3349)*(x3355)))+(((cj5)*(x3351)))+(((cj5)*(x3352)))+(((x3349)*(x3350)))+(((x3349)*(x3354))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3350)*(x3353)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)))+(((x3353)*(x3355)))+(((sj5)*(x3351)))+(((sj5)*(x3352))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x3349)*(x3355)))+(((cj5)*(x3351)))+(((cj5)*(x3352)))+(((x3349)*(x3350)))+(((x3349)*(x3354)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x3350)*(x3353)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)))+(((x3353)*(x3355)))+(((sj5)*(x3351)))+(((sj5)*(x3352)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3356=IKsin(j4);
IkReal x3357=IKcos(j4);
IkReal x3358=((IkReal(1.00000000000000))*(cj8));
IkReal x3359=((cj3)*(r01));
IkReal x3360=((IkReal(1.00000000000000))*(sj8));
IkReal x3361=((r11)*(sj3));
IkReal x3362=((cj3)*(r00));
IkReal x3363=((IkReal(1.00000000000000))*(sj6));
IkReal x3364=((IkReal(1.00000000000000))*(cj7));
IkReal x3365=((cj3)*(r02));
IkReal x3366=((sj3)*(sj7));
IkReal x3367=((cj7)*(cj8));
IkReal x3368=((r21)*(sj8));
IkReal x3369=((r10)*(sj3));
IkReal x3370=((sj5)*(x3357));
IkReal x3371=((cj5)*(x3357));
IkReal x3372=((cj6)*(x3356));
IkReal x3373=((cj5)*(x3356));
IkReal x3374=((sj5)*(x3356));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3363)*(x3370)))+(((IkReal(-1.00000000000000))*(x3363)*(x3373)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3371)))+(((cj7)*(x3368)))+(x3374)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3358)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((cj5)*(x3372)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3358)))+(((sj7)*(x3368)))+(((cj6)*(x3370)))+(((cj7)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3360)*(x3369)))+(((IkReal(-1.00000000000000))*(x3360)*(x3362)))+(((IkReal(-1.00000000000000))*(x3363)*(x3371)))+(((IkReal(-1.00000000000000))*(x3358)*(x3359)))+(((sj6)*(x3374)))+(((IkReal(-1.00000000000000))*(x3358)*(x3361))));
evalcond[4]=((((x3362)*(x3367)))+(((x3367)*(x3369)))+(x3373)+(x3370)+(((sj7)*(x3365)))+(((IkReal(-1.00000000000000))*(cj7)*(x3360)*(x3361)))+(((IkReal(-1.00000000000000))*(cj7)*(x3359)*(x3360)))+(((r12)*(x3366))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x3359)*(x3360)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3364)))+(((cj8)*(r10)*(x3366)))+(((IkReal(-1.00000000000000))*(x3364)*(x3365)))+(((cj8)*(sj7)*(x3362)))+(((IkReal(-1.00000000000000))*(sj5)*(x3372)))+(((IkReal(-1.00000000000000))*(sj7)*(x3360)*(x3361)))+(((cj6)*(x3371))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3375=((IkReal(4.00000000000000))*(npx));
IkReal x3376=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x3375)))+(((IkReal(-1.00000000000000))*(cj8)*(x3376))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3375)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3376))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x3375)))+(((IkReal(-1.00000000000000))*(cj8)*(x3376)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3375)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3376)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x3375)))+(((IkReal(-1.00000000000000))*(cj8)*(x3376)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3375)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3376)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3377=IKsin(j5);
IkReal x3378=((IkReal(1.00000000000000))*(sj7));
IkReal x3379=((npy)*(sj8));
IkReal x3380=((cj8)*(npx));
IkReal x3381=((IkReal(0.250000000000000))*(x3377));
evalcond[0]=((((IkReal(-0.0300000000000000))*(sj6)))+(((IkReal(-0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x3381))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3378)))+(((IkReal(-1.00000000000000))*(cj7)*(x3380)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x3379))));
evalcond[2]=((((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3378)*(x3380)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-0.0950000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x3381)))+(((cj7)*(npz)))+(((sj7)*(x3379))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5))))));
dummyeval[0]=((((sj6)*((cj5)*(cj5))))+(((sj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3382=((IkReal(1.00000000000000))*(sj7));
IkReal x3383=((IkReal(1.00000000000000))*(cj3));
IkReal x3384=((cj7)*(r02));
IkReal x3385=((cj8)*(r00));
IkReal x3386=((cj3)*(sj7));
IkReal x3387=((cj8)*(npx));
IkReal x3388=((r01)*(sj3));
IkReal x3389=((cj7)*(sj8));
IkReal x3390=((r11)*(sj8));
IkReal x3391=((IkReal(1.00000000000000))*(cj7));
IkReal x3392=((sj7)*(sj8));
IkReal x3393=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x3387)*(x3391)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3382)))+(((npy)*(x3389))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3383)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x3388)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3383))));
evalcond[4]=((((r21)*(x3392)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3382))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3382)*(x3387)))+(((cj7)*(npz)))+(((npy)*(x3392))));
evalcond[6]=((((cj3)*(cj7)*(x3393)))+(((x3388)*(x3389)))+(((r12)*(x3386)))+(((IkReal(-1.00000000000000))*(sj3)*(x3385)*(x3391)))+(((IkReal(-1.00000000000000))*(r11)*(x3383)*(x3389)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3382))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x3382)*(x3390)))+(((x3386)*(x3393)))+(((x3388)*(x3392)))+(((IkReal(-1.00000000000000))*(sj3)*(x3382)*(x3385)))+(((sj3)*(x3384)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3383))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3383)*(x3384)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3391)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3382)))+(((sj3)*(sj7)*(x3393)))+(((IkReal(-1.00000000000000))*(sj3)*(x3382)*(x3390)))+(((x3385)*(x3386))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3394=((cj8)*(sj5));
IkReal x3395=((cj3)*(r01));
IkReal x3396=((IkReal(1.00000000000000))*(cj5));
IkReal x3397=((r11)*(sj3));
IkReal x3398=((sj5)*(sj8));
IkReal x3399=((r10)*(sj3));
IkReal x3400=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((cj3)*(r00)*(x3398)))+(((x3394)*(x3397)))+(((x3394)*(x3395)))+(((cj5)*(r20)*(sj8)))+(((x3398)*(x3399)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r20)*(x3398)))+(((IkReal(-1.00000000000000))*(cj8)*(x3396)*(x3397)))+(((IkReal(-1.00000000000000))*(x3396)*(x3400)))+(((r21)*(x3394)))+(((IkReal(-1.00000000000000))*(sj8)*(x3396)*(x3399)))+(((IkReal(-1.00000000000000))*(cj8)*(x3395)*(x3396))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((cj3)*(r00)*(x3398)))+(((x3394)*(x3397)))+(((x3394)*(x3395)))+(((cj5)*(r20)*(sj8)))+(((x3398)*(x3399)))+(((cj5)*(cj8)*(r21)))))), ((gconst49)*(((((r20)*(x3398)))+(((IkReal(-1.00000000000000))*(cj8)*(x3396)*(x3397)))+(((IkReal(-1.00000000000000))*(x3396)*(x3400)))+(((r21)*(x3394)))+(((IkReal(-1.00000000000000))*(sj8)*(x3396)*(x3399)))+(((IkReal(-1.00000000000000))*(cj8)*(x3395)*(x3396)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3401=IKsin(j4);
IkReal x3402=IKcos(j4);
IkReal x3403=((IkReal(1.00000000000000))*(cj8));
IkReal x3404=((cj3)*(r01));
IkReal x3405=((cj3)*(r00));
IkReal x3406=((cj7)*(cj8));
IkReal x3407=((IkReal(1.00000000000000))*(cj5));
IkReal x3408=((IkReal(1.00000000000000))*(sj8));
IkReal x3409=((r11)*(sj3));
IkReal x3410=((r10)*(sj3));
IkReal x3411=((sj5)*(x3401));
IkReal x3412=((sj5)*(x3402));
IkReal x3413=((x3402)*(x3407));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3412)))+(((IkReal(-1.00000000000000))*(x3401)*(x3407)))+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3403)))+(x3411)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x3413))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3405)*(x3408)))+(((IkReal(-1.00000000000000))*(x3408)*(x3410)))+(x3411)+(((IkReal(-1.00000000000000))*(x3403)*(x3409)))+(((IkReal(-1.00000000000000))*(x3403)*(x3404)))+(((IkReal(-1.00000000000000))*(x3413))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x3406)*(x3410)))+(x3412)+(((IkReal(-1.00000000000000))*(cj7)*(x3408)*(x3409)))+(((x3405)*(x3406)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x3401)))+(((IkReal(-1.00000000000000))*(cj7)*(x3404)*(x3408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3414=((sj5)*(sj8));
IkReal x3415=((IkReal(1.00000000000000))*(cj7));
IkReal x3416=((r22)*(sj7));
IkReal x3417=((cj8)*(sj5));
IkReal x3418=((cj5)*(cj8));
IkReal x3419=((cj5)*(sj8));
if( IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(r21)*(x3414)*(x3415)))+(((r21)*(x3418)))+(((sj5)*(x3416)))+(((r20)*(x3419)))+(((cj7)*(r20)*(x3417))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x3415)*(x3418)))+(((r21)*(x3417)))+(((IkReal(-1.00000000000000))*(cj5)*(x3416)))+(((r20)*(x3414)))+(((cj7)*(r21)*(x3419))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((IkReal(-1.00000000000000))*(r21)*(x3414)*(x3415)))+(((r21)*(x3418)))+(((sj5)*(x3416)))+(((r20)*(x3419)))+(((cj7)*(r20)*(x3417)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x3415)*(x3418)))+(((r21)*(x3417)))+(((IkReal(-1.00000000000000))*(cj5)*(x3416)))+(((r20)*(x3414)))+(((cj7)*(r21)*(x3419)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3420=IKsin(j4);
IkReal x3421=IKcos(j4);
IkReal x3422=((IkReal(1.00000000000000))*(cj8));
IkReal x3423=((cj3)*(r01));
IkReal x3424=((cj3)*(r00));
IkReal x3425=((cj7)*(cj8));
IkReal x3426=((IkReal(1.00000000000000))*(cj5));
IkReal x3427=((IkReal(1.00000000000000))*(sj8));
IkReal x3428=((r11)*(sj3));
IkReal x3429=((r10)*(sj3));
IkReal x3430=((sj5)*(x3420));
IkReal x3431=((sj5)*(x3421));
IkReal x3432=((x3421)*(x3426));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3420)*(x3426)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3431)))+(((r20)*(sj8))));
evalcond[1]=((x3430)+(((IkReal(-1.00000000000000))*(x3432)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3422)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3427)*(x3429)))+(((IkReal(-1.00000000000000))*(x3424)*(x3427)))+(x3430)+(((IkReal(-1.00000000000000))*(x3432)))+(((IkReal(-1.00000000000000))*(x3422)*(x3423)))+(((IkReal(-1.00000000000000))*(x3422)*(x3428))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((x3424)*(x3425)))+(((x3425)*(x3429)))+(((IkReal(-1.00000000000000))*(cj7)*(x3427)*(x3428)))+(x3431)+(((cj5)*(x3420)))+(((IkReal(-1.00000000000000))*(cj7)*(x3423)*(x3427)))+(((cj3)*(r02)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3433=((IkReal(1.00000000000000))*(sj7));
IkReal x3434=((IkReal(1.00000000000000))*(cj3));
IkReal x3435=((cj7)*(r02));
IkReal x3436=((cj8)*(r00));
IkReal x3437=((cj3)*(sj7));
IkReal x3438=((cj8)*(npx));
IkReal x3439=((r01)*(sj3));
IkReal x3440=((cj7)*(sj8));
IkReal x3441=((r11)*(sj8));
IkReal x3442=((IkReal(1.00000000000000))*(cj7));
IkReal x3443=((sj7)*(sj8));
IkReal x3444=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x3438)*(x3442)))+(((npy)*(x3440)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3433))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3434)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3434)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x3439))));
evalcond[4]=((((r21)*(x3443)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3433)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x3443)))+(((IkReal(-1.00000000000000))*(x3433)*(x3438)))+(((cj7)*(npz))));
evalcond[6]=((((cj3)*(cj7)*(x3444)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3433)))+(((IkReal(-1.00000000000000))*(r11)*(x3434)*(x3440)))+(((IkReal(-1.00000000000000))*(sj3)*(x3436)*(x3442)))+(((r12)*(x3437)))+(((x3439)*(x3440))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj3)*(x3435)))+(((IkReal(-1.00000000000000))*(cj3)*(x3433)*(x3441)))+(((x3437)*(x3444)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3434)))+(((IkReal(-1.00000000000000))*(sj3)*(x3433)*(x3436)))+(((x3439)*(x3443))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x3433)*(x3441)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3442)))+(((IkReal(-1.00000000000000))*(x3434)*(x3435)))+(((sj3)*(sj7)*(x3444)))+(((x3436)*(x3437)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3433))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3445=((IkReal(1.00000000000000))*(sj5));
IkReal x3446=((r20)*(sj8));
IkReal x3447=((cj5)*(cj8));
IkReal x3448=((r11)*(sj3));
IkReal x3449=((cj3)*(r01));
IkReal x3450=((cj3)*(r00)*(sj8));
IkReal x3451=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x3445)*(x3448)))+(((IkReal(-1.00000000000000))*(cj8)*(x3445)*(x3449)))+(((IkReal(-1.00000000000000))*(r21)*(x3447)))+(((IkReal(-1.00000000000000))*(x3445)*(x3451)))+(((IkReal(-1.00000000000000))*(x3445)*(x3450)))+(((IkReal(-1.00000000000000))*(cj5)*(x3446))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3445)))+(((x3447)*(x3448)))+(((x3447)*(x3449)))+(((cj5)*(x3450)))+(((cj5)*(x3451)))+(((IkReal(-1.00000000000000))*(x3445)*(x3446))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x3445)*(x3448)))+(((IkReal(-1.00000000000000))*(cj8)*(x3445)*(x3449)))+(((IkReal(-1.00000000000000))*(r21)*(x3447)))+(((IkReal(-1.00000000000000))*(x3445)*(x3451)))+(((IkReal(-1.00000000000000))*(x3445)*(x3450)))+(((IkReal(-1.00000000000000))*(cj5)*(x3446)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3445)))+(((x3447)*(x3448)))+(((x3447)*(x3449)))+(((cj5)*(x3450)))+(((cj5)*(x3451)))+(((IkReal(-1.00000000000000))*(x3445)*(x3446)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3452=IKsin(j4);
IkReal x3453=IKcos(j4);
IkReal x3454=((IkReal(1.00000000000000))*(cj8));
IkReal x3455=((cj3)*(r01));
IkReal x3456=((cj3)*(r00));
IkReal x3457=((cj7)*(cj8));
IkReal x3458=((r11)*(sj3));
IkReal x3459=((IkReal(1.00000000000000))*(sj8));
IkReal x3460=((r10)*(sj3));
IkReal x3461=((sj5)*(x3453));
IkReal x3462=((cj5)*(x3452));
IkReal x3463=((cj5)*(x3453));
IkReal x3464=((sj5)*(x3452));
IkReal x3465=((x3462)+(x3461));
evalcond[0]=((((cj8)*(r21)))+(x3465)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3454)))+(x3464)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3463)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x3463)+(((IkReal(-1.00000000000000))*(x3454)*(x3455)))+(((IkReal(-1.00000000000000))*(x3454)*(x3458)))+(((IkReal(-1.00000000000000))*(x3459)*(x3460)))+(((IkReal(-1.00000000000000))*(x3464)))+(((IkReal(-1.00000000000000))*(x3456)*(x3459))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3455)*(x3459)))+(x3465)+(((x3457)*(x3460)))+(((IkReal(-1.00000000000000))*(cj7)*(x3458)*(x3459)))+(((cj3)*(r02)*(sj7)))+(((x3456)*(x3457))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3466=((cj8)*(sj5));
IkReal x3467=((sj5)*(sj8));
IkReal x3468=((r22)*(sj7));
IkReal x3469=((cj7)*(r20));
IkReal x3470=((cj5)*(cj8));
IkReal x3471=((cj7)*(r21));
IkReal x3472=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((x3467)*(x3471)))+(((IkReal(-1.00000000000000))*(x3466)*(x3469)))+(((r20)*(x3472)))+(((r21)*(x3470)))+(((IkReal(-1.00000000000000))*(sj5)*(x3468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x3471)*(x3472)))+(((cj5)*(x3468)))+(((x3469)*(x3470)))+(((r20)*(x3467)))+(((r21)*(x3466))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((x3467)*(x3471)))+(((IkReal(-1.00000000000000))*(x3466)*(x3469)))+(((r20)*(x3472)))+(((r21)*(x3470)))+(((IkReal(-1.00000000000000))*(sj5)*(x3468)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x3471)*(x3472)))+(((cj5)*(x3468)))+(((x3469)*(x3470)))+(((r20)*(x3467)))+(((r21)*(x3466)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3473=IKsin(j4);
IkReal x3474=IKcos(j4);
IkReal x3475=((IkReal(1.00000000000000))*(cj8));
IkReal x3476=((cj3)*(r01));
IkReal x3477=((cj3)*(r00));
IkReal x3478=((cj7)*(cj8));
IkReal x3479=((r11)*(sj3));
IkReal x3480=((IkReal(1.00000000000000))*(sj8));
IkReal x3481=((r10)*(sj3));
IkReal x3482=((sj5)*(x3474));
IkReal x3483=((cj5)*(x3473));
IkReal x3484=((cj5)*(x3474));
IkReal x3485=((sj5)*(x3473));
IkReal x3486=((x3483)+(x3482));
evalcond[0]=((((cj8)*(r21)))+(x3486)+(((r20)*(sj8))));
evalcond[1]=((x3485)+(((IkReal(-1.00000000000000))*(x3484)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3475)))+(((cj7)*(r21)*(sj8))));
evalcond[2]=((x3484)+(((IkReal(-1.00000000000000))*(x3485)))+(((IkReal(-1.00000000000000))*(x3475)*(x3476)))+(((IkReal(-1.00000000000000))*(x3475)*(x3479)))+(((IkReal(-1.00000000000000))*(x3477)*(x3480)))+(((IkReal(-1.00000000000000))*(x3480)*(x3481))));
evalcond[3]=((((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3476)*(x3480)))+(((x3477)*(x3478)))+(x3486)+(((cj3)*(r02)*(sj7)))+(((x3478)*(x3481)))+(((IkReal(-1.00000000000000))*(cj7)*(x3479)*(x3480))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3487=((cj3)*(cj8));
IkReal x3488=((IkReal(1.00000000000000))*(sj7));
IkReal x3489=((cj8)*(npx));
IkReal x3490=((cj8)*(sj3));
IkReal x3491=((npy)*(sj8));
IkReal x3492=((r02)*(sj3));
IkReal x3493=((IkReal(1.00000000000000))*(r11));
IkReal x3494=((cj3)*(r12));
IkReal x3495=((IkReal(1.00000000000000))*(cj7));
IkReal x3496=((sj3)*(sj8));
IkReal x3497=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3489)*(x3495)))+(((IkReal(-1.00000000000000))*(npz)*(x3488)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x3491))));
evalcond[4]=((IkReal(1.00000000000000))+(((r01)*(x3490)))+(((r00)*(x3496)))+(((IkReal(-1.00000000000000))*(r10)*(x3497)))+(((IkReal(-1.00000000000000))*(x3487)*(x3493))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x3491)))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x3488)*(x3489))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3490)*(x3493)))+(((IkReal(-1.00000000000000))*(r00)*(x3497)))+(((IkReal(-1.00000000000000))*(r10)*(x3496)))+(((IkReal(-1.00000000000000))*(r01)*(x3487))));
evalcond[7]=((((sj7)*(x3494)))+(((IkReal(-1.00000000000000))*(r00)*(x3490)*(x3495)))+(((IkReal(-1.00000000000000))*(x3488)*(x3492)))+(((cj7)*(r01)*(x3496)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3493)))+(((cj7)*(r10)*(x3487))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3494)*(x3495)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3488)))+(((r01)*(sj7)*(x3496)))+(((IkReal(-1.00000000000000))*(r00)*(x3488)*(x3490)))+(((r10)*(sj7)*(x3487)))+(((cj7)*(x3492))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3498=((cj3)*(cj5));
IkReal x3499=((r02)*(sj7));
IkReal x3500=((cj5)*(sj7));
IkReal x3501=((cj3)*(sj5));
IkReal x3502=((r11)*(sj3));
IkReal x3503=((r10)*(sj3));
IkReal x3504=((r12)*(sj3));
IkReal x3505=((sj5)*(sj7));
IkReal x3506=((cj7)*(cj8)*(sj5));
IkReal x3507=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x3508=((cj5)*(cj7)*(cj8));
if( IKabs(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((x3500)*(x3504)))+(((x3498)*(x3499)))+(((IkReal(-1.00000000000000))*(r20)*(x3506)))+(((cj7)*(cj8)*(r00)*(x3498)))+(((IkReal(-1.00000000000000))*(r01)*(x3498)*(x3507)))+(((IkReal(-1.00000000000000))*(cj5)*(x3502)*(x3507)))+(((x3503)*(x3508)))+(((IkReal(-1.00000000000000))*(r22)*(x3505))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((cj7)*(cj8)*(r00)*(x3501)))+(((r20)*(x3508)))+(((IkReal(-1.00000000000000))*(r01)*(x3501)*(x3507)))+(((x3499)*(x3501)))+(((IkReal(-1.00000000000000))*(sj5)*(x3502)*(x3507)))+(((r22)*(x3500)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3507)))+(((x3503)*(x3506)))+(((x3504)*(x3505))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((x3500)*(x3504)))+(((x3498)*(x3499)))+(((IkReal(-1.00000000000000))*(r20)*(x3506)))+(((cj7)*(cj8)*(r00)*(x3498)))+(((IkReal(-1.00000000000000))*(r01)*(x3498)*(x3507)))+(((IkReal(-1.00000000000000))*(cj5)*(x3502)*(x3507)))+(((x3503)*(x3508)))+(((IkReal(-1.00000000000000))*(r22)*(x3505)))))), ((gconst53)*(((((cj7)*(cj8)*(r00)*(x3501)))+(((r20)*(x3508)))+(((IkReal(-1.00000000000000))*(r01)*(x3501)*(x3507)))+(((x3499)*(x3501)))+(((IkReal(-1.00000000000000))*(sj5)*(x3502)*(x3507)))+(((r22)*(x3500)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3507)))+(((x3503)*(x3506)))+(((x3504)*(x3505)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3509=IKcos(j4);
IkReal x3510=IKsin(j4);
IkReal x3511=((IkReal(1.00000000000000))*(cj7));
IkReal x3512=((cj8)*(r20));
IkReal x3513=((cj3)*(r02));
IkReal x3514=((IkReal(1.00000000000000))*(sj7));
IkReal x3515=((sj3)*(sj7));
IkReal x3516=((r21)*(sj8));
IkReal x3517=((cj8)*(r10));
IkReal x3518=((sj5)*(x3509));
IkReal x3519=((cj5)*(x3510));
IkReal x3520=((r11)*(sj3)*(sj8));
IkReal x3521=((cj3)*(cj8)*(r00));
IkReal x3522=((cj5)*(x3509));
IkReal x3523=((cj3)*(r01)*(sj8));
IkReal x3524=((sj5)*(x3510));
IkReal x3525=((x3519)+(x3518));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3522)))+(((cj7)*(x3516)))+(((IkReal(-1.00000000000000))*(x3511)*(x3512)))+(x3524)+(((IkReal(-1.00000000000000))*(r22)*(x3514))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3512)*(x3514)))+(x3525)+(((sj7)*(x3516)))+(((cj7)*(r22))));
evalcond[2]=((((cj7)*(x3521)))+(x3525)+(((IkReal(-1.00000000000000))*(x3511)*(x3523)))+(((IkReal(-1.00000000000000))*(x3511)*(x3520)))+(((sj7)*(x3513)))+(((r12)*(x3515)))+(((cj7)*(sj3)*(x3517))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3524)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3511)))+(((IkReal(-1.00000000000000))*(x3511)*(x3513)))+(x3522)+(((x3515)*(x3517)))+(((sj7)*(x3521)))+(((IkReal(-1.00000000000000))*(x3514)*(x3520)))+(((IkReal(-1.00000000000000))*(x3514)*(x3523))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3526=((r21)*(sj8));
IkReal x3527=((sj5)*(sj7));
IkReal x3528=((cj5)*(sj7));
IkReal x3529=((cj5)*(cj7));
IkReal x3530=((cj8)*(r20));
IkReal x3531=((cj7)*(sj5));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3530)*(x3531)))+(((x3526)*(x3528)))+(((r22)*(x3529)))+(((IkReal(-1.00000000000000))*(r22)*(x3527)))+(((IkReal(-1.00000000000000))*(x3528)*(x3530)))+(((x3526)*(x3531))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((x3526)*(x3527)))+(((r22)*(x3531)))+(((IkReal(-1.00000000000000))*(x3526)*(x3529)))+(((r22)*(x3528)))+(((x3529)*(x3530)))+(((IkReal(-1.00000000000000))*(x3527)*(x3530))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x3530)*(x3531)))+(((x3526)*(x3528)))+(((r22)*(x3529)))+(((IkReal(-1.00000000000000))*(r22)*(x3527)))+(((IkReal(-1.00000000000000))*(x3528)*(x3530)))+(((x3526)*(x3531)))))), ((gconst52)*(((((x3526)*(x3527)))+(((r22)*(x3531)))+(((IkReal(-1.00000000000000))*(x3526)*(x3529)))+(((r22)*(x3528)))+(((x3529)*(x3530)))+(((IkReal(-1.00000000000000))*(x3527)*(x3530)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3532=IKcos(j4);
IkReal x3533=IKsin(j4);
IkReal x3534=((IkReal(1.00000000000000))*(cj7));
IkReal x3535=((cj8)*(r20));
IkReal x3536=((cj3)*(r02));
IkReal x3537=((IkReal(1.00000000000000))*(sj7));
IkReal x3538=((sj3)*(sj7));
IkReal x3539=((r21)*(sj8));
IkReal x3540=((cj8)*(r10));
IkReal x3541=((sj5)*(x3532));
IkReal x3542=((cj5)*(x3533));
IkReal x3543=((r11)*(sj3)*(sj8));
IkReal x3544=((cj3)*(cj8)*(r00));
IkReal x3545=((cj5)*(x3532));
IkReal x3546=((cj3)*(r01)*(sj8));
IkReal x3547=((sj5)*(x3533));
IkReal x3548=((x3541)+(x3542));
evalcond[0]=((x3547)+(((cj7)*(x3539)))+(((IkReal(-1.00000000000000))*(x3545)))+(((IkReal(-1.00000000000000))*(r22)*(x3537)))+(((IkReal(-1.00000000000000))*(x3534)*(x3535))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3535)*(x3537)))+(((sj7)*(x3539)))+(x3548)+(((cj7)*(r22))));
evalcond[2]=((((r12)*(x3538)))+(((sj7)*(x3536)))+(x3548)+(((IkReal(-1.00000000000000))*(x3534)*(x3546)))+(((IkReal(-1.00000000000000))*(x3534)*(x3543)))+(((cj7)*(x3544)))+(((cj7)*(sj3)*(x3540))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3534)))+(((sj7)*(x3544)))+(x3545)+(((x3538)*(x3540)))+(((IkReal(-1.00000000000000))*(x3547)))+(((IkReal(-1.00000000000000))*(x3537)*(x3546)))+(((IkReal(-1.00000000000000))*(x3537)*(x3543)))+(((IkReal(-1.00000000000000))*(x3534)*(x3536))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3549=((cj3)*(cj8));
IkReal x3550=((IkReal(1.00000000000000))*(sj7));
IkReal x3551=((cj8)*(npx));
IkReal x3552=((cj8)*(sj3));
IkReal x3553=((npy)*(sj8));
IkReal x3554=((r02)*(sj3));
IkReal x3555=((IkReal(1.00000000000000))*(r11));
IkReal x3556=((cj3)*(r12));
IkReal x3557=((IkReal(1.00000000000000))*(cj7));
IkReal x3558=((sj3)*(sj8));
IkReal x3559=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3550)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x3553)))+(((IkReal(-1.00000000000000))*(x3551)*(x3557))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r01)*(x3552)))+(((IkReal(-1.00000000000000))*(r10)*(x3559)))+(((r00)*(x3558)))+(((IkReal(-1.00000000000000))*(x3549)*(x3555))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((sj7)*(x3553)))+(((IkReal(-1.00000000000000))*(x3550)*(x3551)))+(((cj7)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3559)))+(((IkReal(-1.00000000000000))*(r10)*(x3558)))+(((IkReal(-1.00000000000000))*(x3552)*(x3555)))+(((IkReal(-1.00000000000000))*(r01)*(x3549))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3555)))+(((cj7)*(r10)*(x3549)))+(((IkReal(-1.00000000000000))*(r00)*(x3552)*(x3557)))+(((cj7)*(r01)*(x3558)))+(((sj7)*(x3556)))+(((IkReal(-1.00000000000000))*(x3550)*(x3554))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3550)))+(((IkReal(-1.00000000000000))*(r00)*(x3550)*(x3552)))+(((r01)*(sj7)*(x3558)))+(((cj7)*(x3554)))+(((r10)*(sj7)*(x3549)))+(((IkReal(-1.00000000000000))*(x3556)*(x3557))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((cj5)*(cj5))+((sj5)*(sj5))));
dummyeval[0]=(((cj5)*(cj5))+((sj5)*(sj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3560=((cj3)*(cj5));
IkReal x3561=((r02)*(sj7));
IkReal x3562=((cj8)*(r00));
IkReal x3563=((cj5)*(sj7));
IkReal x3564=((cj5)*(sj3));
IkReal x3565=((sj3)*(sj5));
IkReal x3566=((IkReal(1.00000000000000))*(sj5));
IkReal x3567=((cj3)*(cj7)*(sj5));
IkReal x3568=((IkReal(1.00000000000000))*(cj7)*(sj8));
IkReal x3569=((cj7)*(cj8)*(r10));
IkReal x3570=((cj7)*(cj8)*(r20));
if( IKabs(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3566)))+(((IkReal(-1.00000000000000))*(x3566)*(x3570)))+(((cj7)*(x3560)*(x3562)))+(((IkReal(-1.00000000000000))*(r01)*(x3560)*(x3568)))+(((r12)*(sj3)*(x3563)))+(((x3564)*(x3569)))+(((IkReal(-1.00000000000000))*(r11)*(x3564)*(x3568)))+(((x3560)*(x3561))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x3562)*(x3567)))+(((x3565)*(x3569)))+(((cj5)*(x3570)))+(((cj3)*(sj5)*(x3561)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3566)))+(((r12)*(sj7)*(x3565)))+(((IkReal(-1.00000000000000))*(r11)*(x3565)*(x3568)))+(((r22)*(x3563)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3568))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x3566)))+(((IkReal(-1.00000000000000))*(x3566)*(x3570)))+(((cj7)*(x3560)*(x3562)))+(((IkReal(-1.00000000000000))*(r01)*(x3560)*(x3568)))+(((r12)*(sj3)*(x3563)))+(((x3564)*(x3569)))+(((IkReal(-1.00000000000000))*(r11)*(x3564)*(x3568)))+(((x3560)*(x3561)))))), ((gconst55)*(((((x3562)*(x3567)))+(((x3565)*(x3569)))+(((cj5)*(x3570)))+(((cj3)*(sj5)*(x3561)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3566)))+(((r12)*(sj7)*(x3565)))+(((IkReal(-1.00000000000000))*(r11)*(x3565)*(x3568)))+(((r22)*(x3563)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3568)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3571=IKcos(j4);
IkReal x3572=IKsin(j4);
IkReal x3573=((IkReal(1.00000000000000))*(cj7));
IkReal x3574=((cj8)*(r20));
IkReal x3575=((cj3)*(r02));
IkReal x3576=((IkReal(1.00000000000000))*(sj7));
IkReal x3577=((sj3)*(sj7));
IkReal x3578=((r21)*(sj8));
IkReal x3579=((IkReal(1.00000000000000))*(cj5));
IkReal x3580=((cj8)*(r10));
IkReal x3581=((sj5)*(x3572));
IkReal x3582=((sj5)*(x3571));
IkReal x3583=((r11)*(sj3)*(sj8));
IkReal x3584=((cj3)*(cj8)*(r00));
IkReal x3585=((cj3)*(r01)*(sj8));
IkReal x3586=((x3571)*(x3579));
evalcond[0]=((((cj7)*(x3578)))+(x3581)+(((IkReal(-1.00000000000000))*(x3573)*(x3574)))+(((IkReal(-1.00000000000000))*(r22)*(x3576)))+(((IkReal(-1.00000000000000))*(x3586))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3574)*(x3576)))+(((IkReal(-1.00000000000000))*(x3572)*(x3579)))+(((sj7)*(x3578)))+(((IkReal(-1.00000000000000))*(x3582)))+(((cj7)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3573)*(x3583)))+(((IkReal(-1.00000000000000))*(x3573)*(x3585)))+(((cj5)*(x3572)))+(((cj7)*(sj3)*(x3580)))+(x3582)+(((r12)*(x3577)))+(((sj7)*(x3575)))+(((cj7)*(x3584))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3576)*(x3585)))+(((IkReal(-1.00000000000000))*(x3576)*(x3583)))+(((sj7)*(x3584)))+(x3581)+(((IkReal(-1.00000000000000))*(x3573)*(x3575)))+(((x3577)*(x3580)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3573)))+(((IkReal(-1.00000000000000))*(x3586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3587=((cj7)*(sj5));
IkReal x3588=((r21)*(sj8));
IkReal x3589=((cj5)*(cj7));
IkReal x3590=((cj8)*(r20));
IkReal x3591=((IkReal(1.00000000000000))*(sj7));
IkReal x3592=((sj5)*(sj7));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x3587)*(x3588)))+(((x3587)*(x3590)))+(((cj5)*(sj7)*(x3588)))+(((r22)*(x3592)))+(((IkReal(-1.00000000000000))*(cj5)*(x3590)*(x3591)))+(((r22)*(x3589))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(sj5)*(x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(x3589)*(x3590)))+(((x3588)*(x3589)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x3591)))+(((x3588)*(x3592)))+(((r22)*(x3587))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(x3587)*(x3588)))+(((x3587)*(x3590)))+(((cj5)*(sj7)*(x3588)))+(((r22)*(x3592)))+(((IkReal(-1.00000000000000))*(cj5)*(x3590)*(x3591)))+(((r22)*(x3589)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(sj5)*(x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(x3589)*(x3590)))+(((x3588)*(x3589)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x3591)))+(((x3588)*(x3592)))+(((r22)*(x3587)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3593=IKcos(j4);
IkReal x3594=IKsin(j4);
IkReal x3595=((IkReal(1.00000000000000))*(cj7));
IkReal x3596=((cj8)*(r20));
IkReal x3597=((cj3)*(r02));
IkReal x3598=((IkReal(1.00000000000000))*(sj7));
IkReal x3599=((sj3)*(sj7));
IkReal x3600=((r21)*(sj8));
IkReal x3601=((IkReal(1.00000000000000))*(cj5));
IkReal x3602=((cj8)*(r10));
IkReal x3603=((sj5)*(x3594));
IkReal x3604=((sj5)*(x3593));
IkReal x3605=((r11)*(sj3)*(sj8));
IkReal x3606=((cj3)*(cj8)*(r00));
IkReal x3607=((cj3)*(r01)*(sj8));
IkReal x3608=((x3593)*(x3601));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3598)))+(x3603)+(((IkReal(-1.00000000000000))*(x3595)*(x3596)))+(((IkReal(-1.00000000000000))*(x3608)))+(((cj7)*(x3600))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3594)*(x3601)))+(((IkReal(-1.00000000000000))*(x3604)))+(((IkReal(-1.00000000000000))*(x3596)*(x3598)))+(((cj7)*(r22)))+(((sj7)*(x3600))));
evalcond[2]=((((cj5)*(x3594)))+(((r12)*(x3599)))+(((cj7)*(sj3)*(x3602)))+(x3604)+(((IkReal(-1.00000000000000))*(x3595)*(x3607)))+(((IkReal(-1.00000000000000))*(x3595)*(x3605)))+(((cj7)*(x3606)))+(((sj7)*(x3597))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3598)*(x3605)))+(((IkReal(-1.00000000000000))*(x3598)*(x3607)))+(((x3599)*(x3602)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3595)))+(x3603)+(((IkReal(-1.00000000000000))*(x3595)*(x3597)))+(((IkReal(-1.00000000000000))*(x3608)))+(((sj7)*(x3606))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3609=((r21)*(sj8));
IkReal x3610=((IkReal(1.00000000000000))*(r22));
IkReal x3611=((cj5)*(sj7));
IkReal x3612=((cj6)*(cj7));
IkReal x3613=((sj5)*(sj7));
IkReal x3614=((cj5)*(cj8)*(r20));
IkReal x3615=((IkReal(1.00000000000000))*(x3612));
IkReal x3616=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((x3612)*(x3616)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3610)))+(((IkReal(-1.00000000000000))*(sj5)*(x3609)*(x3615)))+(((cj6)*(r22)*(x3613)))+(((cj8)*(r20)*(x3611)))+(((IkReal(-1.00000000000000))*(x3609)*(x3611))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(x3610)*(x3611)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3610)))+(((cj5)*(x3609)*(x3612)))+(((IkReal(-1.00000000000000))*(x3614)*(x3615)))+(((cj8)*(r20)*(x3613)))+(((IkReal(-1.00000000000000))*(x3609)*(x3613))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((x3612)*(x3616)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3610)))+(((IkReal(-1.00000000000000))*(sj5)*(x3609)*(x3615)))+(((cj6)*(r22)*(x3613)))+(((cj8)*(r20)*(x3611)))+(((IkReal(-1.00000000000000))*(x3609)*(x3611)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(x3610)*(x3611)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3610)))+(((cj5)*(x3609)*(x3612)))+(((IkReal(-1.00000000000000))*(x3614)*(x3615)))+(((cj8)*(r20)*(x3613)))+(((IkReal(-1.00000000000000))*(x3609)*(x3613)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3617=IKsin(j4);
IkReal x3618=IKcos(j4);
IkReal x3619=((IkReal(1.00000000000000))*(cj8));
IkReal x3620=((cj3)*(r01));
IkReal x3621=((IkReal(1.00000000000000))*(sj8));
IkReal x3622=((r11)*(sj3));
IkReal x3623=((cj3)*(r00));
IkReal x3624=((IkReal(1.00000000000000))*(sj6));
IkReal x3625=((IkReal(1.00000000000000))*(cj7));
IkReal x3626=((cj3)*(r02));
IkReal x3627=((sj3)*(sj7));
IkReal x3628=((cj7)*(cj8));
IkReal x3629=((r21)*(sj8));
IkReal x3630=((r10)*(sj3));
IkReal x3631=((sj5)*(x3618));
IkReal x3632=((cj5)*(x3618));
IkReal x3633=((cj6)*(x3617));
IkReal x3634=((cj5)*(x3617));
IkReal x3635=((sj5)*(x3617));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3624)*(x3631)))+(((IkReal(-1.00000000000000))*(x3624)*(x3634)))+(((r20)*(sj8))));
evalcond[1]=((((cj7)*(x3629)))+(x3635)+(((IkReal(-1.00000000000000))*(x3632)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3619))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3619)))+(((sj7)*(x3629)))+(((cj6)*(x3631)))+(((cj7)*(r22)))+(((cj5)*(x3633))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3621)*(x3623)))+(((IkReal(-1.00000000000000))*(x3621)*(x3630)))+(((IkReal(-1.00000000000000))*(x3619)*(x3620)))+(((IkReal(-1.00000000000000))*(x3619)*(x3622)))+(((IkReal(-1.00000000000000))*(x3624)*(x3632)))+(((sj6)*(x3635))));
evalcond[4]=((((sj7)*(x3626)))+(x3634)+(x3631)+(((x3628)*(x3630)))+(((IkReal(-1.00000000000000))*(cj7)*(x3620)*(x3621)))+(((r12)*(x3627)))+(((IkReal(-1.00000000000000))*(cj7)*(x3621)*(x3622)))+(((x3623)*(x3628))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3625)*(x3626)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3625)))+(((cj8)*(r10)*(x3627)))+(((IkReal(-1.00000000000000))*(sj7)*(x3621)*(x3622)))+(((IkReal(-1.00000000000000))*(sj7)*(x3620)*(x3621)))+(((cj6)*(x3632)))+(((IkReal(-1.00000000000000))*(sj5)*(x3633)))+(((cj8)*(sj7)*(x3623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3636=((sj5)*(sj6));
IkReal x3637=((r22)*(sj7));
IkReal x3638=((r20)*(sj8));
IkReal x3639=((cj8)*(r21));
IkReal x3640=((cj5)*(sj6));
IkReal x3641=((cj7)*(cj8)*(r20));
IkReal x3642=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((x3636)*(x3637)))+(((x3636)*(x3641)))+(((IkReal(-1.00000000000000))*(x3636)*(x3642)))+(((cj5)*(x3638)))+(((cj5)*(x3639))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj5)*(x3638)))+(((sj5)*(x3639)))+(((x3640)*(x3642)))+(((IkReal(-1.00000000000000))*(x3637)*(x3640)))+(((IkReal(-1.00000000000000))*(x3640)*(x3641))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((x3636)*(x3637)))+(((x3636)*(x3641)))+(((IkReal(-1.00000000000000))*(x3636)*(x3642)))+(((cj5)*(x3638)))+(((cj5)*(x3639)))))), ((gconst46)*(((((sj5)*(x3638)))+(((sj5)*(x3639)))+(((x3640)*(x3642)))+(((IkReal(-1.00000000000000))*(x3637)*(x3640)))+(((IkReal(-1.00000000000000))*(x3640)*(x3641)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3643=IKsin(j4);
IkReal x3644=IKcos(j4);
IkReal x3645=((IkReal(1.00000000000000))*(cj8));
IkReal x3646=((cj3)*(r01));
IkReal x3647=((IkReal(1.00000000000000))*(sj8));
IkReal x3648=((r11)*(sj3));
IkReal x3649=((cj3)*(r00));
IkReal x3650=((IkReal(1.00000000000000))*(sj6));
IkReal x3651=((IkReal(1.00000000000000))*(cj7));
IkReal x3652=((cj3)*(r02));
IkReal x3653=((sj3)*(sj7));
IkReal x3654=((cj7)*(cj8));
IkReal x3655=((r21)*(sj8));
IkReal x3656=((r10)*(sj3));
IkReal x3657=((sj5)*(x3644));
IkReal x3658=((cj5)*(x3644));
IkReal x3659=((cj6)*(x3643));
IkReal x3660=((cj5)*(x3643));
IkReal x3661=((sj5)*(x3643));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3650)*(x3660)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3650)*(x3657)))+(((r20)*(sj8))));
evalcond[1]=((x3661)+(((IkReal(-1.00000000000000))*(x3658)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3645)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x3655))));
evalcond[2]=((((cj6)*(x3657)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3645)))+(((sj7)*(x3655)))+(((cj5)*(x3659)))+(((cj7)*(r22))));
evalcond[3]=((((sj6)*(x3661)))+(((IkReal(-1.00000000000000))*(x3645)*(x3648)))+(((IkReal(-1.00000000000000))*(x3645)*(x3646)))+(((IkReal(-1.00000000000000))*(x3650)*(x3658)))+(((IkReal(-1.00000000000000))*(x3647)*(x3649)))+(((IkReal(-1.00000000000000))*(x3647)*(x3656))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x3647)*(x3648)))+(((r12)*(x3653)))+(((x3649)*(x3654)))+(x3660)+(x3657)+(((x3654)*(x3656)))+(((sj7)*(x3652)))+(((IkReal(-1.00000000000000))*(cj7)*(x3646)*(x3647))));
evalcond[5]=((((cj6)*(x3658)))+(((IkReal(-1.00000000000000))*(sj7)*(x3646)*(x3647)))+(((cj8)*(sj7)*(x3649)))+(((cj8)*(r10)*(x3653)))+(((IkReal(-1.00000000000000))*(sj5)*(x3659)))+(((IkReal(-1.00000000000000))*(x3651)*(x3652)))+(((IkReal(-1.00000000000000))*(sj7)*(x3647)*(x3648)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3651))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - NextageOpen (53b6c6feea19292c552a263dfc45aa26)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
