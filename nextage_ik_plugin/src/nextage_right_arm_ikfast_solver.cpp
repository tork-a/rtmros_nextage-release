/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-08-19 09:49:45.541919
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "nextage_ik_plugin/ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.258820826967441))*(x9));
x13=((IkReal(0.0900000000000000))*(x4));
x14=((IkReal(0.258820826967441))*(x11));
x15=((IkReal(1.00000000000000))*(x8));
x16=((IkReal(1.00000000000000))*(x5));
x17=((IkReal(0.965925348838040))*(x11));
x18=((IkReal(0.0470000000000000))*(x3));
x19=((IkReal(0.965925348838040))*(x9));
x20=((IkReal(1.00000000000000))*(x9));
x21=((IkReal(0.00776462480902323))*(x2));
x22=((IkReal(0.965925348838040))*(x8));
x23=((IkReal(1.00000000000000))*(x2));
x24=((IkReal(0.258820826967441))*(x8));
x25=((IkReal(1.00000000000000))*(x7));
x26=((IkReal(1.00000000000000))*(x3));
x27=((IkReal(0.0900000000000000))*(x6));
x28=((IkReal(0.965925348838040))*(x10));
x29=((IkReal(0.258820826967441))*(x10));
x30=((IkReal(1.00000000000000))*(x6));
x31=((x0)*(x5));
x32=((x1)*(x3));
x33=((x6)*(x9));
x34=((x4)*(x7));
x35=((x0)*(x4));
x36=((IkReal(-0.0470000000000000))*(x6));
x37=((x3)*(x4));
x38=((x2)*(x4));
x39=((x1)*(x7));
x40=((x1)*(x2));
x41=((x5)*(x7));
x42=((x16)*(x7));
x43=((x25)*(x6));
x44=((IkReal(0.0470000000000000))*(x40));
x45=((x23)*(x35));
x46=((x23)*(x34));
x47=((((IkReal(-1.00000000000000))*(x1)*(x26)))+(x38));
x48=((((x1)*(x18)))+(((IkReal(-0.0470000000000000))*(x38))));
x49=((((IkReal(-0.0900000000000000))*(x32)))+(((x13)*(x2))));
x50=((((x1)*(x23)))+(((x26)*(x4))));
x51=((IkReal(-1.00000000000000))*(x50));
x52=((((x18)*(x4)))+(x44));
x53=((((IkReal(0.0900000000000000))*(x40)))+(((x13)*(x3))));
x54=((((IkReal(-1.00000000000000))*(x45)))+(((x0)*(x32))));
x55=((((IkReal(-1.00000000000000))*(x46)))+(((x32)*(x7))));
x56=((x52)*(x6));
x57=((x5)*(x51));
x58=((x51)*(x6));
x59=((((IkReal(-1.00000000000000))*(x0)*(x1)*(x26)))+(x45));
x60=((((IkReal(-1.00000000000000))*(x25)*(x32)))+(x46));
x61=((((IkReal(-1.00000000000000))*(x0)*(x1)*(x23)))+(((IkReal(-1.00000000000000))*(x26)*(x35))));
x62=((((IkReal(-1.00000000000000))*(x25)*(x37)))+(((IkReal(-1.00000000000000))*(x23)*(x39))));
x63=((((IkReal(0.0470000000000000))*(x2)*(x39)))+(((x18)*(x34))));
x64=((((IkReal(-0.0900000000000000))*(x2)*(x39)))+(((IkReal(-1.00000000000000))*(x13)*(x3)*(x7))));
x65=((x55)*(x6));
x66=((x54)*(x6));
x67=((x10)*(x5)*(x50));
x68=((x5)*(x59));
x69=((x31)+(x65));
x70=((((x0)*(x6)))+(((x5)*(x60))));
x71=((((IkReal(-1.00000000000000))*(x0)*(x30)))+(((IkReal(-1.00000000000000))*(x16)*(x60))));
x72=((((IkReal(-1.00000000000000))*(x15)*(x47)))+(((IkReal(-1.00000000000000))*(x20)*(x50)*(x6))));
x73=((x11)*(x72));
x74=((((x20)*(((((IkReal(-1.00000000000000))*(x42)))+(((x30)*(x54)))))))+(((IkReal(-1.00000000000000))*(x15)*(x61))));
x75=((((x20)*(((((x0)*(x16)))+(((x30)*(x55)))))))+(((IkReal(-1.00000000000000))*(x15)*(x62))));
x76=((x10)*(x75));
eerot[0]=((((x8)*(((((IkReal(-1.00000000000000))*(x42)))+(x66)))))+(((x61)*(x9))));
eerot[1]=((((x11)*(x74)))+(((x10)*(((((IkReal(-1.00000000000000))*(x43)))+(x68))))));
eerot[2]=((((x10)*(x74)))+(((x11)*(((x43)+(((IkReal(-1.00000000000000))*(x16)*(x59))))))));
IkReal x77=((x0)*(x40));
eetrans[0]=((((IkReal(-0.235000000000000))*(x77)))+(((IkReal(-0.235000000000000))*(x3)*(x35)))+(((IkReal(-0.250000000000000))*(x35)))+(((x8)*(((((x36)*(x54)))+(((IkReal(0.0470000000000000))*(x41)))))))+(((IkReal(0.0950000000000000))*(x7)))+(((x9)*(((((IkReal(0.0900000000000000))*(x41)))+(((IkReal(-1.00000000000000))*(x27)*(x54)))))))+(((IkReal(0.0300000000000000))*(x2)*(x35)))+(((x8)*(((((IkReal(-1.00000000000000))*(x0)*(x13)*(x3)))+(((IkReal(-0.0900000000000000))*(x77)))))))+(((IkReal(-0.0300000000000000))*(x0)*(x32)))+(((x9)*(((((x18)*(x35)))+(((x0)*(x44))))))));
eerot[3]=((((IkReal(-1.00000000000000))*(x12)*(x47)))+(((x19)*(x62)))+(((x22)*(x69)))+(((IkReal(-1.00000000000000))*(x24)*(x58))));
eerot[4]=((((x17)*(x75)))+(((x28)*(x70)))+(((IkReal(-1.00000000000000))*(x29)*(x5)*(x50)))+(((IkReal(-1.00000000000000))*(x14)*(x72))));
eerot[5]=((((x17)*(x71)))+(((x28)*(x75)))+(((IkReal(-1.00000000000000))*(x14)*(x57)))+(((IkReal(-1.00000000000000))*(x29)*(x72))));
IkReal x78=((IkReal(1.00000000000000))*(x24));
IkReal x79=((IkReal(1.00000000000000))*(x12));
eetrans[1]=((IkReal(-0.145000000000000))+(((IkReal(-0.0608228943373486))*(x38)))+(((IkReal(-0.226992456976939))*(x3)*(x34)))+(((IkReal(0.0647052067418602))*(x1)))+(((IkReal(-0.226992456976939))*(x2)*(x39)))+(((IkReal(-1.00000000000000))*(x53)*(x6)*(x79)))+(((x22)*(((((x36)*(x55)))+(((IkReal(-0.0470000000000000))*(x31)))))))+(((IkReal(-1.00000000000000))*(x1)*(x21)))+(((IkReal(-0.0289777604651412))*(x32)*(x7)))+(((x19)*(x63)))+(((IkReal(-0.241481337209510))*(x34)))+(((x19)*(((((IkReal(-1.00000000000000))*(x27)*(x55)))+(((IkReal(-0.0900000000000000))*(x31)))))))+(((IkReal(-1.00000000000000))*(x49)*(x78)))+(((IkReal(-1.00000000000000))*(x48)*(x79)))+(((IkReal(0.0608228943373486))*(x32)))+(((IkReal(0.0289777604651412))*(x2)*(x34)))+(((IkReal(-0.0917629081396138))*(x0)))+(((IkReal(-1.00000000000000))*(x56)*(x78)))+(((IkReal(-0.00776462480902323))*(x37)))+(((x22)*(x64))));
eerot[6]=((((x12)*(x62)))+(((x19)*(x47)))+(((x24)*(x69)))+(((x22)*(x58))));
eerot[7]=((((x14)*(x75)))+(((x17)*(x72)))+(((x28)*(x5)*(x50)))+(((x29)*(x70))));
eerot[8]=((((x14)*(x71)))+(((x17)*(x57)))+(((x28)*(x72)))+(((x29)*(x75))));
eetrans[2]=((IkReal(0.370300000000000))+(((x12)*(x63)))+(((IkReal(-0.226992456976939))*(x32)))+(((IkReal(0.0289777604651412))*(x37)))+(((x19)*(x48)))+(((x24)*(((((IkReal(-0.0470000000000000))*(x65)))+(((IkReal(-0.0470000000000000))*(x31)))))))+(((IkReal(-0.00776462480902323))*(x32)*(x7)))+(((IkReal(0.0289777604651412))*(x40)))+(((IkReal(0.226992456976939))*(x38)))+(((x19)*(x53)*(x6)))+(((x22)*(x49)))+(((x21)*(x34)))+(((x24)*(x64)))+(((IkReal(-0.0245879785619069))*(x0)))+(((IkReal(-0.241481337209510))*(x1)))+(((IkReal(-0.0608228943373486))*(x2)*(x39)))+(((x12)*(((((IkReal(-0.0900000000000000))*(x65)))+(((IkReal(-0.0900000000000000))*(x31)))))))+(((IkReal(-0.0608228943373486))*(x3)*(x34)))+(((x22)*(x56)))+(((IkReal(-0.0647052067418602))*(x34))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13,_ij14[2], _nj14;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; j12=numeric_limits<IkReal>::quiet_NaN(); _ij12[0] = -1; _ij12[1] = -1; _nj12 = -1; j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((px)+(((IkReal(0.0470000000000000))*(r00))));
new_r10=((((IkReal(-0.965925348838040))*(r12)))+(((IkReal(-0.258820826967441))*(r22))));
new_r11=((((IkReal(0.258820826967441))*(r21)))+(((IkReal(0.965925348838040))*(r11))));
new_r12=((((IkReal(0.258820826967441))*(r20)))+(((IkReal(0.965925348838040))*(r10))));
new_py=((IkReal(0.0442178233554725))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(0.0453984913953879))*(r10)))+(((IkReal(0.258820826967441))*(pz)))+(((IkReal(0.0121645788674697))*(r20))));
new_r20=((((IkReal(0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.965925348838040))*(r21)))+(((IkReal(-0.258820826967441))*(r11))));
new_r22=((((IkReal(0.965925348838040))*(r20)))+(((IkReal(-0.258820826967441))*(r10))));
new_pz=((IkReal(-0.395211176585005))+(((IkReal(0.965925348838040))*(pz)))+(((IkReal(-0.0121645788674697))*(r10)))+(((IkReal(0.0453984913953879))*(r20)))+(((IkReal(-0.258820826967441))*(py))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x80=((IkReal(0.650000000000000))*(npx));
IkReal x81=((IkReal(0.0600000000000000))*(npz));
IkReal x82=((IkReal(1.00000000000000))*(pp));
IkReal x83=((IkReal(0.0600000000000000))*(npy));
IkReal x84=((IkReal(0.0950000000000000))*(r22));
IkReal x85=((IkReal(0.120000000000000))*(npx));
IkReal x86=((IkReal(0.0950000000000000))*(r21));
IkReal x87=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x88=((IkReal(0.190000000000000))*(r20));
IkReal x89=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x90=((IkReal(0.940000000000000))*(npz));
IkReal x91=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x92=((IkReal(0.180000000000000))*(r21));
IkReal x93=((IkReal(0.360000000000000))*(r20));
IkReal x94=((IkReal(0.380000000000000))*(r21));
IkReal x95=((IkReal(0.290000000000000))*(npx));
IkReal x96=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x83))));
IkReal x97=((IkReal(0.580000000000000))*(npy));
IkReal x98=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x83))));
IkReal x99=((rxp0_2)+(((IkReal(-1.00000000000000))*(x84))));
IkReal x100=((IkReal(-1.30000000000000))*(npy));
IkReal x101=((IkReal(-0.0950000000000000))*(r21));
IkReal x102=((IkReal(-0.00570000000000000))+(x83));
IkReal x103=((rxp0_2)+(x84));
IkReal x104=((x84)+(((IkReal(-1.00000000000000))*(x87))));
IkReal x105=((IkReal(0.00570000000000000))+(x83));
IkReal x106=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x107=((IkReal(-0.0350000000000000))+(x80));
IkReal x108=((IkReal(0.0496000000000000))+(x81));
IkReal x109=((x82)+(x81));
IkReal x110=((((IkReal(-1.00000000000000))*(x84)))+(((IkReal(-1.00000000000000))*(x87))));
IkReal x111=((x85)+(x90));
IkReal x112=((x91)+(x92));
op[0]=((((IkReal(-1.00000000000000))*(x109)))+(x107));
op[1]=x102;
op[2]=x100;
op[3]=x85;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x109)))+(((IkReal(-1.00000000000000))*(x80))));
op[5]=x96;
op[6]=x110;
op[7]=x86;
op[8]=x89;
op[9]=x88;
op[10]=x99;
op[11]=x101;
op[12]=x105;
op[13]=((x107)+(x81)+(((IkReal(-1.00000000000000))*(x82))));
op[14]=x85;
op[15]=x100;
op[16]=x98;
op[17]=((IkReal(-0.0350000000000000))+(x81)+(((IkReal(-1.00000000000000))*(x80)))+(((IkReal(-1.00000000000000))*(x82))));
op[18]=x86;
op[19]=x104;
op[20]=x88;
op[21]=x89;
op[22]=x101;
op[23]=x103;
op[24]=((IkReal(-0.0108000000000000))+(x111));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((IkReal(-0.0108000000000000))+(x90)+(((IkReal(-1.00000000000000))*(x85))));
op[29]=IkReal(0);
op[30]=((x88)+(x92)+(((IkReal(-1.00000000000000))*(x91))));
op[31]=IkReal(0);
op[32]=((x93)+(((IkReal(-1.00000000000000))*(x94))));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x112)))+(((IkReal(-1.00000000000000))*(x88))));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((IkReal(0.0108000000000000))+(x90)+(((IkReal(-1.00000000000000))*(x85))));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((IkReal(0.0108000000000000))+(x111));
op[42]=IkReal(0);
op[43]=((x92)+(((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-1.00000000000000))*(x88))));
op[44]=IkReal(0);
op[45]=((x93)+(x94));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x112)))+(x88));
op[48]=((x108)+(((IkReal(-1.00000000000000))*(x95)))+(((IkReal(-1.00000000000000))*(x82))));
op[49]=x102;
op[50]=x97;
op[51]=x85;
op[52]=((x108)+(x95)+(((IkReal(-1.00000000000000))*(x82))));
op[53]=x96;
op[54]=x103;
op[55]=x86;
op[56]=x106;
op[57]=x88;
op[58]=x104;
op[59]=x101;
op[60]=x105;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x109)))+(((IkReal(-1.00000000000000))*(x95))));
op[62]=x85;
op[63]=x97;
op[64]=x98;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x109)))+(x95));
op[66]=x86;
op[67]=x99;
op[68]=x88;
op[69]=x106;
op[70]=x101;
op[71]=x110;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j13array[16], cj13array[16], sj13array[16], j14array[16], cj14array[16], sj14array[16], j12array[16], cj12array[16], sj12array[16];
int numsolutions = 0;
for(int ij13 = 0; ij13 < numroots; ij13 += 3)
{
IkReal htj13 = zeror[ij13+0], htj14 = zeror[ij13+1], htj12 = zeror[ij13+2];
j13array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj13)));
j14array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj14)));
j12array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj12)));
IkReal x113=(htj13)*(htj13);
IkReal x114=(htj14)*(htj14);
IkReal x115=(htj12)*(htj12);
cj13array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x113))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x113)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x113))))));
cj14array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x114))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x114)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x114))))));
cj12array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x115))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x115)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x115))))));
sj13array[numsolutions]=((IkReal(2.00000000000000))*(htj13)*(((IKabs(((IkReal(1.00000000000000))+((htj13)*(htj13)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj13)*(htj13))))):(IkReal)1.0e30)));
sj14array[numsolutions]=((IkReal(2.00000000000000))*(htj14)*(((IKabs(((IkReal(1.00000000000000))+((htj14)*(htj14)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj14)*(htj14))))):(IkReal)1.0e30)));
sj12array[numsolutions]=((IkReal(2.00000000000000))*(htj12)*(((IKabs(((IkReal(1.00000000000000))+((htj12)*(htj12)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj12)*(htj12))))):(IkReal)1.0e30)));
if( j13array[numsolutions] > IKPI )
{
    j13array[numsolutions]-=IK2PI;
}
else if( j13array[numsolutions] < -IKPI )
{
    j13array[numsolutions]+=IK2PI;
}
if( j14array[numsolutions] > IKPI )
{
    j14array[numsolutions]-=IK2PI;
}
else if( j14array[numsolutions] < -IKPI )
{
    j14array[numsolutions]+=IK2PI;
}
if( j12array[numsolutions] > IKPI )
{
    j12array[numsolutions]-=IK2PI;
}
else if( j12array[numsolutions] < -IKPI )
{
    j12array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j13valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj13 = 16;
_nj14 = 1;
_nj12 = 1;
for(int ij13 = 0; ij13 < numsolutions; ++ij13)
    {
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
_ij14[0] = 0; _ij14[1] = -1;
_ij12[0] = 0; _ij12[1] = -1;
for(int iij13 = ij13+1; iij13 < numsolutions; ++iij13)
{
if( !j13valid[iij13] ) { continue; }
if( IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj14array[ij13]-cj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij13]-sj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj12array[ij13]-cj12array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij13]-sj12array[iij13]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j13valid[iij13]=false; _ij13[1] = iij13; _ij14[1] = 0; _ij12[1] = 0;  break; 
}
}
    j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];

    j14 = j14array[ij13]; cj14 = cj14array[ij13]; sj14 = sj14array[ij13];

    j12 = j12array[ij13]; cj12 = cj12array[ij13]; sj12 = sj12array[ij13];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x116=(cj14)*(cj14);
IkReal x117=(sj14)*(sj14);
IkReal x118=((IkReal(1.00000000000000))*(r01));
IkReal x119=((sj13)*(sj14));
IkReal x120=((cj14)*(sj13));
IkReal x121=((r00)*(r11));
IkReal x122=((cj13)*(x116));
IkReal x123=((cj13)*(x117));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x118)*(x120)))+(((x121)*(x122)))+(((x121)*(x123)))+(((r02)*(r10)*(x119)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x119)))+(((IkReal(-1.00000000000000))*(r10)*(x118)*(x123)))+(((IkReal(-1.00000000000000))*(r10)*(x118)*(x122)))+(((r02)*(r11)*(x120)))));
IkReal x124=(cj14)*(cj14);
IkReal x125=(sj14)*(sj14);
IkReal x126=((IkReal(1.00000000000000))*(r01));
IkReal x127=((sj13)*(sj14));
IkReal x128=((cj14)*(sj13));
IkReal x129=((r00)*(r11));
IkReal x130=((cj13)*(x124));
IkReal x131=((cj13)*(x125));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r12)*(x126)*(x128)))+(((x129)*(x130)))+(((x129)*(x131)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x127)))+(((r02)*(r11)*(x128)))+(((r02)*(r10)*(x127)))+(((IkReal(-1.00000000000000))*(r10)*(x126)*(x130)))+(((IkReal(-1.00000000000000))*(r10)*(x126)*(x131))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x132=(sj14)*(sj14);
IkReal x133=(cj14)*(cj14);
IkReal x134=((cj13)*(r12));
IkReal x135=((IkReal(1.00000000000000))*(r10));
IkReal x136=((cj13)*(r02));
IkReal x137=((r01)*(sj13));
IkReal x138=((r00)*(r11)*(sj13));
gconst1=IKsign(((((r00)*(sj14)*(x134)))+(((IkReal(-1.00000000000000))*(x132)*(x135)*(x137)))+(((x133)*(x138)))+(((x132)*(x138)))+(((cj14)*(r01)*(x134)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x136)))+(((IkReal(-1.00000000000000))*(sj14)*(x135)*(x136)))+(((IkReal(-1.00000000000000))*(x133)*(x135)*(x137)))));
IkReal x139=(sj14)*(sj14);
IkReal x140=(cj14)*(cj14);
IkReal x141=((cj13)*(r12));
IkReal x142=((IkReal(1.00000000000000))*(r10));
IkReal x143=((cj13)*(r02));
IkReal x144=((r01)*(sj13));
IkReal x145=((r00)*(r11)*(sj13));
dummyeval[0]=((((x140)*(x145)))+(((cj14)*(r01)*(x141)))+(((IkReal(-1.00000000000000))*(x140)*(x142)*(x144)))+(((IkReal(-1.00000000000000))*(sj14)*(x142)*(x143)))+(((r00)*(sj14)*(x141)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x143)))+(((IkReal(-1.00000000000000))*(x139)*(x142)*(x144)))+(((x139)*(x145))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x146=((IkReal(4.00000000000000))*(cj13));
IkReal x147=((npy)*(sj14));
IkReal x148=((cj14)*(npx));
IkReal x149=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((npz)*(x146)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x148)*(x149)))+(((x147)*(x149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x146)*(x148))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npz)*(x146)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x148)*(x149)))+(((x147)*(x149)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x146)*(x148)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npz)*(x146)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x148)*(x149)))+(((x147)*(x149)))), ((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x146)*(x148)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x150=((IkReal(1.00000000000000))*(sj13));
IkReal x151=((cj14)*(npx));
IkReal x152=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x152)))+(((IkReal(-1.00000000000000))*(cj13)*(x151)))+(((IkReal(-1.00000000000000))*(npz)*(x150))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((sj13)*(x152)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x153=(sj14)*(sj14);
IkReal x154=(cj14)*(cj14);
IkReal x155=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst66=IKsign(((((x153)*((r00)*(r00))))+(((x154)*((r01)*(r01))))+(((x154)*((r11)*(r11))))+(((r10)*(r11)*(x155)))+(((x153)*((r10)*(r10))))+(((r00)*(r01)*(x155)))));
IkReal x156=(sj14)*(sj14);
IkReal x157=(cj14)*(cj14);
IkReal x158=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x156)*((r00)*(r00))))+(((x157)*((r01)*(r01))))+(((x156)*((r10)*(r10))))+(((r10)*(r11)*(x158)))+(((x157)*((r11)*(r11))))+(((r00)*(r01)*(x158))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x159=(cj14)*(cj14);
IkReal x160=(sj14)*(sj14);
IkReal x161=((IkReal(1.00000000000000))*(r01));
IkReal x162=((sj13)*(sj14));
IkReal x163=((cj14)*(sj13));
IkReal x164=((r00)*(r11));
IkReal x165=((cj13)*(x159));
IkReal x166=((cj13)*(x160));
gconst67=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x161)*(x163)))+(((IkReal(-1.00000000000000))*(r10)*(x161)*(x165)))+(((IkReal(-1.00000000000000))*(r10)*(x161)*(x166)))+(((x164)*(x166)))+(((x164)*(x165)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x162)))+(((r02)*(r11)*(x163)))+(((r02)*(r10)*(x162)))));
IkReal x167=(cj14)*(cj14);
IkReal x168=(sj14)*(sj14);
IkReal x169=((IkReal(1.00000000000000))*(r01));
IkReal x170=((sj13)*(sj14));
IkReal x171=((cj14)*(sj13));
IkReal x172=((r00)*(r11));
IkReal x173=((cj13)*(x167));
IkReal x174=((cj13)*(x168));
dummyeval[0]=((((x172)*(x174)))+(((x172)*(x173)))+(((IkReal(-1.00000000000000))*(r10)*(x169)*(x174)))+(((IkReal(-1.00000000000000))*(r10)*(x169)*(x173)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x170)))+(((r02)*(r10)*(x170)))+(((r02)*(r11)*(x171)))+(((IkReal(-1.00000000000000))*(r12)*(x169)*(x171))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x175=((cj13)*(cj14));
IkReal x176=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(r11)*(x176)))+(((r12)*(sj13)))+(((r10)*(x175))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r02)*(sj13)))+(((r00)*(x175)))+(((IkReal(-1.00000000000000))*(r01)*(x176))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst67)*(((((IkReal(-1.00000000000000))*(r11)*(x176)))+(((r12)*(sj13)))+(((r10)*(x175)))))), ((gconst67)*(((((r02)*(sj13)))+(((r00)*(x175)))+(((IkReal(-1.00000000000000))*(r01)*(x176)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x177=IKsin(j9);
IkReal x178=IKcos(j9);
IkReal x179=((r10)*(sj14));
IkReal x180=((cj14)*(r11));
IkReal x181=((cj14)*(r10));
IkReal x182=((cj14)*(r00));
IkReal x183=((r11)*(sj14));
IkReal x184=((r00)*(sj14));
IkReal x185=((IkReal(1.00000000000000))*(x177));
IkReal x186=((cj13)*(x177));
IkReal x187=((sj13)*(x178));
IkReal x188=((r01)*(x177));
IkReal x189=((IkReal(1.00000000000000))*(x178));
evalcond[0]=((IkReal(1.00000000000000))+(((x177)*(x184)))+(((cj14)*(x188)))+(((IkReal(-1.00000000000000))*(x180)*(x189)))+(((IkReal(-1.00000000000000))*(x179)*(x189))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x180)*(x185)))+(((IkReal(-1.00000000000000))*(x184)*(x189)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x189)))+(((IkReal(-1.00000000000000))*(x179)*(x185))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x183)*(x189)))+(((IkReal(-1.00000000000000))*(cj13)*(x182)*(x185)))+(((r12)*(x187)))+(((r01)*(sj14)*(x186)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x185)))+(((cj13)*(x178)*(x181))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj13)*(x182)*(x185)))+(((IkReal(-1.00000000000000))*(x183)*(x187)))+(((r02)*(x186)))+(((sj13)*(sj14)*(x188)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x189)))+(((x181)*(x187))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x190=((cj13)*(sj14));
IkReal x191=((IkReal(1.00000000000000))*(cj11));
IkReal x192=((r11)*(sj9));
IkReal x193=((IkReal(1.00000000000000))*(sj11));
IkReal x194=((cj13)*(cj14));
IkReal x195=((cj11)*(sj13));
IkReal x196=((r12)*(sj9));
IkReal x197=((cj9)*(r01));
IkReal x198=((sj11)*(sj13));
IkReal x199=((r10)*(sj9));
IkReal x200=((cj9)*(r00));
IkReal x201=((cj9)*(r02));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(r20)*(x193)*(x194)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x193)))+(((r21)*(sj11)*(x190)))+(((x195)*(x201)))+(((x195)*(x196)))+(((IkReal(-1.00000000000000))*(x190)*(x191)*(x197)))+(((IkReal(-1.00000000000000))*(x190)*(x191)*(x192)))+(((cj11)*(x194)*(x199)))+(((cj11)*(x194)*(x200))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(x190)*(x193)*(x197)))+(((x198)*(x201)))+(((sj11)*(x194)*(x200)))+(((cj11)*(r20)*(x194)))+(((x196)*(x198)))+(((IkReal(-1.00000000000000))*(r21)*(x190)*(x191)))+(((IkReal(-1.00000000000000))*(x190)*(x192)*(x193)))+(((sj11)*(x194)*(x199)))+(((r22)*(x195))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(r20)*(x193)*(x194)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x193)))+(((r21)*(sj11)*(x190)))+(((x195)*(x201)))+(((x195)*(x196)))+(((IkReal(-1.00000000000000))*(x190)*(x191)*(x197)))+(((IkReal(-1.00000000000000))*(x190)*(x191)*(x192)))+(((cj11)*(x194)*(x199)))+(((cj11)*(x194)*(x200)))))), ((gconst70)*(((((IkReal(-1.00000000000000))*(x190)*(x193)*(x197)))+(((x198)*(x201)))+(((sj11)*(x194)*(x200)))+(((cj11)*(r20)*(x194)))+(((x196)*(x198)))+(((IkReal(-1.00000000000000))*(r21)*(x190)*(x191)))+(((IkReal(-1.00000000000000))*(x190)*(x192)*(x193)))+(((sj11)*(x194)*(x199)))+(((r22)*(x195)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x202=IKsin(j10);
IkReal x203=IKcos(j10);
IkReal x204=((IkReal(1.00000000000000))*(sj13));
IkReal x205=((r11)*(sj9));
IkReal x206=((cj9)*(r01));
IkReal x207=((r21)*(sj14));
IkReal x208=((cj9)*(r02));
IkReal x209=((sj13)*(sj9));
IkReal x210=((cj14)*(r10));
IkReal x211=((IkReal(1.00000000000000))*(cj13));
IkReal x212=((cj14)*(r20));
IkReal x213=((cj11)*(x202));
IkReal x214=((sj11)*(x203));
IkReal x215=((sj14)*(x211));
IkReal x216=((sj11)*(x202));
IkReal x217=((cj11)*(x203));
IkReal x218=((cj14)*(cj9)*(r00));
IkReal x219=((x213)+(x214));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x204)))+(((cj13)*(x207)))+(x216)+(((IkReal(-1.00000000000000))*(x217)))+(((IkReal(-1.00000000000000))*(x211)*(x212))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x204)*(x212)))+(((sj13)*(x207)))+(x219)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x218)))+(((IkReal(-1.00000000000000))*(x206)*(x215)))+(((sj13)*(x208)))+(((IkReal(-1.00000000000000))*(x205)*(x215)))+(x219)+(((cj13)*(sj9)*(x210)))+(((r12)*(x209))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x211)))+(((x209)*(x210)))+(x217)+(((IkReal(-1.00000000000000))*(sj14)*(x204)*(x206)))+(((IkReal(-1.00000000000000))*(sj14)*(x204)*(x205)))+(((IkReal(-1.00000000000000))*(x216)))+(((IkReal(-1.00000000000000))*(x208)*(x211)))+(((sj13)*(x218))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x220=((cj13)*(sj11));
IkReal x221=((r21)*(sj14));
IkReal x222=((cj11)*(cj13));
IkReal x223=((r22)*(sj13));
IkReal x224=((sj11)*(sj13));
IkReal x225=((cj11)*(sj13));
IkReal x226=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(x225)*(x226)))+(((x220)*(x221)))+(((IkReal(-1.00000000000000))*(sj11)*(x223)))+(((IkReal(-1.00000000000000))*(x220)*(x226)))+(((x221)*(x225)))+(((r22)*(x222))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((cj11)*(x223)))+(((IkReal(-1.00000000000000))*(x224)*(x226)))+(((cj14)*(r20)*(x222)))+(((x221)*(x224)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x221)*(x222))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(x225)*(x226)))+(((x220)*(x221)))+(((IkReal(-1.00000000000000))*(sj11)*(x223)))+(((IkReal(-1.00000000000000))*(x220)*(x226)))+(((x221)*(x225)))+(((r22)*(x222)))))), ((gconst69)*(((((cj11)*(x223)))+(((IkReal(-1.00000000000000))*(x224)*(x226)))+(((cj14)*(r20)*(x222)))+(((x221)*(x224)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x221)*(x222)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x227=IKsin(j10);
IkReal x228=IKcos(j10);
IkReal x229=((IkReal(1.00000000000000))*(sj13));
IkReal x230=((r11)*(sj9));
IkReal x231=((cj9)*(r01));
IkReal x232=((r21)*(sj14));
IkReal x233=((cj9)*(r02));
IkReal x234=((sj13)*(sj9));
IkReal x235=((cj14)*(r10));
IkReal x236=((IkReal(1.00000000000000))*(cj13));
IkReal x237=((cj14)*(r20));
IkReal x238=((cj11)*(x227));
IkReal x239=((sj11)*(x228));
IkReal x240=((sj14)*(x236));
IkReal x241=((sj11)*(x227));
IkReal x242=((cj11)*(x228));
IkReal x243=((cj14)*(cj9)*(r00));
IkReal x244=((x238)+(x239));
evalcond[0]=((((IkReal(-1.00000000000000))*(x242)))+(x241)+(((cj13)*(x232)))+(((IkReal(-1.00000000000000))*(x236)*(x237)))+(((IkReal(-1.00000000000000))*(r22)*(x229))));
evalcond[1]=((((sj13)*(x232)))+(x244)+(((IkReal(-1.00000000000000))*(x229)*(x237)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x231)*(x240)))+(((sj13)*(x233)))+(((IkReal(-1.00000000000000))*(x230)*(x240)))+(x244)+(((cj13)*(x243)))+(((cj13)*(sj9)*(x235)))+(((r12)*(x234))));
evalcond[3]=((((x234)*(x235)))+(((IkReal(-1.00000000000000))*(x233)*(x236)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x236)))+(((IkReal(-1.00000000000000))*(x241)))+(((IkReal(-1.00000000000000))*(sj14)*(x229)*(x231)))+(((IkReal(-1.00000000000000))*(sj14)*(x229)*(x230)))+(x242)+(((sj13)*(x243))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x245=((cj13)*(sj11));
IkReal x246=((r21)*(sj14));
IkReal x247=((cj11)*(cj13));
IkReal x248=((cj11)*(sj13));
IkReal x249=((sj11)*(sj13));
IkReal x250=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst68)*(((((r22)*(x247)))+(((IkReal(-1.00000000000000))*(x248)*(x250)))+(((IkReal(-1.00000000000000))*(x245)*(x250)))+(((x245)*(x246)))+(((x246)*(x248)))+(((IkReal(-1.00000000000000))*(r22)*(x249))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((r22)*(x248)))+(((r22)*(x245)))+(((IkReal(-1.00000000000000))*(x249)*(x250)))+(((IkReal(-1.00000000000000))*(x246)*(x247)))+(((x246)*(x249)))+(((cj14)*(r20)*(x247))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst68)*(((((r22)*(x247)))+(((IkReal(-1.00000000000000))*(x248)*(x250)))+(((IkReal(-1.00000000000000))*(x245)*(x250)))+(((x245)*(x246)))+(((x246)*(x248)))+(((IkReal(-1.00000000000000))*(r22)*(x249)))))), ((gconst68)*(((((r22)*(x248)))+(((r22)*(x245)))+(((IkReal(-1.00000000000000))*(x249)*(x250)))+(((IkReal(-1.00000000000000))*(x246)*(x247)))+(((x246)*(x249)))+(((cj14)*(r20)*(x247)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x251=IKsin(j10);
IkReal x252=IKcos(j10);
IkReal x253=((IkReal(1.00000000000000))*(sj13));
IkReal x254=((cj14)*(r20));
IkReal x255=((r21)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x253)))+(((cj13)*(x255)))+(((sj11)*(x251)))+(((IkReal(-1.00000000000000))*(cj13)*(x254)))+(((IkReal(-1.00000000000000))*(cj11)*(x252))));
evalcond[1]=((((sj13)*(x255)))+(((cj11)*(x251)))+(((sj11)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x256=(sj14)*(sj14);
IkReal x257=(cj14)*(cj14);
IkReal x258=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst71=IKsign(((((r10)*(r11)*(x258)))+(((x256)*((r10)*(r10))))+(((x257)*((r11)*(r11))))+(((r00)*(r01)*(x258)))+(((x257)*((r01)*(r01))))+(((x256)*((r00)*(r00))))));
IkReal x259=(sj14)*(sj14);
IkReal x260=(cj14)*(cj14);
IkReal x261=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((r00)*(r01)*(x261)))+(((x260)*((r01)*(r01))))+(((x260)*((r11)*(r11))))+(((x259)*((r10)*(r10))))+(((x259)*((r00)*(r00))))+(((r10)*(r11)*(x261))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x262=(cj14)*(cj14);
IkReal x263=(sj14)*(sj14);
IkReal x264=((IkReal(1.00000000000000))*(r01));
IkReal x265=((sj13)*(sj14));
IkReal x266=((cj14)*(sj13));
IkReal x267=((r00)*(r11));
IkReal x268=((cj13)*(x262));
IkReal x269=((cj13)*(x263));
gconst72=IKsign(((((x267)*(x268)))+(((x267)*(x269)))+(((r02)*(r10)*(x265)))+(((r02)*(r11)*(x266)))+(((IkReal(-1.00000000000000))*(r10)*(x264)*(x269)))+(((IkReal(-1.00000000000000))*(r10)*(x264)*(x268)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x265)))+(((IkReal(-1.00000000000000))*(r12)*(x264)*(x266)))));
IkReal x270=(cj14)*(cj14);
IkReal x271=(sj14)*(sj14);
IkReal x272=((IkReal(1.00000000000000))*(r01));
IkReal x273=((sj13)*(sj14));
IkReal x274=((cj14)*(sj13));
IkReal x275=((r00)*(r11));
IkReal x276=((cj13)*(x270));
IkReal x277=((cj13)*(x271));
dummyeval[0]=((((x275)*(x277)))+(((x275)*(x276)))+(((IkReal(-1.00000000000000))*(r12)*(x272)*(x274)))+(((r02)*(r11)*(x274)))+(((r02)*(r10)*(x273)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x273)))+(((IkReal(-1.00000000000000))*(r10)*(x272)*(x277)))+(((IkReal(-1.00000000000000))*(r10)*(x272)*(x276))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x278=((cj13)*(cj14));
IkReal x279=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst72)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x279)))+(((r10)*(x278))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x279)))+(((r00)*(x278))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst72)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x279)))+(((r10)*(x278)))))), ((gconst72)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x279)))+(((r00)*(x278)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x280=IKsin(j9);
IkReal x281=IKcos(j9);
IkReal x282=((IkReal(1.00000000000000))*(cj14));
IkReal x283=((IkReal(1.00000000000000))*(sj14));
IkReal x284=((cj13)*(cj14));
IkReal x285=((cj14)*(r10));
IkReal x286=((r01)*(sj14));
IkReal x287=((IkReal(1.00000000000000))*(r12));
IkReal x288=((sj13)*(x281));
IkReal x289=((r02)*(x280));
IkReal x290=((r11)*(x280));
IkReal x291=((r10)*(x281));
IkReal x292=((r01)*(x281));
IkReal x293=((sj13)*(x280));
IkReal x294=((r11)*(x281));
IkReal x295=((cj13)*(x280));
IkReal x296=((r10)*(x280));
IkReal x297=((r00)*(x281));
IkReal x298=((cj13)*(x281));
evalcond[0]=((IkReal(1.00000000000000))+(((r00)*(sj14)*(x280)))+(((IkReal(-1.00000000000000))*(x283)*(x291)))+(((cj14)*(r01)*(x280)))+(((IkReal(-1.00000000000000))*(x282)*(x294))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x283)*(x297)))+(((IkReal(-1.00000000000000))*(x283)*(x296)))+(((IkReal(-1.00000000000000))*(x282)*(x290)))+(((IkReal(-1.00000000000000))*(x282)*(x292))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x283)*(x294)))+(((IkReal(-1.00000000000000))*(sj13)*(x289)))+(((x284)*(x291)))+(((r12)*(x288)))+(((x286)*(x295)))+(((IkReal(-1.00000000000000))*(r00)*(x282)*(x295))));
evalcond[3]=((((x285)*(x288)))+(((cj13)*(x289)))+(((IkReal(-1.00000000000000))*(r11)*(x283)*(x288)))+(((x286)*(x293)))+(((IkReal(-1.00000000000000))*(x287)*(x298)))+(((IkReal(-1.00000000000000))*(r00)*(x282)*(x293))));
evalcond[4]=((((r12)*(x293)))+(((IkReal(-1.00000000000000))*(cj13)*(x283)*(x290)))+(((IkReal(-1.00000000000000))*(cj13)*(x283)*(x292)))+(((r02)*(x288)))+(((cj10)*(sj11)))+(((x284)*(x296)))+(((x284)*(x297)))+(((cj11)*(sj10))));
evalcond[5]=((((cj14)*(r00)*(x288)))+(((IkReal(-1.00000000000000))*(r01)*(x283)*(x288)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x298)))+(((x285)*(x293)))+(((IkReal(-1.00000000000000))*(x287)*(x295)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x283)*(x290))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst71)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x299=IKsin(j9);
IkReal x300=IKcos(j9);
IkReal x301=((IkReal(1.00000000000000))*(cj14));
IkReal x302=((IkReal(1.00000000000000))*(sj14));
IkReal x303=((cj13)*(cj14));
IkReal x304=((cj14)*(r10));
IkReal x305=((r01)*(sj14));
IkReal x306=((IkReal(1.00000000000000))*(r12));
IkReal x307=((sj13)*(x300));
IkReal x308=((r02)*(x299));
IkReal x309=((r11)*(x299));
IkReal x310=((r10)*(x300));
IkReal x311=((r01)*(x300));
IkReal x312=((sj13)*(x299));
IkReal x313=((r11)*(x300));
IkReal x314=((cj13)*(x299));
IkReal x315=((r10)*(x299));
IkReal x316=((r00)*(x300));
IkReal x317=((cj13)*(x300));
evalcond[0]=((IkReal(1.00000000000000))+(((cj14)*(r01)*(x299)))+(((IkReal(-1.00000000000000))*(x302)*(x310)))+(((r00)*(sj14)*(x299)))+(((IkReal(-1.00000000000000))*(x301)*(x313))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x301)*(x309)))+(((IkReal(-1.00000000000000))*(x302)*(x316)))+(((IkReal(-1.00000000000000))*(x302)*(x315)))+(((IkReal(-1.00000000000000))*(x301)*(x311))));
evalcond[2]=((((x305)*(x314)))+(((IkReal(-1.00000000000000))*(r00)*(x301)*(x314)))+(((IkReal(-1.00000000000000))*(cj13)*(x302)*(x313)))+(((IkReal(-1.00000000000000))*(sj13)*(x308)))+(((x303)*(x310)))+(((r12)*(x307))));
evalcond[3]=((((x305)*(x312)))+(((IkReal(-1.00000000000000))*(r00)*(x301)*(x312)))+(((IkReal(-1.00000000000000))*(r11)*(x302)*(x307)))+(((IkReal(-1.00000000000000))*(x306)*(x317)))+(((x304)*(x307)))+(((cj13)*(x308))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x302)*(x309)))+(((r02)*(x307)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x302)*(x311)))+(((x303)*(x315)))+(((x303)*(x316)))+(((r12)*(x312)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x317)))+(((x304)*(x312)))+(((IkReal(-1.00000000000000))*(r01)*(x302)*(x307)))+(((IkReal(-1.00000000000000))*(sj13)*(x302)*(x309)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x306)*(x314)))+(((cj10)*(cj11)))+(((cj14)*(r00)*(x307))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst66)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x318=IKsin(j9);
IkReal x319=IKcos(j9);
IkReal x320=((r10)*(sj14));
IkReal x321=((cj14)*(r11));
IkReal x322=((cj14)*(r10));
IkReal x323=((cj14)*(r00));
IkReal x324=((r11)*(sj14));
IkReal x325=((r00)*(sj14));
IkReal x326=((IkReal(1.00000000000000))*(x318));
IkReal x327=((cj13)*(x318));
IkReal x328=((sj13)*(x319));
IkReal x329=((r01)*(x318));
IkReal x330=((IkReal(1.00000000000000))*(x319));
evalcond[0]=((IkReal(1.00000000000000))+(((x318)*(x325)))+(((IkReal(-1.00000000000000))*(x321)*(x330)))+(((IkReal(-1.00000000000000))*(x320)*(x330)))+(((cj14)*(x329))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x330)))+(((IkReal(-1.00000000000000))*(x321)*(x326)))+(((IkReal(-1.00000000000000))*(x320)*(x326)))+(((IkReal(-1.00000000000000))*(x325)*(x330))));
evalcond[2]=((((r12)*(x328)))+(((IkReal(-1.00000000000000))*(cj13)*(x324)*(x330)))+(((cj13)*(x319)*(x322)))+(((r01)*(sj14)*(x327)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x326)))+(((IkReal(-1.00000000000000))*(cj13)*(x323)*(x326))));
evalcond[3]=((((r02)*(x327)))+(((x322)*(x328)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x330)))+(((IkReal(-1.00000000000000))*(x324)*(x328)))+(((sj13)*(sj14)*(x329)))+(((IkReal(-1.00000000000000))*(sj13)*(x323)*(x326))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x331=((cj13)*(sj14));
IkReal x332=((IkReal(1.00000000000000))*(cj11));
IkReal x333=((r11)*(sj9));
IkReal x334=((IkReal(1.00000000000000))*(sj11));
IkReal x335=((cj13)*(cj14));
IkReal x336=((cj11)*(sj13));
IkReal x337=((r12)*(sj9));
IkReal x338=((cj9)*(r01));
IkReal x339=((sj11)*(sj13));
IkReal x340=((r10)*(sj9));
IkReal x341=((cj9)*(r00));
IkReal x342=((cj9)*(r02));
if( IKabs(((gconst70)*(((((x336)*(x342)))+(((x336)*(x337)))+(((IkReal(-1.00000000000000))*(x331)*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x331)*(x332)*(x338)))+(((r21)*(sj11)*(x331)))+(((IkReal(-1.00000000000000))*(r20)*(x334)*(x335)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x334)))+(((cj11)*(x335)*(x340)))+(((cj11)*(x335)*(x341))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((r22)*(x336)))+(((x337)*(x339)))+(((sj11)*(x335)*(x340)))+(((sj11)*(x335)*(x341)))+(((IkReal(-1.00000000000000))*(x331)*(x333)*(x334)))+(((cj11)*(r20)*(x335)))+(((IkReal(-1.00000000000000))*(r21)*(x331)*(x332)))+(((x339)*(x342)))+(((IkReal(-1.00000000000000))*(x331)*(x334)*(x338))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((x336)*(x342)))+(((x336)*(x337)))+(((IkReal(-1.00000000000000))*(x331)*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x331)*(x332)*(x338)))+(((r21)*(sj11)*(x331)))+(((IkReal(-1.00000000000000))*(r20)*(x334)*(x335)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x334)))+(((cj11)*(x335)*(x340)))+(((cj11)*(x335)*(x341)))))), ((gconst70)*(((((r22)*(x336)))+(((x337)*(x339)))+(((sj11)*(x335)*(x340)))+(((sj11)*(x335)*(x341)))+(((IkReal(-1.00000000000000))*(x331)*(x333)*(x334)))+(((cj11)*(r20)*(x335)))+(((IkReal(-1.00000000000000))*(r21)*(x331)*(x332)))+(((x339)*(x342)))+(((IkReal(-1.00000000000000))*(x331)*(x334)*(x338)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x343=IKsin(j10);
IkReal x344=IKcos(j10);
IkReal x345=((IkReal(1.00000000000000))*(sj13));
IkReal x346=((r11)*(sj9));
IkReal x347=((cj9)*(r01));
IkReal x348=((r21)*(sj14));
IkReal x349=((cj9)*(r02));
IkReal x350=((sj13)*(sj9));
IkReal x351=((cj14)*(r10));
IkReal x352=((IkReal(1.00000000000000))*(cj13));
IkReal x353=((cj14)*(r20));
IkReal x354=((cj11)*(x343));
IkReal x355=((sj11)*(x344));
IkReal x356=((sj14)*(x352));
IkReal x357=((sj11)*(x343));
IkReal x358=((cj11)*(x344));
IkReal x359=((cj14)*(cj9)*(r00));
IkReal x360=((x355)+(x354));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x345)))+(((cj13)*(x348)))+(((IkReal(-1.00000000000000))*(x358)))+(x357)+(((IkReal(-1.00000000000000))*(x352)*(x353))));
evalcond[1]=((((sj13)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x353)))+(x360)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x351)))+(((sj13)*(x349)))+(((r12)*(x350)))+(((cj13)*(x359)))+(((IkReal(-1.00000000000000))*(x346)*(x356)))+(x360)+(((IkReal(-1.00000000000000))*(x347)*(x356))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x345)*(x347)))+(((IkReal(-1.00000000000000))*(sj14)*(x345)*(x346)))+(((IkReal(-1.00000000000000))*(x349)*(x352)))+(((IkReal(-1.00000000000000))*(x357)))+(x358)+(((sj13)*(x359)))+(((x350)*(x351)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x352))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x361=((cj13)*(sj11));
IkReal x362=((r21)*(sj14));
IkReal x363=((cj11)*(cj13));
IkReal x364=((r22)*(sj13));
IkReal x365=((sj11)*(sj13));
IkReal x366=((cj11)*(sj13));
IkReal x367=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((x361)*(x362)))+(((IkReal(-1.00000000000000))*(x361)*(x367)))+(((IkReal(-1.00000000000000))*(sj11)*(x364)))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((r22)*(x363)))+(((x362)*(x366))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((cj14)*(r20)*(x363)))+(((cj11)*(x364)))+(((IkReal(-1.00000000000000))*(x362)*(x363)))+(((r22)*(x361)))+(((IkReal(-1.00000000000000))*(x365)*(x367)))+(((x362)*(x365))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((x361)*(x362)))+(((IkReal(-1.00000000000000))*(x361)*(x367)))+(((IkReal(-1.00000000000000))*(sj11)*(x364)))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((r22)*(x363)))+(((x362)*(x366)))))), ((gconst69)*(((((cj14)*(r20)*(x363)))+(((cj11)*(x364)))+(((IkReal(-1.00000000000000))*(x362)*(x363)))+(((r22)*(x361)))+(((IkReal(-1.00000000000000))*(x365)*(x367)))+(((x362)*(x365)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x368=IKsin(j10);
IkReal x369=IKcos(j10);
IkReal x370=((IkReal(1.00000000000000))*(sj13));
IkReal x371=((r11)*(sj9));
IkReal x372=((cj9)*(r01));
IkReal x373=((r21)*(sj14));
IkReal x374=((cj9)*(r02));
IkReal x375=((sj13)*(sj9));
IkReal x376=((cj14)*(r10));
IkReal x377=((IkReal(1.00000000000000))*(cj13));
IkReal x378=((cj14)*(r20));
IkReal x379=((cj11)*(x368));
IkReal x380=((sj11)*(x369));
IkReal x381=((sj14)*(x377));
IkReal x382=((sj11)*(x368));
IkReal x383=((cj11)*(x369));
IkReal x384=((cj14)*(cj9)*(r00));
IkReal x385=((x380)+(x379));
evalcond[0]=((((IkReal(-1.00000000000000))*(x377)*(x378)))+(x382)+(((cj13)*(x373)))+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(r22)*(x370))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x370)*(x378)))+(((sj13)*(x373)))+(x385)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x384)))+(((sj13)*(x374)))+(x385)+(((r12)*(x375)))+(((IkReal(-1.00000000000000))*(x371)*(x381)))+(((cj13)*(sj9)*(x376)))+(((IkReal(-1.00000000000000))*(x372)*(x381))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x370)*(x371)))+(((IkReal(-1.00000000000000))*(sj14)*(x370)*(x372)))+(((x375)*(x376)))+(x383)+(((IkReal(-1.00000000000000))*(x374)*(x377)))+(((IkReal(-1.00000000000000))*(x382)))+(((sj13)*(x384)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x377))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x386=((IkReal(4.00000000000000))*(cj13));
IkReal x387=((npy)*(sj14));
IkReal x388=((cj14)*(npx));
IkReal x389=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x386)))+(((x388)*(x389)))+(((IkReal(-1.00000000000000))*(x387)*(x389)))+(((IkReal(-0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x386)*(x388)))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x389)))+(((IkReal(-1.00000000000000))*(x386)*(x387))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x386)))+(((x388)*(x389)))+(((IkReal(-1.00000000000000))*(x387)*(x389)))+(((IkReal(-0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((x386)*(x388)))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x389)))+(((IkReal(-1.00000000000000))*(x386)*(x387)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x386)))+(((x388)*(x389)))+(((IkReal(-1.00000000000000))*(x387)*(x389)))+(((IkReal(-0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((x386)*(x388)))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x389)))+(((IkReal(-1.00000000000000))*(x386)*(x387)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x390=((IkReal(1.00000000000000))*(sj13));
IkReal x391=((cj14)*(npx));
IkReal x392=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x391)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x392)))+(((IkReal(-1.00000000000000))*(npz)*(x390))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((sj13)*(x392)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x393=(sj14)*(sj14);
IkReal x394=(cj14)*(cj14);
IkReal x395=((IkReal(1.00000000000000))*(x393));
IkReal x396=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x397=((IkReal(1.00000000000000))*(x394));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x396)))+(((IkReal(-1.00000000000000))*(x397)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x396)))+(((IkReal(-1.00000000000000))*(x397)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x395)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x395)*((r00)*(r00))))));
IkReal x398=(sj14)*(sj14);
IkReal x399=(cj14)*(cj14);
IkReal x400=((IkReal(1.00000000000000))*(x398));
IkReal x401=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x402=((IkReal(1.00000000000000))*(x399));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x400)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x400)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x402)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x401)))+(((IkReal(-1.00000000000000))*(x402)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x401))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x403=(sj14)*(sj14);
IkReal x404=(cj14)*(cj14);
IkReal x405=((cj14)*(sj13));
IkReal x406=((IkReal(1.00000000000000))*(r11));
IkReal x407=((cj13)*(r00));
IkReal x408=((sj13)*(sj14));
IkReal x409=((cj13)*(r01)*(r10));
gconst76=IKsign(((((r01)*(r12)*(x405)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x406)*(x407)))+(((x404)*(x409)))+(((IkReal(-1.00000000000000))*(x403)*(x406)*(x407)))+(((IkReal(-1.00000000000000))*(r02)*(x405)*(x406)))+(((x403)*(x409)))+(((r00)*(r12)*(x408)))));
IkReal x410=(sj14)*(sj14);
IkReal x411=(cj14)*(cj14);
IkReal x412=((cj14)*(sj13));
IkReal x413=((IkReal(1.00000000000000))*(r11));
IkReal x414=((cj13)*(r00));
IkReal x415=((sj13)*(sj14));
IkReal x416=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r10)*(x415)))+(((IkReal(-1.00000000000000))*(x411)*(x413)*(x414)))+(((r01)*(r12)*(x412)))+(((x411)*(x416)))+(((x410)*(x416)))+(((IkReal(-1.00000000000000))*(r02)*(x412)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x413)*(x414)))+(((r00)*(r12)*(x415))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x417=((cj13)*(cj14));
IkReal x418=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst76)*(((((r12)*(sj13)))+(((r10)*(x417)))+(((IkReal(-1.00000000000000))*(r11)*(x418))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((r02)*(sj13)))+(((r00)*(x417)))+(((IkReal(-1.00000000000000))*(r01)*(x418))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst76)*(((((r12)*(sj13)))+(((r10)*(x417)))+(((IkReal(-1.00000000000000))*(r11)*(x418)))))), ((gconst76)*(((((r02)*(sj13)))+(((r00)*(x417)))+(((IkReal(-1.00000000000000))*(r01)*(x418)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x419=IKsin(j9);
IkReal x420=IKcos(j9);
IkReal x421=((r10)*(sj14));
IkReal x422=((cj14)*(r11));
IkReal x423=((cj14)*(r10));
IkReal x424=((cj14)*(r00));
IkReal x425=((r11)*(sj14));
IkReal x426=((r00)*(sj14));
IkReal x427=((IkReal(1.00000000000000))*(x419));
IkReal x428=((cj13)*(x419));
IkReal x429=((sj13)*(x420));
IkReal x430=((r01)*(x419));
IkReal x431=((IkReal(1.00000000000000))*(x420));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x421)*(x431)))+(((x419)*(x426)))+(((IkReal(-1.00000000000000))*(x422)*(x431)))+(((cj14)*(x430))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x422)*(x427)))+(((IkReal(-1.00000000000000))*(x421)*(x427)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x431)))+(((IkReal(-1.00000000000000))*(x426)*(x431))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x424)*(x427)))+(((cj13)*(x420)*(x423)))+(((IkReal(-1.00000000000000))*(cj13)*(x425)*(x431)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x427)))+(((r12)*(x429)))+(((r01)*(sj14)*(x428))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x425)*(x429)))+(((IkReal(-1.00000000000000))*(sj13)*(x424)*(x427)))+(((r02)*(x428)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x431)))+(((sj13)*(sj14)*(x430)))+(((x423)*(x429))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x432=((cj13)*(sj14));
IkReal x433=((IkReal(1.00000000000000))*(cj11));
IkReal x434=((r11)*(sj9));
IkReal x435=((IkReal(1.00000000000000))*(sj11));
IkReal x436=((cj13)*(cj14));
IkReal x437=((cj11)*(sj13));
IkReal x438=((r12)*(sj9));
IkReal x439=((cj9)*(r01));
IkReal x440=((sj11)*(sj13));
IkReal x441=((cj9)*(r02));
IkReal x442=((r10)*(sj9));
IkReal x443=((cj9)*(r00));
if( IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x432)*(x433)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x433)*(x439)))+(((IkReal(-1.00000000000000))*(r20)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x435)))+(((x437)*(x438)))+(((x437)*(x441)))+(((r21)*(sj11)*(x432)))+(((cj11)*(x436)*(x443)))+(((cj11)*(x436)*(x442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x432)*(x434)*(x435)))+(((cj11)*(r20)*(x436)))+(((x440)*(x441)))+(((r22)*(x437)))+(((x438)*(x440)))+(((IkReal(-1.00000000000000))*(r21)*(x432)*(x433)))+(((IkReal(-1.00000000000000))*(x432)*(x435)*(x439)))+(((sj11)*(x436)*(x442)))+(((sj11)*(x436)*(x443))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((IkReal(-1.00000000000000))*(x432)*(x433)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x433)*(x439)))+(((IkReal(-1.00000000000000))*(r20)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x435)))+(((x437)*(x438)))+(((x437)*(x441)))+(((r21)*(sj11)*(x432)))+(((cj11)*(x436)*(x443)))+(((cj11)*(x436)*(x442)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(x432)*(x434)*(x435)))+(((cj11)*(r20)*(x436)))+(((x440)*(x441)))+(((r22)*(x437)))+(((x438)*(x440)))+(((IkReal(-1.00000000000000))*(r21)*(x432)*(x433)))+(((IkReal(-1.00000000000000))*(x432)*(x435)*(x439)))+(((sj11)*(x436)*(x442)))+(((sj11)*(x436)*(x443)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x444=IKsin(j10);
IkReal x445=IKcos(j10);
IkReal x446=((IkReal(1.00000000000000))*(sj13));
IkReal x447=((r11)*(sj9));
IkReal x448=((cj9)*(r01));
IkReal x449=((IkReal(1.00000000000000))*(cj11));
IkReal x450=((r21)*(sj14));
IkReal x451=((cj9)*(r02));
IkReal x452=((sj13)*(sj9));
IkReal x453=((cj14)*(r10));
IkReal x454=((IkReal(1.00000000000000))*(cj13));
IkReal x455=((cj14)*(r20));
IkReal x456=((sj11)*(x444));
IkReal x457=((sj14)*(x454));
IkReal x458=((sj11)*(x445));
IkReal x459=((cj14)*(cj9)*(r00));
IkReal x460=((x445)*(x449));
evalcond[0]=((((cj13)*(x450)))+(((IkReal(-1.00000000000000))*(x460)))+(((IkReal(-1.00000000000000))*(x454)*(x455)))+(x456)+(((IkReal(-1.00000000000000))*(r22)*(x446))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x446)*(x455)))+(((IkReal(-1.00000000000000))*(x444)*(x449)))+(((IkReal(-1.00000000000000))*(x458)))+(((sj13)*(x450)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x444)))+(((cj13)*(x459)))+(((IkReal(-1.00000000000000))*(x447)*(x457)))+(x458)+(((r12)*(x452)))+(((sj13)*(x451)))+(((cj13)*(sj9)*(x453)))+(((IkReal(-1.00000000000000))*(x448)*(x457))));
evalcond[3]=((((x452)*(x453)))+(((IkReal(-1.00000000000000))*(sj14)*(x446)*(x448)))+(((IkReal(-1.00000000000000))*(sj14)*(x446)*(x447)))+(((IkReal(-1.00000000000000))*(x460)))+(x456)+(((sj13)*(x459)))+(((IkReal(-1.00000000000000))*(x451)*(x454)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x454))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x461=((r22)*(sj11));
IkReal x462=((IkReal(1.00000000000000))*(cj13));
IkReal x463=((cj14)*(r20));
IkReal x464=((r21)*(sj14));
IkReal x465=((cj11)*(cj13));
IkReal x466=((IkReal(1.00000000000000))*(sj13));
if( IKabs(((gconst78)*(((((r22)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x462)*(x464)))+(((cj11)*(sj13)*(x464)))+(((cj13)*(sj11)*(x463)))+(((IkReal(-1.00000000000000))*(cj11)*(x463)*(x466)))+(((sj13)*(x461))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(cj11)*(r22)*(x466)))+(((cj13)*(x461)))+(((sj11)*(sj13)*(x464)))+(((IkReal(-1.00000000000000))*(cj11)*(x462)*(x463)))+(((x464)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x463)*(x466))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((r22)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x462)*(x464)))+(((cj11)*(sj13)*(x464)))+(((cj13)*(sj11)*(x463)))+(((IkReal(-1.00000000000000))*(cj11)*(x463)*(x466)))+(((sj13)*(x461)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(cj11)*(r22)*(x466)))+(((cj13)*(x461)))+(((sj11)*(sj13)*(x464)))+(((IkReal(-1.00000000000000))*(cj11)*(x462)*(x463)))+(((x464)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x463)*(x466)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x467=IKsin(j10);
IkReal x468=IKcos(j10);
IkReal x469=((IkReal(1.00000000000000))*(sj13));
IkReal x470=((r11)*(sj9));
IkReal x471=((cj9)*(r01));
IkReal x472=((IkReal(1.00000000000000))*(cj11));
IkReal x473=((r21)*(sj14));
IkReal x474=((cj9)*(r02));
IkReal x475=((sj13)*(sj9));
IkReal x476=((cj14)*(r10));
IkReal x477=((IkReal(1.00000000000000))*(cj13));
IkReal x478=((cj14)*(r20));
IkReal x479=((sj11)*(x467));
IkReal x480=((sj14)*(x477));
IkReal x481=((sj11)*(x468));
IkReal x482=((cj14)*(cj9)*(r00));
IkReal x483=((x468)*(x472));
evalcond[0]=((((IkReal(-1.00000000000000))*(x477)*(x478)))+(((IkReal(-1.00000000000000))*(x483)))+(((cj13)*(x473)))+(x479)+(((IkReal(-1.00000000000000))*(r22)*(x469))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x467)*(x472)))+(((IkReal(-1.00000000000000))*(x469)*(x478)))+(((IkReal(-1.00000000000000))*(x481)))+(((sj13)*(x473)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x467)))+(((cj13)*(sj9)*(x476)))+(((IkReal(-1.00000000000000))*(x470)*(x480)))+(((sj13)*(x474)))+(x481)+(((r12)*(x475)))+(((IkReal(-1.00000000000000))*(x471)*(x480)))+(((cj13)*(x482))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x483)))+(((sj13)*(x482)))+(((IkReal(-1.00000000000000))*(sj14)*(x469)*(x471)))+(((IkReal(-1.00000000000000))*(sj14)*(x469)*(x470)))+(x479)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x477)))+(((x475)*(x476)))+(((IkReal(-1.00000000000000))*(x474)*(x477))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x484=((cj13)*(sj11));
IkReal x485=((r21)*(sj14));
IkReal x486=((cj11)*(cj13));
IkReal x487=((IkReal(1.00000000000000))*(sj13));
IkReal x488=((sj11)*(sj13));
IkReal x489=((cj14)*(r20));
if( IKabs(((gconst77)*(((((IkReal(-1.00000000000000))*(cj11)*(x487)*(x489)))+(((x484)*(x489)))+(((IkReal(-1.00000000000000))*(x484)*(x485)))+(((r22)*(x488)))+(((r22)*(x486)))+(((cj11)*(sj13)*(x485))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((IkReal(-1.00000000000000))*(x486)*(x489)))+(((x485)*(x486)))+(((x485)*(x488)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x487)))+(((r22)*(x484)))+(((IkReal(-1.00000000000000))*(sj11)*(x487)*(x489))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst77)*(((((IkReal(-1.00000000000000))*(cj11)*(x487)*(x489)))+(((x484)*(x489)))+(((IkReal(-1.00000000000000))*(x484)*(x485)))+(((r22)*(x488)))+(((r22)*(x486)))+(((cj11)*(sj13)*(x485)))))), ((gconst77)*(((((IkReal(-1.00000000000000))*(x486)*(x489)))+(((x485)*(x486)))+(((x485)*(x488)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x487)))+(((r22)*(x484)))+(((IkReal(-1.00000000000000))*(sj11)*(x487)*(x489)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x490=IKsin(j10);
IkReal x491=IKcos(j10);
IkReal x492=((IkReal(1.00000000000000))*(sj13));
IkReal x493=((cj14)*(r20));
IkReal x494=((r21)*(sj14));
IkReal x495=((IkReal(1.00000000000000))*(x491));
evalcond[0]=((((cj13)*(x494)))+(((IkReal(-1.00000000000000))*(cj11)*(x495)))+(((IkReal(-1.00000000000000))*(cj13)*(x493)))+(((IkReal(-1.00000000000000))*(r22)*(x492)))+(((sj11)*(x490))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x495)))+(((IkReal(-1.00000000000000))*(cj11)*(x490)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x492)*(x493)))+(((sj13)*(x494))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x496=(sj14)*(sj14);
IkReal x497=(cj14)*(cj14);
IkReal x498=((IkReal(1.00000000000000))*(x496));
IkReal x499=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x500=((IkReal(1.00000000000000))*(x497));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(x498)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x499)))+(((IkReal(-1.00000000000000))*(x498)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x500)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x499)))+(((IkReal(-1.00000000000000))*(x500)*((r01)*(r01))))));
IkReal x501=(sj14)*(sj14);
IkReal x502=(cj14)*(cj14);
IkReal x503=((IkReal(1.00000000000000))*(x501));
IkReal x504=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x505=((IkReal(1.00000000000000))*(x502));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x505)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x505)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x504)))+(((IkReal(-1.00000000000000))*(x503)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x504)))+(((IkReal(-1.00000000000000))*(x503)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x506=(sj14)*(sj14);
IkReal x507=(cj14)*(cj14);
IkReal x508=((cj14)*(sj13));
IkReal x509=((IkReal(1.00000000000000))*(r11));
IkReal x510=((cj13)*(r00));
IkReal x511=((sj13)*(sj14));
IkReal x512=((cj13)*(r01)*(r10));
gconst81=IKsign(((((x507)*(x512)))+(((IkReal(-1.00000000000000))*(x506)*(x509)*(x510)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x511)))+(((r00)*(r12)*(x511)))+(((IkReal(-1.00000000000000))*(r02)*(x508)*(x509)))+(((IkReal(-1.00000000000000))*(x507)*(x509)*(x510)))+(((r01)*(r12)*(x508)))+(((x506)*(x512)))));
IkReal x513=(sj14)*(sj14);
IkReal x514=(cj14)*(cj14);
IkReal x515=((cj14)*(sj13));
IkReal x516=((IkReal(1.00000000000000))*(r11));
IkReal x517=((cj13)*(r00));
IkReal x518=((sj13)*(sj14));
IkReal x519=((cj13)*(r01)*(r10));
dummyeval[0]=((((r01)*(r12)*(x515)))+(((IkReal(-1.00000000000000))*(x514)*(x516)*(x517)))+(((x514)*(x519)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x518)))+(((x513)*(x519)))+(((r00)*(r12)*(x518)))+(((IkReal(-1.00000000000000))*(r02)*(x515)*(x516)))+(((IkReal(-1.00000000000000))*(x513)*(x516)*(x517))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x520=((cj13)*(cj14));
IkReal x521=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst81)*(((((r12)*(sj13)))+(((r10)*(x520)))+(((IkReal(-1.00000000000000))*(r11)*(x521))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x521)))+(((r00)*(x520))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst81)*(((((r12)*(sj13)))+(((r10)*(x520)))+(((IkReal(-1.00000000000000))*(r11)*(x521)))))), ((gconst81)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x521)))+(((r00)*(x520)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x522=IKsin(j9);
IkReal x523=IKcos(j9);
IkReal x524=((IkReal(1.00000000000000))*(cj14));
IkReal x525=((IkReal(1.00000000000000))*(sj14));
IkReal x526=((cj13)*(cj14));
IkReal x527=((cj14)*(r10));
IkReal x528=((r01)*(sj14));
IkReal x529=((IkReal(1.00000000000000))*(r12));
IkReal x530=((sj13)*(x523));
IkReal x531=((r02)*(x522));
IkReal x532=((r11)*(x522));
IkReal x533=((r10)*(x523));
IkReal x534=((r01)*(x523));
IkReal x535=((sj13)*(x522));
IkReal x536=((r11)*(x523));
IkReal x537=((cj13)*(x522));
IkReal x538=((r10)*(x522));
IkReal x539=((r00)*(x523));
IkReal x540=((cj13)*(x523));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x524)*(x536)))+(((IkReal(-1.00000000000000))*(x525)*(x533)))+(((cj14)*(r01)*(x522)))+(((r00)*(sj14)*(x522))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x524)*(x532)))+(((IkReal(-1.00000000000000))*(x524)*(x534)))+(((IkReal(-1.00000000000000))*(x525)*(x539)))+(((IkReal(-1.00000000000000))*(x525)*(x538))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x525)*(x536)))+(((x526)*(x533)))+(((r12)*(x530)))+(((IkReal(-1.00000000000000))*(sj13)*(x531)))+(((x528)*(x537)))+(((IkReal(-1.00000000000000))*(r00)*(x524)*(x537))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x525)*(x530)))+(((cj13)*(x531)))+(((IkReal(-1.00000000000000))*(x529)*(x540)))+(((x528)*(x535)))+(((x527)*(x530)))+(((IkReal(-1.00000000000000))*(r00)*(x524)*(x535))));
evalcond[4]=((((r02)*(x530)))+(((IkReal(-1.00000000000000))*(cj13)*(x525)*(x534)))+(((IkReal(-1.00000000000000))*(cj13)*(x525)*(x532)))+(((x526)*(x538)))+(((x526)*(x539)))+(((r12)*(x535)))+(((cj10)*(sj11)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x529)*(x537)))+(((cj14)*(r00)*(x530)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r01)*(x525)*(x530)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((x527)*(x535)))+(((IkReal(-1.00000000000000))*(sj13)*(x525)*(x532)))+(((IkReal(-1.00000000000000))*(r02)*(x540))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst80)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x541=IKsin(j9);
IkReal x542=IKcos(j9);
IkReal x543=((IkReal(1.00000000000000))*(cj14));
IkReal x544=((IkReal(1.00000000000000))*(sj14));
IkReal x545=((cj13)*(cj14));
IkReal x546=((cj14)*(r10));
IkReal x547=((r01)*(sj14));
IkReal x548=((IkReal(1.00000000000000))*(r12));
IkReal x549=((sj13)*(x542));
IkReal x550=((r02)*(x541));
IkReal x551=((r11)*(x541));
IkReal x552=((r10)*(x542));
IkReal x553=((r01)*(x542));
IkReal x554=((sj13)*(x541));
IkReal x555=((r11)*(x542));
IkReal x556=((cj13)*(x541));
IkReal x557=((r10)*(x541));
IkReal x558=((r00)*(x542));
IkReal x559=((cj13)*(x542));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x544)*(x552)))+(((cj14)*(r01)*(x541)))+(((r00)*(sj14)*(x541)))+(((IkReal(-1.00000000000000))*(x543)*(x555))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x544)*(x558)))+(((IkReal(-1.00000000000000))*(x544)*(x557)))+(((IkReal(-1.00000000000000))*(x543)*(x553)))+(((IkReal(-1.00000000000000))*(x543)*(x551))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x543)*(x556)))+(((IkReal(-1.00000000000000))*(sj13)*(x550)))+(((r12)*(x549)))+(((IkReal(-1.00000000000000))*(cj13)*(x544)*(x555)))+(((x547)*(x556)))+(((x545)*(x552))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x543)*(x554)))+(((cj13)*(x550)))+(((IkReal(-1.00000000000000))*(r11)*(x544)*(x549)))+(((IkReal(-1.00000000000000))*(x548)*(x559)))+(((x547)*(x554)))+(((x546)*(x549))));
evalcond[4]=((((r02)*(x549)))+(((r12)*(x554)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x544)*(x553)))+(((IkReal(-1.00000000000000))*(cj13)*(x544)*(x551)))+(((x545)*(x558)))+(((x545)*(x557)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x544)*(x551)))+(((IkReal(-1.00000000000000))*(r02)*(x559)))+(((cj14)*(r00)*(x549)))+(((IkReal(-1.00000000000000))*(r01)*(x544)*(x549)))+(((IkReal(-1.00000000000000))*(x548)*(x556)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((x546)*(x554))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst75)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x560=IKsin(j9);
IkReal x561=IKcos(j9);
IkReal x562=((r10)*(sj14));
IkReal x563=((cj14)*(r11));
IkReal x564=((cj14)*(r10));
IkReal x565=((cj14)*(r00));
IkReal x566=((r11)*(sj14));
IkReal x567=((r00)*(sj14));
IkReal x568=((IkReal(1.00000000000000))*(x560));
IkReal x569=((cj13)*(x560));
IkReal x570=((sj13)*(x561));
IkReal x571=((r01)*(x560));
IkReal x572=((IkReal(1.00000000000000))*(x561));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x571)))+(((x560)*(x567)))+(((IkReal(-1.00000000000000))*(x563)*(x572)))+(((IkReal(-1.00000000000000))*(x562)*(x572))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x562)*(x568)))+(((IkReal(-1.00000000000000))*(x567)*(x572)))+(((IkReal(-1.00000000000000))*(x563)*(x568)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x572))));
evalcond[2]=((((r12)*(x570)))+(((IkReal(-1.00000000000000))*(cj13)*(x565)*(x568)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x568)))+(((IkReal(-1.00000000000000))*(cj13)*(x566)*(x572)))+(((r01)*(sj14)*(x569)))+(((cj13)*(x561)*(x564))));
evalcond[3]=((((sj13)*(sj14)*(x571)))+(((IkReal(-1.00000000000000))*(x566)*(x570)))+(((IkReal(-1.00000000000000))*(sj13)*(x565)*(x568)))+(((x564)*(x570)))+(((r02)*(x569)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x572))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x573=((cj13)*(sj14));
IkReal x574=((IkReal(1.00000000000000))*(cj11));
IkReal x575=((r11)*(sj9));
IkReal x576=((IkReal(1.00000000000000))*(sj11));
IkReal x577=((cj13)*(cj14));
IkReal x578=((cj11)*(sj13));
IkReal x579=((r12)*(sj9));
IkReal x580=((cj9)*(r01));
IkReal x581=((sj11)*(sj13));
IkReal x582=((cj9)*(r02));
IkReal x583=((r10)*(sj9));
IkReal x584=((cj9)*(r00));
if( IKabs(((gconst79)*(((((x578)*(x582)))+(((x578)*(x579)))+(((cj11)*(x577)*(x584)))+(((cj11)*(x577)*(x583)))+(((IkReal(-1.00000000000000))*(x573)*(x574)*(x580)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x576)))+(((IkReal(-1.00000000000000))*(r20)*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(x573)*(x574)*(x575)))+(((r21)*(sj11)*(x573))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x573)*(x576)*(x580)))+(((x581)*(x582)))+(((x579)*(x581)))+(((sj11)*(x577)*(x584)))+(((sj11)*(x577)*(x583)))+(((cj11)*(r20)*(x577)))+(((IkReal(-1.00000000000000))*(x573)*(x575)*(x576)))+(((IkReal(-1.00000000000000))*(r21)*(x573)*(x574)))+(((r22)*(x578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((x578)*(x582)))+(((x578)*(x579)))+(((cj11)*(x577)*(x584)))+(((cj11)*(x577)*(x583)))+(((IkReal(-1.00000000000000))*(x573)*(x574)*(x580)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x576)))+(((IkReal(-1.00000000000000))*(r20)*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(x573)*(x574)*(x575)))+(((r21)*(sj11)*(x573)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(x573)*(x576)*(x580)))+(((x581)*(x582)))+(((x579)*(x581)))+(((sj11)*(x577)*(x584)))+(((sj11)*(x577)*(x583)))+(((cj11)*(r20)*(x577)))+(((IkReal(-1.00000000000000))*(x573)*(x575)*(x576)))+(((IkReal(-1.00000000000000))*(r21)*(x573)*(x574)))+(((r22)*(x578)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x585=IKsin(j10);
IkReal x586=IKcos(j10);
IkReal x587=((IkReal(1.00000000000000))*(sj13));
IkReal x588=((r11)*(sj9));
IkReal x589=((cj9)*(r01));
IkReal x590=((IkReal(1.00000000000000))*(cj11));
IkReal x591=((r21)*(sj14));
IkReal x592=((cj9)*(r02));
IkReal x593=((sj13)*(sj9));
IkReal x594=((cj14)*(r10));
IkReal x595=((IkReal(1.00000000000000))*(cj13));
IkReal x596=((cj14)*(r20));
IkReal x597=((sj11)*(x585));
IkReal x598=((sj14)*(x595));
IkReal x599=((sj11)*(x586));
IkReal x600=((cj14)*(cj9)*(r00));
IkReal x601=((x586)*(x590));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x587)))+(((cj13)*(x591)))+(x597)+(((IkReal(-1.00000000000000))*(x595)*(x596)))+(((IkReal(-1.00000000000000))*(x601))));
evalcond[1]=((((sj13)*(x591)))+(((IkReal(-1.00000000000000))*(x587)*(x596)))+(((IkReal(-1.00000000000000))*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(x599)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x588)*(x598)))+(((sj13)*(x592)))+(((IkReal(-1.00000000000000))*(x589)*(x598)))+(((cj13)*(sj9)*(x594)))+(((cj11)*(x585)))+(x599)+(((r12)*(x593)))+(((cj13)*(x600))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x587)*(x589)))+(((IkReal(-1.00000000000000))*(sj14)*(x587)*(x588)))+(((sj13)*(x600)))+(((IkReal(-1.00000000000000))*(x592)*(x595)))+(x597)+(((IkReal(-1.00000000000000))*(x601)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x595)))+(((x593)*(x594))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x602=((r22)*(sj11));
IkReal x603=((IkReal(1.00000000000000))*(cj13));
IkReal x604=((cj14)*(r20));
IkReal x605=((r21)*(sj14));
IkReal x606=((cj11)*(cj13));
IkReal x607=((IkReal(1.00000000000000))*(sj13));
if( IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(sj11)*(x603)*(x605)))+(((sj13)*(x602)))+(((cj13)*(sj11)*(x604)))+(((cj11)*(sj13)*(x605)))+(((IkReal(-1.00000000000000))*(cj11)*(x604)*(x607)))+(((r22)*(x606))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((x605)*(x606)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x607)))+(((sj11)*(sj13)*(x605)))+(((IkReal(-1.00000000000000))*(cj11)*(x603)*(x604)))+(((cj13)*(x602)))+(((IkReal(-1.00000000000000))*(sj11)*(x604)*(x607))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((IkReal(-1.00000000000000))*(sj11)*(x603)*(x605)))+(((sj13)*(x602)))+(((cj13)*(sj11)*(x604)))+(((cj11)*(sj13)*(x605)))+(((IkReal(-1.00000000000000))*(cj11)*(x604)*(x607)))+(((r22)*(x606)))))), ((gconst78)*(((((x605)*(x606)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x607)))+(((sj11)*(sj13)*(x605)))+(((IkReal(-1.00000000000000))*(cj11)*(x603)*(x604)))+(((cj13)*(x602)))+(((IkReal(-1.00000000000000))*(sj11)*(x604)*(x607)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x608=IKsin(j10);
IkReal x609=IKcos(j10);
IkReal x610=((IkReal(1.00000000000000))*(sj13));
IkReal x611=((r11)*(sj9));
IkReal x612=((cj9)*(r01));
IkReal x613=((IkReal(1.00000000000000))*(cj11));
IkReal x614=((r21)*(sj14));
IkReal x615=((cj9)*(r02));
IkReal x616=((sj13)*(sj9));
IkReal x617=((cj14)*(r10));
IkReal x618=((IkReal(1.00000000000000))*(cj13));
IkReal x619=((cj14)*(r20));
IkReal x620=((sj11)*(x608));
IkReal x621=((sj14)*(x618));
IkReal x622=((sj11)*(x609));
IkReal x623=((cj14)*(cj9)*(r00));
IkReal x624=((x609)*(x613));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x610)))+(((IkReal(-1.00000000000000))*(x618)*(x619)))+(((IkReal(-1.00000000000000))*(x624)))+(x620)+(((cj13)*(x614))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x610)*(x619)))+(((sj13)*(x614)))+(((IkReal(-1.00000000000000))*(x622)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x608)*(x613))));
evalcond[2]=((((cj13)*(x623)))+(((sj13)*(x615)))+(((cj11)*(x608)))+(((IkReal(-1.00000000000000))*(x611)*(x621)))+(((cj13)*(sj9)*(x617)))+(((r12)*(x616)))+(((IkReal(-1.00000000000000))*(x612)*(x621)))+(x622));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x610)*(x612)))+(((IkReal(-1.00000000000000))*(sj14)*(x610)*(x611)))+(((IkReal(-1.00000000000000))*(x624)))+(((x616)*(x617)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x618)))+(x620)+(((IkReal(-1.00000000000000))*(x615)*(x618)))+(((sj13)*(x623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x625=((IkReal(4.00000000000000))*(sj14));
IkReal x626=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x626)))+(((IkReal(-1.00000000000000))*(npx)*(x625))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x626)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x625))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x626)))+(((IkReal(-1.00000000000000))*(npx)*(x625)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x626)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x625)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x626)))+(((IkReal(-1.00000000000000))*(npx)*(x625)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x626)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x625)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x627=IKsin(j11);
IkReal x628=((IkReal(1.00000000000000))*(sj13));
IkReal x629=((cj14)*(npx));
IkReal x630=((npy)*(sj14));
IkReal x631=((IkReal(0.250000000000000))*(x627));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj12)))+(((cj14)*(npy)))+(((IkReal(-0.0300000000000000))*(sj12)))+(((npx)*(sj14)))+(((sj12)*(x631))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x629)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x630)))+(((IkReal(-1.00000000000000))*(npz)*(x628))));
evalcond[2]=((((IkReal(0.0950000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x628)*(x629)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x631)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x630))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x632=(cj14)*(cj14);
IkReal x633=(sj14)*(sj14);
IkReal x634=((IkReal(1.00000000000000))*(r01));
IkReal x635=((sj13)*(sj14));
IkReal x636=((cj14)*(sj13));
IkReal x637=((r00)*(r11));
IkReal x638=((cj13)*(x632));
IkReal x639=((cj13)*(x633));
gconst2=IKsign(((((r02)*(r11)*(x636)))+(((r02)*(r10)*(x635)))+(((IkReal(-1.00000000000000))*(r12)*(x634)*(x636)))+(((IkReal(-1.00000000000000))*(r10)*(x634)*(x639)))+(((IkReal(-1.00000000000000))*(r10)*(x634)*(x638)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x635)))+(((x637)*(x639)))+(((x637)*(x638)))));
IkReal x640=(cj14)*(cj14);
IkReal x641=(sj14)*(sj14);
IkReal x642=((IkReal(1.00000000000000))*(r01));
IkReal x643=((sj13)*(sj14));
IkReal x644=((cj14)*(sj13));
IkReal x645=((r00)*(r11));
IkReal x646=((cj13)*(x640));
IkReal x647=((cj13)*(x641));
dummyeval[0]=((((r02)*(r10)*(x643)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x643)))+(((IkReal(-1.00000000000000))*(r12)*(x642)*(x644)))+(((x645)*(x647)))+(((x645)*(x646)))+(((IkReal(-1.00000000000000))*(r10)*(x642)*(x647)))+(((IkReal(-1.00000000000000))*(r10)*(x642)*(x646)))+(((r02)*(r11)*(x644))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x648=((IkReal(1.00000000000000))*(sj13));
IkReal x649=((npy)*(sj14));
IkReal x650=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x648)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x650)))+(((cj13)*(x649))));
evalcond[3]=((((r21)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x648)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x648)))+(((sj13)*(x649)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x651=(sj14)*(sj14);
IkReal x652=(cj14)*(cj14);
IkReal x653=((r01)*(r10));
IkReal x654=((cj13)*(cj14));
IkReal x655=((IkReal(1.00000000000000))*(r12));
IkReal x656=((cj13)*(sj14));
IkReal x657=((sj13)*(x651));
IkReal x658=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x659=((sj13)*(x652));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(r00)*(x655)*(x656)))+(((IkReal(-1.00000000000000))*(x657)*(x658)))+(((x653)*(x657)))+(((x653)*(x659)))+(((r02)*(r10)*(x656)))+(((IkReal(-1.00000000000000))*(r01)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x658)*(x659)))+(((r02)*(r11)*(x654)))));
IkReal x660=(sj14)*(sj14);
IkReal x661=(cj14)*(cj14);
IkReal x662=((r01)*(r10));
IkReal x663=((cj13)*(cj14));
IkReal x664=((IkReal(1.00000000000000))*(r12));
IkReal x665=((cj13)*(sj14));
IkReal x666=((sj13)*(x660));
IkReal x667=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x668=((sj13)*(x661));
dummyeval[0]=((((x662)*(x668)))+(((x662)*(x666)))+(((IkReal(-1.00000000000000))*(r01)*(x663)*(x664)))+(((IkReal(-1.00000000000000))*(r00)*(x664)*(x665)))+(((r02)*(r11)*(x663)))+(((IkReal(-1.00000000000000))*(x666)*(x667)))+(((IkReal(-1.00000000000000))*(x667)*(x668)))+(((r02)*(r10)*(x665))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x669=(sj13)*(sj13);
IkReal x670=(cj13)*(cj13);
IkReal x671=((cj14)*(r00));
IkReal x672=((r11)*(sj14));
IkReal x673=((r12)*(x670));
IkReal x674=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x675=((r02)*(x669));
IkReal x676=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x677=((r12)*(x669));
IkReal x678=((r02)*(x670));
gconst19=IKsign(((((x672)*(x675)))+(((x672)*(x678)))+(((IkReal(-1.00000000000000))*(x675)*(x676)))+(((x671)*(x673)))+(((x671)*(x677)))+(((IkReal(-1.00000000000000))*(x676)*(x678)))+(((IkReal(-1.00000000000000))*(x674)*(x677)))+(((IkReal(-1.00000000000000))*(x673)*(x674)))));
IkReal x679=(sj13)*(sj13);
IkReal x680=(cj13)*(cj13);
IkReal x681=((cj14)*(r00));
IkReal x682=((r11)*(sj14));
IkReal x683=((r12)*(x680));
IkReal x684=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x685=((r02)*(x679));
IkReal x686=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x687=((r12)*(x679));
IkReal x688=((r02)*(x680));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x685)*(x686)))+(((x682)*(x688)))+(((x682)*(x685)))+(((IkReal(-1.00000000000000))*(x686)*(x688)))+(((IkReal(-1.00000000000000))*(x684)*(x687)))+(((x681)*(x683)))+(((x681)*(x687)))+(((IkReal(-1.00000000000000))*(x683)*(x684))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x689=((cj13)*(cj14));
IkReal x690=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst19)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x690)))+(((r10)*(x689))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x690)))+(((r00)*(x689))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst19)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x690)))+(((r10)*(x689)))))), ((gconst19)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x690)))+(((r00)*(x689)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x691=IKsin(j9);
IkReal x692=IKcos(j9);
IkReal x693=((IkReal(1.00000000000000))*(sj14));
IkReal x694=((cj13)*(cj14));
IkReal x695=((IkReal(1.00000000000000))*(r00));
IkReal x696=((r01)*(sj14));
IkReal x697=((IkReal(1.00000000000000))*(cj13));
IkReal x698=((sj13)*(x692));
IkReal x699=((r02)*(x691));
IkReal x700=((r10)*(x692));
IkReal x701=((r11)*(x692));
IkReal x702=((sj13)*(x691));
IkReal x703=((cj14)*(x702));
evalcond[0]=((((IkReal(-1.00000000000000))*(x693)*(x700)))+(((r00)*(sj14)*(x691)))+(((cj14)*(r01)*(x691)))+(((IkReal(-1.00000000000000))*(cj14)*(x701))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x691)*(x694)*(x695)))+(((x694)*(x700)))+(((IkReal(-1.00000000000000))*(sj13)*(x699)))+(((r12)*(x698)))+(((cj13)*(x691)*(x696)))+(((IkReal(-1.00000000000000))*(cj13)*(x693)*(x701))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x693)*(x698)))+(((IkReal(-1.00000000000000))*(x695)*(x703)))+(((cj13)*(x699)))+(((cj14)*(r10)*(x698)))+(((IkReal(-1.00000000000000))*(r12)*(x692)*(x697)))+(((x696)*(x702))));
evalcond[3]=((((cj14)*(r00)*(x698)))+(((IkReal(-1.00000000000000))*(r02)*(x692)*(x697)))+(((IkReal(-1.00000000000000))*(r01)*(x693)*(x698)))+(((IkReal(-1.00000000000000))*(r12)*(x691)*(x697)))+(((IkReal(-1.00000000000000))*(r11)*(x693)*(x702)))+(((r10)*(x703))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x704=((IkReal(1.00000000000000))*(cj11));
IkReal x705=((r20)*(sj14));
IkReal x706=((cj14)*(r21));
IkReal x707=((cj14)*(cj9)*(r01));
IkReal x708=((r10)*(sj14)*(sj9));
IkReal x709=((cj9)*(r00)*(sj14));
IkReal x710=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((sj11)*(x708)))+(((sj11)*(x709)))+(((sj11)*(x707)))+(((sj11)*(x710)))+(((cj11)*(x706)))+(((cj11)*(x705))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((sj11)*(x705)))+(((sj11)*(x706)))+(((IkReal(-1.00000000000000))*(x704)*(x710)))+(((IkReal(-1.00000000000000))*(x704)*(x707)))+(((IkReal(-1.00000000000000))*(x704)*(x709)))+(((IkReal(-1.00000000000000))*(x704)*(x708))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((sj11)*(x708)))+(((sj11)*(x709)))+(((sj11)*(x707)))+(((sj11)*(x710)))+(((cj11)*(x706)))+(((cj11)*(x705)))))), ((gconst22)*(((((sj11)*(x705)))+(((sj11)*(x706)))+(((IkReal(-1.00000000000000))*(x704)*(x710)))+(((IkReal(-1.00000000000000))*(x704)*(x707)))+(((IkReal(-1.00000000000000))*(x704)*(x709)))+(((IkReal(-1.00000000000000))*(x704)*(x708)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x711=IKsin(j10);
IkReal x712=IKcos(j10);
IkReal x713=((cj13)*(sj14));
IkReal x714=((cj13)*(cj14));
IkReal x715=((r10)*(sj9));
IkReal x716=((IkReal(1.00000000000000))*(cj9));
IkReal x717=((sj11)*(x711));
IkReal x718=((IkReal(1.00000000000000))*(x712));
IkReal x719=((cj11)*(x711));
IkReal x720=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x721=((cj11)*(x718));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x718)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x719))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x714)))+(((IkReal(-1.00000000000000))*(x721)))+(((r21)*(x713)))+(x717));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x720)))+(((IkReal(-1.00000000000000))*(x721)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x716)))+(((IkReal(-1.00000000000000))*(sj14)*(x715)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x716)))+(x717));
evalcond[3]=((((IkReal(-1.00000000000000))*(x713)*(x720)))+(((x714)*(x715)))+(((sj11)*(x712)))+(((IkReal(-1.00000000000000))*(r01)*(x713)*(x716)))+(((cj9)*(r00)*(x714)))+(((cj9)*(r02)*(sj13)))+(x719)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x722=((cj11)*(r20));
IkReal x723=((IkReal(1.00000000000000))*(cj13));
IkReal x724=((r21)*(sj14));
IkReal x725=((r22)*(sj13));
IkReal x726=((cj14)*(sj11));
if( IKabs(((gconst21)*(((((sj14)*(x722)))+(((cj11)*(cj14)*(r21)))+(((cj13)*(r20)*(x726)))+(((IkReal(-1.00000000000000))*(sj11)*(x723)*(x724)))+(((sj11)*(x725))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x725)))+(((cj11)*(cj13)*(x724)))+(((r20)*(sj11)*(sj14)))+(((r21)*(x726)))+(((IkReal(-1.00000000000000))*(cj14)*(x722)*(x723))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj14)*(x722)))+(((cj11)*(cj14)*(r21)))+(((cj13)*(r20)*(x726)))+(((IkReal(-1.00000000000000))*(sj11)*(x723)*(x724)))+(((sj11)*(x725)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x725)))+(((cj11)*(cj13)*(x724)))+(((r20)*(sj11)*(sj14)))+(((r21)*(x726)))+(((IkReal(-1.00000000000000))*(cj14)*(x722)*(x723)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x727=IKsin(j10);
IkReal x728=IKcos(j10);
IkReal x729=((cj13)*(sj14));
IkReal x730=((cj13)*(cj14));
IkReal x731=((r10)*(sj9));
IkReal x732=((IkReal(1.00000000000000))*(cj9));
IkReal x733=((sj11)*(x727));
IkReal x734=((IkReal(1.00000000000000))*(x728));
IkReal x735=((cj11)*(x727));
IkReal x736=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x737=((cj11)*(x734));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x734)))+(((IkReal(-1.00000000000000))*(x735))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x730)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x737)))+(x733)+(((r21)*(x729))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x736)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x732)))+(((IkReal(-1.00000000000000))*(sj14)*(x731)))+(((IkReal(-1.00000000000000))*(x737)))+(x733)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x732))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x729)*(x732)))+(((cj9)*(r00)*(x730)))+(((cj9)*(r02)*(sj13)))+(x735)+(((r12)*(sj13)*(sj9)))+(((sj11)*(x728)))+(((IkReal(-1.00000000000000))*(x729)*(x736)))+(((x730)*(x731))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x738=((IkReal(1.00000000000000))*(cj14));
IkReal x739=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x739)))+(((IkReal(-1.00000000000000))*(r11)*(x738))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r01)*(x738)))+(((IkReal(-1.00000000000000))*(r00)*(x739))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x739)))+(((IkReal(-1.00000000000000))*(r11)*(x738)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r01)*(x738)))+(((IkReal(-1.00000000000000))*(r00)*(x739)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x740=IKsin(j9);
IkReal x741=IKcos(j9);
IkReal x742=((IkReal(1.00000000000000))*(sj14));
IkReal x743=((cj13)*(cj14));
IkReal x744=((IkReal(1.00000000000000))*(r00));
IkReal x745=((r01)*(sj14));
IkReal x746=((IkReal(1.00000000000000))*(cj13));
IkReal x747=((sj13)*(x741));
IkReal x748=((r02)*(x740));
IkReal x749=((r10)*(x741));
IkReal x750=((r11)*(x741));
IkReal x751=((sj13)*(x740));
IkReal x752=((cj14)*(x751));
evalcond[0]=((((cj14)*(r01)*(x740)))+(((r00)*(sj14)*(x740)))+(((IkReal(-1.00000000000000))*(x742)*(x749)))+(((IkReal(-1.00000000000000))*(cj14)*(x750))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x740)*(x743)*(x744)))+(((cj13)*(x740)*(x745)))+(((IkReal(-1.00000000000000))*(sj13)*(x748)))+(((x743)*(x749)))+(((r12)*(x747)))+(((IkReal(-1.00000000000000))*(cj13)*(x742)*(x750))));
evalcond[2]=((IkReal(1.00000000000000))+(((x745)*(x751)))+(((IkReal(-1.00000000000000))*(r11)*(x742)*(x747)))+(((cj13)*(x748)))+(((cj14)*(r10)*(x747)))+(((IkReal(-1.00000000000000))*(r12)*(x741)*(x746)))+(((IkReal(-1.00000000000000))*(x744)*(x752))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x742)*(x747)))+(((IkReal(-1.00000000000000))*(r12)*(x740)*(x746)))+(((r10)*(x752)))+(((IkReal(-1.00000000000000))*(r11)*(x742)*(x751)))+(((IkReal(-1.00000000000000))*(r02)*(x741)*(x746)))+(((cj14)*(r00)*(x747))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x753=((IkReal(1.00000000000000))*(cj11));
IkReal x754=((r20)*(sj14));
IkReal x755=((cj14)*(r21));
IkReal x756=((cj14)*(cj9)*(r01));
IkReal x757=((r10)*(sj14)*(sj9));
IkReal x758=((cj9)*(r00)*(sj14));
IkReal x759=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((cj11)*(x755)))+(((cj11)*(x754)))+(((sj11)*(x756)))+(((sj11)*(x757)))+(((sj11)*(x758)))+(((sj11)*(x759))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(x753)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x756)))+(((IkReal(-1.00000000000000))*(x753)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(((sj11)*(x754)))+(((sj11)*(x755))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((cj11)*(x755)))+(((cj11)*(x754)))+(((sj11)*(x756)))+(((sj11)*(x757)))+(((sj11)*(x758)))+(((sj11)*(x759)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(x753)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x756)))+(((IkReal(-1.00000000000000))*(x753)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(((sj11)*(x754)))+(((sj11)*(x755)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x760=IKsin(j10);
IkReal x761=IKcos(j10);
IkReal x762=((cj13)*(sj14));
IkReal x763=((cj13)*(cj14));
IkReal x764=((r10)*(sj9));
IkReal x765=((IkReal(1.00000000000000))*(cj9));
IkReal x766=((sj11)*(x760));
IkReal x767=((IkReal(1.00000000000000))*(x761));
IkReal x768=((cj11)*(x760));
IkReal x769=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x770=((cj11)*(x767));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x768)))+(((IkReal(-1.00000000000000))*(sj11)*(x767))));
evalcond[1]=((((r21)*(x762)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x763)))+(x766)+(((IkReal(-1.00000000000000))*(x770))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x765)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x765)))+(((IkReal(-1.00000000000000))*(cj14)*(x769)))+(x766)+(((IkReal(-1.00000000000000))*(x770)))+(((IkReal(-1.00000000000000))*(sj14)*(x764))));
evalcond[3]=((((sj11)*(x761)))+(((cj9)*(r00)*(x763)))+(((IkReal(-1.00000000000000))*(x762)*(x769)))+(((cj9)*(r02)*(sj13)))+(((x763)*(x764)))+(((IkReal(-1.00000000000000))*(r01)*(x762)*(x765)))+(x768)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x771=((cj11)*(r20));
IkReal x772=((IkReal(1.00000000000000))*(cj13));
IkReal x773=((r21)*(sj14));
IkReal x774=((r22)*(sj13));
IkReal x775=((cj14)*(sj11));
if( IKabs(((gconst21)*(((((cj11)*(cj14)*(r21)))+(((cj13)*(r20)*(x775)))+(((sj11)*(x774)))+(((IkReal(-1.00000000000000))*(sj11)*(x772)*(x773)))+(((sj14)*(x771))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x774)))+(((cj11)*(cj13)*(x773)))+(((r21)*(x775)))+(((r20)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x771)*(x772))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((cj11)*(cj14)*(r21)))+(((cj13)*(r20)*(x775)))+(((sj11)*(x774)))+(((IkReal(-1.00000000000000))*(sj11)*(x772)*(x773)))+(((sj14)*(x771)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x774)))+(((cj11)*(cj13)*(x773)))+(((r21)*(x775)))+(((r20)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x771)*(x772)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x776=IKsin(j10);
IkReal x777=IKcos(j10);
IkReal x778=((cj13)*(sj14));
IkReal x779=((cj13)*(cj14));
IkReal x780=((r10)*(sj9));
IkReal x781=((IkReal(1.00000000000000))*(cj9));
IkReal x782=((sj11)*(x776));
IkReal x783=((IkReal(1.00000000000000))*(x777));
IkReal x784=((cj11)*(x776));
IkReal x785=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x786=((cj11)*(x783));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x784)))+(((IkReal(-1.00000000000000))*(sj11)*(x783))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x779)))+(((IkReal(-1.00000000000000))*(x786)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x778)))+(x782));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x781)))+(((IkReal(-1.00000000000000))*(x786)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x781)))+(((IkReal(-1.00000000000000))*(cj14)*(x785)))+(x782)+(((IkReal(-1.00000000000000))*(sj14)*(x780))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x778)*(x781)))+(((cj9)*(r02)*(sj13)))+(((x779)*(x780)))+(((cj9)*(r00)*(x779)))+(((sj11)*(x777)))+(x784)+(((IkReal(-1.00000000000000))*(x778)*(x785)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x787=((cj11)*(r20));
IkReal x788=((IkReal(1.00000000000000))*(cj13));
IkReal x789=((r21)*(sj14));
IkReal x790=((r22)*(sj13));
IkReal x791=((r20)*(sj11));
IkReal x792=((cj14)*(r21));
if( IKabs(((gconst20)*(((((cj11)*(x792)))+(((IkReal(-1.00000000000000))*(sj11)*(x788)*(x789)))+(((cj13)*(cj14)*(x791)))+(((sj11)*(x790)))+(((sj14)*(x787))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj11)*(x790)))+(((cj11)*(cj13)*(x789)))+(((IkReal(-1.00000000000000))*(cj14)*(x787)*(x788)))+(((sj11)*(x792)))+(((sj14)*(x791))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst20)*(((((cj11)*(x792)))+(((IkReal(-1.00000000000000))*(sj11)*(x788)*(x789)))+(((cj13)*(cj14)*(x791)))+(((sj11)*(x790)))+(((sj14)*(x787)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(cj11)*(x790)))+(((cj11)*(cj13)*(x789)))+(((IkReal(-1.00000000000000))*(cj14)*(x787)*(x788)))+(((sj11)*(x792)))+(((sj14)*(x791)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x793=IKsin(j10);
IkReal x794=IKcos(j10);
IkReal x795=((IkReal(1.00000000000000))*(x794));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x793)))+(((IkReal(-1.00000000000000))*(sj11)*(x795))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj11)*(x795)))+(((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x796=(sj14)*(sj14);
IkReal x797=(cj14)*(cj14);
IkReal x798=((r01)*(r10));
IkReal x799=((cj13)*(cj14));
IkReal x800=((IkReal(1.00000000000000))*(r12));
IkReal x801=((cj13)*(sj14));
IkReal x802=((sj13)*(x796));
IkReal x803=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x804=((sj13)*(x797));
gconst24=IKsign(((((r02)*(r10)*(x801)))+(((r02)*(r11)*(x799)))+(((IkReal(-1.00000000000000))*(r00)*(x800)*(x801)))+(((x798)*(x802)))+(((x798)*(x804)))+(((IkReal(-1.00000000000000))*(r01)*(x799)*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))));
IkReal x805=(sj14)*(sj14);
IkReal x806=(cj14)*(cj14);
IkReal x807=((r01)*(r10));
IkReal x808=((cj13)*(cj14));
IkReal x809=((IkReal(1.00000000000000))*(r12));
IkReal x810=((cj13)*(sj14));
IkReal x811=((sj13)*(x805));
IkReal x812=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x813=((sj13)*(x806));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x812)*(x813)))+(((r02)*(r11)*(x808)))+(((IkReal(-1.00000000000000))*(r00)*(x809)*(x810)))+(((IkReal(-1.00000000000000))*(x811)*(x812)))+(((x807)*(x813)))+(((x807)*(x811)))+(((r02)*(r10)*(x810)))+(((IkReal(-1.00000000000000))*(r01)*(x808)*(x809))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x814=(sj14)*(sj14);
IkReal x815=(cj14)*(cj14);
IkReal x816=((IkReal(1.00000000000000))*(x814));
IkReal x817=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x818=((IkReal(1.00000000000000))*(x815));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(x818)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x817)))+(((IkReal(-1.00000000000000))*(x816)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x816)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x818)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x817)))));
IkReal x819=(sj14)*(sj14);
IkReal x820=(cj14)*(cj14);
IkReal x821=((IkReal(1.00000000000000))*(x819));
IkReal x822=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x823=((IkReal(1.00000000000000))*(x820));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x822)))+(((IkReal(-1.00000000000000))*(x821)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x822)))+(((IkReal(-1.00000000000000))*(x821)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x823)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x823)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x824=((cj14)*(r11));
IkReal x825=((cj10)*(cj11));
IkReal x826=((cj14)*(r01));
IkReal x827=((sj14)*(x825));
IkReal x828=((IkReal(1.00000000000000))*(sj10)*(sj11));
if( IKabs(((gconst23)*(((((x824)*(x825)))+(((r10)*(x827)))+(((IkReal(-1.00000000000000))*(x824)*(x828)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x828))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((x825)*(x826)))+(((r00)*(x827)))+(((IkReal(-1.00000000000000))*(x826)*(x828)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x828))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst23)*(((((x824)*(x825)))+(((r10)*(x827)))+(((IkReal(-1.00000000000000))*(x824)*(x828)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x828)))))), ((gconst23)*(((((x825)*(x826)))+(((r00)*(x827)))+(((IkReal(-1.00000000000000))*(x826)*(x828)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x828)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x829=IKsin(j9);
IkReal x830=IKcos(j9);
IkReal x831=((IkReal(1.00000000000000))*(cj14));
IkReal x832=((IkReal(1.00000000000000))*(sj14));
IkReal x833=((cj13)*(cj14));
IkReal x834=((cj14)*(r10));
IkReal x835=((r01)*(sj14));
IkReal x836=((IkReal(1.00000000000000))*(r12));
IkReal x837=((sj13)*(x830));
IkReal x838=((r02)*(x829));
IkReal x839=((r11)*(x829));
IkReal x840=((r10)*(x830));
IkReal x841=((r01)*(x830));
IkReal x842=((sj13)*(x829));
IkReal x843=((r11)*(x830));
IkReal x844=((cj13)*(x829));
IkReal x845=((r10)*(x829));
IkReal x846=((r00)*(x830));
IkReal x847=((cj13)*(x830));
evalcond[0]=((((IkReal(-1.00000000000000))*(x831)*(x843)))+(((r00)*(sj14)*(x829)))+(((cj14)*(r01)*(x829)))+(((IkReal(-1.00000000000000))*(x832)*(x840))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x831)*(x841)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x832)*(x846)))+(((IkReal(-1.00000000000000))*(x832)*(x845)))+(((IkReal(-1.00000000000000))*(x831)*(x839))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x838)))+(((x833)*(x840)))+(((x835)*(x844)))+(((IkReal(-1.00000000000000))*(r00)*(x831)*(x844)))+(((IkReal(-1.00000000000000))*(cj13)*(x832)*(x843)))+(((r12)*(x837))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x836)*(x847)))+(((x835)*(x842)))+(((IkReal(-1.00000000000000))*(r00)*(x831)*(x842)))+(((IkReal(-1.00000000000000))*(r11)*(x832)*(x837)))+(((x834)*(x837)))+(((cj13)*(x838))));
evalcond[4]=((((x833)*(x845)))+(((x833)*(x846)))+(((r02)*(x837)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x832)*(x839)))+(((IkReal(-1.00000000000000))*(cj13)*(x832)*(x841)))+(((r12)*(x842)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x832)*(x839)))+(((IkReal(-1.00000000000000))*(x836)*(x844)))+(((IkReal(-1.00000000000000))*(r02)*(x847)))+(((cj14)*(r00)*(x837)))+(((x834)*(x842)))+(((IkReal(-1.00000000000000))*(r01)*(x832)*(x837))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x848=((IkReal(1.00000000000000))*(sj14));
IkReal x849=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x848)))+(((IkReal(-1.00000000000000))*(r11)*(x849))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x849)))+(((IkReal(-1.00000000000000))*(r00)*(x848))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x848)))+(((IkReal(-1.00000000000000))*(r11)*(x849)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x849)))+(((IkReal(-1.00000000000000))*(r00)*(x848)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x850=IKsin(j9);
IkReal x851=IKcos(j9);
IkReal x852=((IkReal(1.00000000000000))*(cj14));
IkReal x853=((IkReal(1.00000000000000))*(sj14));
IkReal x854=((cj13)*(cj14));
IkReal x855=((cj14)*(r10));
IkReal x856=((r01)*(sj14));
IkReal x857=((IkReal(1.00000000000000))*(r12));
IkReal x858=((sj13)*(x851));
IkReal x859=((r02)*(x850));
IkReal x860=((r11)*(x850));
IkReal x861=((r10)*(x851));
IkReal x862=((r01)*(x851));
IkReal x863=((sj13)*(x850));
IkReal x864=((r11)*(x851));
IkReal x865=((cj13)*(x850));
IkReal x866=((r10)*(x850));
IkReal x867=((r00)*(x851));
IkReal x868=((cj13)*(x851));
evalcond[0]=((((r00)*(sj14)*(x850)))+(((cj14)*(r01)*(x850)))+(((IkReal(-1.00000000000000))*(x852)*(x864)))+(((IkReal(-1.00000000000000))*(x853)*(x861))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x852)*(x860)))+(((IkReal(-1.00000000000000))*(x852)*(x862)))+(((IkReal(-1.00000000000000))*(x853)*(x867)))+(((IkReal(-1.00000000000000))*(x853)*(x866)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
evalcond[2]=((((r12)*(x858)))+(((x856)*(x865)))+(((IkReal(-1.00000000000000))*(r00)*(x852)*(x865)))+(((IkReal(-1.00000000000000))*(sj13)*(x859)))+(((IkReal(-1.00000000000000))*(cj13)*(x853)*(x864)))+(((x854)*(x861))));
evalcond[3]=((IkReal(1.00000000000000))+(((x855)*(x858)))+(((cj13)*(x859)))+(((x856)*(x863)))+(((IkReal(-1.00000000000000))*(r00)*(x852)*(x863)))+(((IkReal(-1.00000000000000))*(r11)*(x853)*(x858)))+(((IkReal(-1.00000000000000))*(x857)*(x868))));
evalcond[4]=((((r12)*(x863)))+(((cj10)*(sj11)))+(((r02)*(x858)))+(((IkReal(-1.00000000000000))*(cj13)*(x853)*(x860)))+(((IkReal(-1.00000000000000))*(cj13)*(x853)*(x862)))+(((x854)*(x866)))+(((x854)*(x867)))+(((cj11)*(sj10))));
evalcond[5]=((((cj14)*(r00)*(x858)))+(((IkReal(-1.00000000000000))*(sj13)*(x853)*(x860)))+(((x855)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(x868)))+(((IkReal(-1.00000000000000))*(r01)*(x853)*(x858)))+(((IkReal(-1.00000000000000))*(x857)*(x865))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x869=((IkReal(1.00000000000000))*(sj13));
IkReal x870=((npy)*(sj14));
IkReal x871=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x871)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x870)))+(((IkReal(-1.00000000000000))*(npz)*(x869))));
evalcond[3]=((((r21)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x869)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(-0.0950000000000000))+(((sj13)*(x870)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x869)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x872=(sj14)*(sj14);
IkReal x873=(cj14)*(cj14);
IkReal x874=((cj13)*(r12));
IkReal x875=((IkReal(1.00000000000000))*(r10));
IkReal x876=((cj13)*(r02));
IkReal x877=((r01)*(sj13));
IkReal x878=((r00)*(r11)*(sj13));
gconst25=IKsign(((((x872)*(x878)))+(((IkReal(-1.00000000000000))*(x872)*(x875)*(x877)))+(((IkReal(-1.00000000000000))*(x873)*(x875)*(x877)))+(((IkReal(-1.00000000000000))*(sj14)*(x875)*(x876)))+(((x873)*(x878)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x876)))+(((r00)*(sj14)*(x874)))+(((cj14)*(r01)*(x874)))));
IkReal x879=(sj14)*(sj14);
IkReal x880=(cj14)*(cj14);
IkReal x881=((cj13)*(r12));
IkReal x882=((IkReal(1.00000000000000))*(r10));
IkReal x883=((cj13)*(r02));
IkReal x884=((r01)*(sj13));
IkReal x885=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x880)*(x882)*(x884)))+(((x879)*(x885)))+(((IkReal(-1.00000000000000))*(sj14)*(x882)*(x883)))+(((x880)*(x885)))+(((cj14)*(r01)*(x881)))+(((r00)*(sj14)*(x881)))+(((IkReal(-1.00000000000000))*(x879)*(x882)*(x884)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x883))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x886=(cj13)*(cj13);
IkReal x887=(sj13)*(sj13);
IkReal x888=((r01)*(sj14));
IkReal x889=((r12)*(x887));
IkReal x890=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x891=((cj14)*(r02)*(r10));
IkReal x892=((r12)*(x886));
IkReal x893=((IkReal(1.00000000000000))*(r02)*(r11)*(sj14));
gconst26=IKsign(((((x886)*(x891)))+(((IkReal(-1.00000000000000))*(x889)*(x890)))+(((x888)*(x889)))+(((x888)*(x892)))+(((IkReal(-1.00000000000000))*(x890)*(x892)))+(((x887)*(x891)))+(((IkReal(-1.00000000000000))*(x886)*(x893)))+(((IkReal(-1.00000000000000))*(x887)*(x893)))));
IkReal x894=(cj13)*(cj13);
IkReal x895=(sj13)*(sj13);
IkReal x896=((r01)*(sj14));
IkReal x897=((r12)*(x895));
IkReal x898=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x899=((cj14)*(r02)*(r10));
IkReal x900=((r12)*(x894));
IkReal x901=x893;
dummyeval[0]=((((x894)*(x899)))+(((IkReal(-1.00000000000000))*(x895)*(x901)))+(((x896)*(x897)))+(((IkReal(-1.00000000000000))*(x894)*(x901)))+(((x895)*(x899)))+(((IkReal(-1.00000000000000))*(x898)*(x900)))+(((x896)*(x900)))+(((IkReal(-1.00000000000000))*(x897)*(x898))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x902=((cj13)*(cj14));
IkReal x903=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x903)))+(((r10)*(x902))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r00)*(x902)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x903))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x903)))+(((r10)*(x902)))))), ((gconst26)*(((((r00)*(x902)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x903)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x904=IKsin(j9);
IkReal x905=IKcos(j9);
IkReal x906=((IkReal(1.00000000000000))*(sj14));
IkReal x907=((cj13)*(cj14));
IkReal x908=((IkReal(1.00000000000000))*(r00));
IkReal x909=((r01)*(sj14));
IkReal x910=((IkReal(1.00000000000000))*(cj13));
IkReal x911=((sj13)*(x905));
IkReal x912=((r02)*(x904));
IkReal x913=((r10)*(x905));
IkReal x914=((r11)*(x905));
IkReal x915=((sj13)*(x904));
IkReal x916=((cj14)*(x915));
evalcond[0]=((((IkReal(-1.00000000000000))*(x906)*(x913)))+(((cj14)*(r01)*(x904)))+(((r00)*(sj14)*(x904)))+(((IkReal(-1.00000000000000))*(cj14)*(x914))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x912)))+(((cj13)*(x904)*(x909)))+(((IkReal(-1.00000000000000))*(x904)*(x907)*(x908)))+(((r12)*(x911)))+(((x907)*(x913)))+(((IkReal(-1.00000000000000))*(cj13)*(x906)*(x914))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x906)*(x911)))+(((x909)*(x915)))+(((IkReal(-1.00000000000000))*(x908)*(x916)))+(((IkReal(-1.00000000000000))*(r12)*(x905)*(x910)))+(((cj14)*(r10)*(x911)))+(((cj13)*(x912))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x906)*(x915)))+(((cj14)*(r00)*(x911)))+(((IkReal(-1.00000000000000))*(r01)*(x906)*(x911)))+(((r10)*(x916)))+(((IkReal(-1.00000000000000))*(r12)*(x904)*(x910)))+(((IkReal(-1.00000000000000))*(r02)*(x905)*(x910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x917=((IkReal(1.00000000000000))*(sj11));
IkReal x918=((cj14)*(r21));
IkReal x919=((IkReal(1.00000000000000))*(cj11));
IkReal x920=((r20)*(sj14));
IkReal x921=((cj9)*(r00)*(sj14));
IkReal x922=((cj14)*(r11)*(sj9));
IkReal x923=((cj14)*(cj9)*(r01));
IkReal x924=((r10)*(sj14)*(sj9));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x924)))+(((IkReal(-1.00000000000000))*(x917)*(x921)))+(((IkReal(-1.00000000000000))*(x917)*(x923)))+(((IkReal(-1.00000000000000))*(x917)*(x922))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((cj11)*(x924)))+(((cj11)*(x922)))+(((cj11)*(x923)))+(((cj11)*(x921)))+(((IkReal(-1.00000000000000))*(x917)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x918))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x924)))+(((IkReal(-1.00000000000000))*(x917)*(x921)))+(((IkReal(-1.00000000000000))*(x917)*(x923)))+(((IkReal(-1.00000000000000))*(x917)*(x922)))))), ((gconst29)*(((((cj11)*(x924)))+(((cj11)*(x922)))+(((cj11)*(x923)))+(((cj11)*(x921)))+(((IkReal(-1.00000000000000))*(x917)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x918)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x925=IKsin(j10);
IkReal x926=IKcos(j10);
IkReal x927=((cj14)*(sj9));
IkReal x928=((IkReal(1.00000000000000))*(r11));
IkReal x929=((cj13)*(sj14));
IkReal x930=((IkReal(1.00000000000000))*(cj9));
IkReal x931=((cj13)*(cj14));
IkReal x932=((cj11)*(x925));
IkReal x933=((sj11)*(x926));
IkReal x934=((cj11)*(x926));
IkReal x935=((sj11)*(x925));
IkReal x936=((x933)+(x932));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x936));
evalcond[1]=((((r21)*(x929)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(x934)))+(x935));
evalcond[2]=((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x935)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x930)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x930)))+(x934));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x929)*(x930)))+(((cj9)*(r00)*(x931)))+(((IkReal(-1.00000000000000))*(sj9)*(x928)*(x929)))+(((cj13)*(r10)*(x927)))+(x936)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x937=((cj13)*(sj11));
IkReal x938=((r21)*(sj14));
IkReal x939=((cj14)*(r20));
IkReal x940=((cj11)*(cj13));
IkReal x941=((r22)*(sj13));
IkReal x942=((r20)*(sj14));
IkReal x943=((cj14)*(r21));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(sj11)*(x941)))+(((x937)*(x938)))+(((cj11)*(x942)))+(((cj11)*(x943)))+(((IkReal(-1.00000000000000))*(x937)*(x939))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((cj11)*(x941)))+(((x939)*(x940)))+(((IkReal(-1.00000000000000))*(x938)*(x940)))+(((sj11)*(x943)))+(((sj11)*(x942))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(sj11)*(x941)))+(((x937)*(x938)))+(((cj11)*(x942)))+(((cj11)*(x943)))+(((IkReal(-1.00000000000000))*(x937)*(x939)))))), ((gconst28)*(((((cj11)*(x941)))+(((x939)*(x940)))+(((IkReal(-1.00000000000000))*(x938)*(x940)))+(((sj11)*(x943)))+(((sj11)*(x942)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x944=IKsin(j10);
IkReal x945=IKcos(j10);
IkReal x946=((cj14)*(sj9));
IkReal x947=((IkReal(1.00000000000000))*(r11));
IkReal x948=((cj13)*(sj14));
IkReal x949=((IkReal(1.00000000000000))*(cj9));
IkReal x950=((cj13)*(cj14));
IkReal x951=((cj11)*(x944));
IkReal x952=((sj11)*(x945));
IkReal x953=((cj11)*(x945));
IkReal x954=((sj11)*(x944));
IkReal x955=((x952)+(x951));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x955));
evalcond[1]=((((r21)*(x948)))+(((IkReal(-1.00000000000000))*(x953)))+(((IkReal(-1.00000000000000))*(r20)*(x950)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x954));
evalcond[2]=((((IkReal(-1.00000000000000))*(x946)*(x947)))+(((IkReal(-1.00000000000000))*(x954)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x949)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x949)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x953));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x948)*(x949)))+(((cj13)*(r10)*(x946)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x947)*(x948)))+(((cj9)*(r00)*(x950)))+(x955)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x956=((IkReal(1.00000000000000))*(sj14));
IkReal x957=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x956)))+(((IkReal(-1.00000000000000))*(r11)*(x957))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x957)))+(((IkReal(-1.00000000000000))*(r00)*(x956))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x956)))+(((IkReal(-1.00000000000000))*(r11)*(x957)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x957)))+(((IkReal(-1.00000000000000))*(r00)*(x956)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x958=IKsin(j9);
IkReal x959=IKcos(j9);
IkReal x960=((IkReal(1.00000000000000))*(sj14));
IkReal x961=((cj13)*(cj14));
IkReal x962=((IkReal(1.00000000000000))*(r00));
IkReal x963=((r01)*(sj14));
IkReal x964=((IkReal(1.00000000000000))*(cj13));
IkReal x965=((sj13)*(x959));
IkReal x966=((r02)*(x958));
IkReal x967=((r10)*(x959));
IkReal x968=((r11)*(x959));
IkReal x969=((sj13)*(x958));
IkReal x970=((cj14)*(x969));
evalcond[0]=((((cj14)*(r01)*(x958)))+(((IkReal(-1.00000000000000))*(cj14)*(x968)))+(((IkReal(-1.00000000000000))*(x960)*(x967)))+(((r00)*(sj14)*(x958))));
evalcond[1]=((((cj13)*(x958)*(x963)))+(((x961)*(x967)))+(((IkReal(-1.00000000000000))*(x958)*(x961)*(x962)))+(((r12)*(x965)))+(((IkReal(-1.00000000000000))*(cj13)*(x960)*(x968)))+(((IkReal(-1.00000000000000))*(sj13)*(x966))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj14)*(r10)*(x965)))+(((IkReal(-1.00000000000000))*(x962)*(x970)))+(((IkReal(-1.00000000000000))*(r11)*(x960)*(x965)))+(((x963)*(x969)))+(((cj13)*(x966)))+(((IkReal(-1.00000000000000))*(r12)*(x959)*(x964))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x960)*(x969)))+(((IkReal(-1.00000000000000))*(r01)*(x960)*(x965)))+(((IkReal(-1.00000000000000))*(r12)*(x958)*(x964)))+(((IkReal(-1.00000000000000))*(r02)*(x959)*(x964)))+(((r10)*(x970)))+(((cj14)*(r00)*(x965))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x971=((IkReal(1.00000000000000))*(sj11));
IkReal x972=((cj14)*(r21));
IkReal x973=((IkReal(1.00000000000000))*(cj11));
IkReal x974=((r20)*(sj14));
IkReal x975=((cj9)*(r00)*(sj14));
IkReal x976=((cj14)*(r11)*(sj9));
IkReal x977=((cj14)*(cj9)*(r01));
IkReal x978=((r10)*(sj14)*(sj9));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x971)*(x976)))+(((IkReal(-1.00000000000000))*(x971)*(x977)))+(((IkReal(-1.00000000000000))*(x971)*(x978)))+(((IkReal(-1.00000000000000))*(x971)*(x975)))+(((IkReal(-1.00000000000000))*(x972)*(x973)))+(((IkReal(-1.00000000000000))*(x973)*(x974))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((cj11)*(x975)))+(((cj11)*(x977)))+(((cj11)*(x976)))+(((cj11)*(x978)))+(((IkReal(-1.00000000000000))*(x971)*(x972)))+(((IkReal(-1.00000000000000))*(x971)*(x974))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x971)*(x976)))+(((IkReal(-1.00000000000000))*(x971)*(x977)))+(((IkReal(-1.00000000000000))*(x971)*(x978)))+(((IkReal(-1.00000000000000))*(x971)*(x975)))+(((IkReal(-1.00000000000000))*(x972)*(x973)))+(((IkReal(-1.00000000000000))*(x973)*(x974)))))), ((gconst29)*(((((cj11)*(x975)))+(((cj11)*(x977)))+(((cj11)*(x976)))+(((cj11)*(x978)))+(((IkReal(-1.00000000000000))*(x971)*(x972)))+(((IkReal(-1.00000000000000))*(x971)*(x974)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x979=IKsin(j10);
IkReal x980=IKcos(j10);
IkReal x981=((cj14)*(sj9));
IkReal x982=((IkReal(1.00000000000000))*(r11));
IkReal x983=((cj13)*(sj14));
IkReal x984=((IkReal(1.00000000000000))*(cj9));
IkReal x985=((cj13)*(cj14));
IkReal x986=((cj11)*(x979));
IkReal x987=((sj11)*(x980));
IkReal x988=((cj11)*(x980));
IkReal x989=((sj11)*(x979));
IkReal x990=((x986)+(x987));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x990));
evalcond[1]=((((IkReal(-1.00000000000000))*(x988)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x983)))+(((IkReal(-1.00000000000000))*(r20)*(x985)))+(x989));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x984)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x984)))+(((IkReal(-1.00000000000000))*(x989)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x981)*(x982)))+(x988));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x982)*(x983)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x981)))+(((cj9)*(r00)*(x985)))+(x990)+(((IkReal(-1.00000000000000))*(r01)*(x983)*(x984)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x991=((cj13)*(sj11));
IkReal x992=((r21)*(sj14));
IkReal x993=((cj14)*(r20));
IkReal x994=((cj11)*(cj13));
IkReal x995=((r22)*(sj13));
IkReal x996=((r20)*(sj14));
IkReal x997=((cj14)*(r21));
if( IKabs(((gconst28)*(((((x991)*(x992)))+(((IkReal(-1.00000000000000))*(x991)*(x993)))+(((cj11)*(x997)))+(((cj11)*(x996)))+(((IkReal(-1.00000000000000))*(sj11)*(x995))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((x993)*(x994)))+(((IkReal(-1.00000000000000))*(x992)*(x994)))+(((sj11)*(x996)))+(((sj11)*(x997)))+(((cj11)*(x995))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((x991)*(x992)))+(((IkReal(-1.00000000000000))*(x991)*(x993)))+(((cj11)*(x997)))+(((cj11)*(x996)))+(((IkReal(-1.00000000000000))*(sj11)*(x995)))))), ((gconst28)*(((((x993)*(x994)))+(((IkReal(-1.00000000000000))*(x992)*(x994)))+(((sj11)*(x996)))+(((sj11)*(x997)))+(((cj11)*(x995)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x998=IKsin(j10);
IkReal x999=IKcos(j10);
IkReal x1000=((cj14)*(sj9));
IkReal x1001=((IkReal(1.00000000000000))*(r11));
IkReal x1002=((cj13)*(sj14));
IkReal x1003=((IkReal(1.00000000000000))*(cj9));
IkReal x1004=((cj13)*(cj14));
IkReal x1005=((cj11)*(x998));
IkReal x1006=((sj11)*(x999));
IkReal x1007=((cj11)*(x999));
IkReal x1008=((sj11)*(x998));
IkReal x1009=((x1006)+(x1005));
evalcond[0]=((x1009)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1007)))+(x1008)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1004)))+(((r21)*(x1002))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1008)))+(x1007)+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1003)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1003)))+(((IkReal(-1.00000000000000))*(x1000)*(x1001))));
evalcond[3]=((x1009)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x1001)*(x1002)))+(((cj13)*(r10)*(x1000)))+(((IkReal(-1.00000000000000))*(r01)*(x1002)*(x1003)))+(((cj9)*(r00)*(x1004)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1010=((cj13)*(sj11));
IkReal x1011=((r21)*(sj14));
IkReal x1012=((cj14)*(r20));
IkReal x1013=((cj11)*(cj13));
IkReal x1014=((r22)*(sj13));
IkReal x1015=((r20)*(sj14));
IkReal x1016=((cj14)*(r21));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1010)*(x1012)))+(((IkReal(-1.00000000000000))*(sj11)*(x1014)))+(((cj11)*(x1015)))+(((cj11)*(x1016)))+(((x1010)*(x1011))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1011)*(x1013)))+(((x1012)*(x1013)))+(((sj11)*(x1016)))+(((sj11)*(x1015)))+(((cj11)*(x1014))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(x1010)*(x1012)))+(((IkReal(-1.00000000000000))*(sj11)*(x1014)))+(((cj11)*(x1015)))+(((cj11)*(x1016)))+(((x1010)*(x1011)))))), ((gconst27)*(((((IkReal(-1.00000000000000))*(x1011)*(x1013)))+(((x1012)*(x1013)))+(((sj11)*(x1016)))+(((sj11)*(x1015)))+(((cj11)*(x1014)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1017=IKsin(j10);
IkReal x1018=IKcos(j10);
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((sj11)*(x1018)))+(((cj11)*(x1017))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x1017)))+(((IkReal(-1.00000000000000))*(cj11)*(x1018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1019=(sj14)*(sj14);
IkReal x1020=(cj14)*(cj14);
IkReal x1021=((cj13)*(r12));
IkReal x1022=((IkReal(1.00000000000000))*(r10));
IkReal x1023=((cj13)*(r02));
IkReal x1024=((r01)*(sj13));
IkReal x1025=((r00)*(r11)*(sj13));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(sj14)*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1023)))+(((x1019)*(x1025)))+(((r00)*(sj14)*(x1021)))+(((IkReal(-1.00000000000000))*(x1019)*(x1022)*(x1024)))+(((x1020)*(x1025)))+(((cj14)*(r01)*(x1021)))+(((IkReal(-1.00000000000000))*(x1020)*(x1022)*(x1024)))));
IkReal x1026=(sj14)*(sj14);
IkReal x1027=(cj14)*(cj14);
IkReal x1028=((cj13)*(r12));
IkReal x1029=((IkReal(1.00000000000000))*(r10));
IkReal x1030=((cj13)*(r02));
IkReal x1031=((r01)*(sj13));
IkReal x1032=((r00)*(r11)*(sj13));
dummyeval[0]=((((x1026)*(x1032)))+(((IkReal(-1.00000000000000))*(x1026)*(x1029)*(x1031)))+(((IkReal(-1.00000000000000))*(sj14)*(x1029)*(x1030)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1030)))+(((IkReal(-1.00000000000000))*(x1027)*(x1029)*(x1031)))+(((r00)*(sj14)*(x1028)))+(((x1027)*(x1032)))+(((cj14)*(r01)*(x1028))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1033=(sj14)*(sj14);
IkReal x1034=(cj14)*(cj14);
IkReal x1035=((IkReal(1.00000000000000))*(x1033));
IkReal x1036=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1037=((IkReal(1.00000000000000))*(x1034));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(x1037)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1037)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1036)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(x1035)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1035)*((r00)*(r00))))));
IkReal x1038=(sj14)*(sj14);
IkReal x1039=(cj14)*(cj14);
IkReal x1040=((IkReal(1.00000000000000))*(x1038));
IkReal x1041=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1042=((IkReal(1.00000000000000))*(x1039));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1041)))+(((IkReal(-1.00000000000000))*(x1042)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1040)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1040)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1041)))+(((IkReal(-1.00000000000000))*(x1042)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1043=((sj10)*(sj11));
IkReal x1044=((r00)*(sj14));
IkReal x1045=((cj14)*(r11));
IkReal x1046=((r10)*(sj14));
IkReal x1047=((cj14)*(r01));
IkReal x1048=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1046)*(x1048)))+(((x1043)*(x1045)))+(((x1043)*(x1046)))+(((IkReal(-1.00000000000000))*(x1045)*(x1048))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((x1043)*(x1044)))+(((x1043)*(x1047)))+(((IkReal(-1.00000000000000))*(x1044)*(x1048)))+(((IkReal(-1.00000000000000))*(x1047)*(x1048))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x1046)*(x1048)))+(((x1043)*(x1045)))+(((x1043)*(x1046)))+(((IkReal(-1.00000000000000))*(x1045)*(x1048)))))), ((gconst30)*(((((x1043)*(x1044)))+(((x1043)*(x1047)))+(((IkReal(-1.00000000000000))*(x1044)*(x1048)))+(((IkReal(-1.00000000000000))*(x1047)*(x1048)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1049=IKsin(j9);
IkReal x1050=IKcos(j9);
IkReal x1051=((IkReal(1.00000000000000))*(cj14));
IkReal x1052=((IkReal(1.00000000000000))*(sj14));
IkReal x1053=((cj13)*(cj14));
IkReal x1054=((cj14)*(r10));
IkReal x1055=((r01)*(sj14));
IkReal x1056=((IkReal(1.00000000000000))*(r12));
IkReal x1057=((sj13)*(x1050));
IkReal x1058=((r02)*(x1049));
IkReal x1059=((r11)*(x1049));
IkReal x1060=((r10)*(x1050));
IkReal x1061=((r01)*(x1050));
IkReal x1062=((sj13)*(x1049));
IkReal x1063=((r11)*(x1050));
IkReal x1064=((cj13)*(x1049));
IkReal x1065=((r10)*(x1049));
IkReal x1066=((r00)*(x1050));
IkReal x1067=((cj13)*(x1050));
evalcond[0]=((((cj14)*(r01)*(x1049)))+(((IkReal(-1.00000000000000))*(x1052)*(x1060)))+(((IkReal(-1.00000000000000))*(x1051)*(x1063)))+(((r00)*(sj14)*(x1049))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1052)*(x1066)))+(((IkReal(-1.00000000000000))*(x1052)*(x1065)))+(((IkReal(-1.00000000000000))*(x1051)*(x1061)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1051)*(x1059))));
evalcond[2]=((((r12)*(x1057)))+(((x1055)*(x1064)))+(((IkReal(-1.00000000000000))*(cj13)*(x1052)*(x1063)))+(((IkReal(-1.00000000000000))*(r00)*(x1051)*(x1064)))+(((x1053)*(x1060)))+(((IkReal(-1.00000000000000))*(sj13)*(x1058))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1054)*(x1057)))+(((x1055)*(x1062)))+(((IkReal(-1.00000000000000))*(r11)*(x1052)*(x1057)))+(((IkReal(-1.00000000000000))*(r00)*(x1051)*(x1062)))+(((IkReal(-1.00000000000000))*(x1056)*(x1067)))+(((cj13)*(x1058))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1052)*(x1059)))+(((r12)*(x1062)))+(((r02)*(x1057)))+(((IkReal(-1.00000000000000))*(cj13)*(x1052)*(x1061)))+(((cj10)*(sj11)))+(((x1053)*(x1065)))+(((x1053)*(x1066)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x1052)*(x1059)))+(((x1054)*(x1062)))+(((IkReal(-1.00000000000000))*(r02)*(x1067)))+(((cj14)*(r00)*(x1057)))+(((IkReal(-1.00000000000000))*(x1056)*(x1064)))+(((IkReal(-1.00000000000000))*(r01)*(x1052)*(x1057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1068=((IkReal(1.00000000000000))*(sj14));
IkReal x1069=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1069)))+(((IkReal(-1.00000000000000))*(r10)*(x1068))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1069)))+(((IkReal(-1.00000000000000))*(r00)*(x1068))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1069)))+(((IkReal(-1.00000000000000))*(r10)*(x1068)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1069)))+(((IkReal(-1.00000000000000))*(r00)*(x1068)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1070=IKsin(j9);
IkReal x1071=IKcos(j9);
IkReal x1072=((IkReal(1.00000000000000))*(cj14));
IkReal x1073=((IkReal(1.00000000000000))*(sj14));
IkReal x1074=((cj13)*(cj14));
IkReal x1075=((cj14)*(r10));
IkReal x1076=((r01)*(sj14));
IkReal x1077=((IkReal(1.00000000000000))*(r12));
IkReal x1078=((sj13)*(x1071));
IkReal x1079=((r02)*(x1070));
IkReal x1080=((r11)*(x1070));
IkReal x1081=((r10)*(x1071));
IkReal x1082=((r01)*(x1071));
IkReal x1083=((sj13)*(x1070));
IkReal x1084=((r11)*(x1071));
IkReal x1085=((cj13)*(x1070));
IkReal x1086=((r10)*(x1070));
IkReal x1087=((r00)*(x1071));
IkReal x1088=((cj13)*(x1071));
evalcond[0]=((((cj14)*(r01)*(x1070)))+(((IkReal(-1.00000000000000))*(x1073)*(x1081)))+(((r00)*(sj14)*(x1070)))+(((IkReal(-1.00000000000000))*(x1072)*(x1084))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1073)*(x1086)))+(((IkReal(-1.00000000000000))*(x1073)*(x1087)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1072)*(x1082)))+(((IkReal(-1.00000000000000))*(x1072)*(x1080))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x1079)))+(((x1076)*(x1085)))+(((r12)*(x1078)))+(((IkReal(-1.00000000000000))*(r00)*(x1072)*(x1085)))+(((IkReal(-1.00000000000000))*(cj13)*(x1073)*(x1084)))+(((x1074)*(x1081))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1076)*(x1083)))+(((IkReal(-1.00000000000000))*(r00)*(x1072)*(x1083)))+(((IkReal(-1.00000000000000))*(r11)*(x1073)*(x1078)))+(((x1075)*(x1078)))+(((IkReal(-1.00000000000000))*(x1077)*(x1088)))+(((cj13)*(x1079))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1073)*(x1082)))+(((IkReal(-1.00000000000000))*(cj13)*(x1073)*(x1080)))+(((r12)*(x1083)))+(((cj10)*(sj11)))+(((x1074)*(x1087)))+(((x1074)*(x1086)))+(((cj11)*(sj10)))+(((r02)*(x1078))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1088)))+(((x1075)*(x1083)))+(((IkReal(-1.00000000000000))*(r01)*(x1073)*(x1078)))+(((IkReal(-1.00000000000000))*(sj13)*(x1073)*(x1080)))+(((cj14)*(r00)*(x1078)))+(((IkReal(-1.00000000000000))*(x1077)*(x1085))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1089=((IkReal(1.00000000000000))*(sj13));
IkReal x1090=((cj14)*(npx));
IkReal x1091=((npy)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x1091)))+(((IkReal(-1.00000000000000))*(cj13)*(x1090)))+(((IkReal(-1.00000000000000))*(npz)*(x1089))));
evalcond[4]=((IkReal(0.0300000000000000))+(((sj13)*(x1091)))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1092=(sj14)*(sj14);
IkReal x1093=(cj14)*(cj14);
IkReal x1094=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst32=IKsign(((((x1092)*((r10)*(r10))))+(((r00)*(r01)*(x1094)))+(((x1093)*((r01)*(r01))))+(((r10)*(r11)*(x1094)))+(((x1092)*((r00)*(r00))))+(((x1093)*((r11)*(r11))))));
IkReal x1095=(sj14)*(sj14);
IkReal x1096=(cj14)*(cj14);
IkReal x1097=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1096)*((r01)*(r01))))+(((x1095)*((r10)*(r10))))+(((x1095)*((r00)*(r00))))+(((x1096)*((r11)*(r11))))+(((r00)*(r01)*(x1097)))+(((r10)*(r11)*(x1097))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1098=(cj14)*(cj14);
IkReal x1099=(sj14)*(sj14);
IkReal x1100=((IkReal(1.00000000000000))*(r01));
IkReal x1101=((sj13)*(sj14));
IkReal x1102=((cj14)*(sj13));
IkReal x1103=((r00)*(r11));
IkReal x1104=((cj13)*(x1098));
IkReal x1105=((cj13)*(x1099));
gconst33=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x1100)*(x1104)))+(((IkReal(-1.00000000000000))*(r10)*(x1100)*(x1105)))+(((IkReal(-1.00000000000000))*(r12)*(x1100)*(x1102)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1101)))+(((r02)*(r11)*(x1102)))+(((r02)*(r10)*(x1101)))+(((x1103)*(x1105)))+(((x1103)*(x1104)))));
IkReal x1106=(cj14)*(cj14);
IkReal x1107=(sj14)*(sj14);
IkReal x1108=((IkReal(1.00000000000000))*(r01));
IkReal x1109=((sj13)*(sj14));
IkReal x1110=((cj14)*(sj13));
IkReal x1111=((r00)*(r11));
IkReal x1112=((cj13)*(x1106));
IkReal x1113=((cj13)*(x1107));
dummyeval[0]=((((x1111)*(x1112)))+(((x1111)*(x1113)))+(((IkReal(-1.00000000000000))*(r12)*(x1108)*(x1110)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1109)))+(((r02)*(r11)*(x1110)))+(((r02)*(r10)*(x1109)))+(((IkReal(-1.00000000000000))*(r10)*(x1108)*(x1113)))+(((IkReal(-1.00000000000000))*(r10)*(x1108)*(x1112))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1114=((cj13)*(cj14));
IkReal x1115=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r11)*(x1115)))+(((r12)*(sj13)))+(((r10)*(x1114))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1115)))+(((r02)*(sj13)))+(((r00)*(x1114))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(r11)*(x1115)))+(((r12)*(sj13)))+(((r10)*(x1114)))))), ((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1115)))+(((r02)*(sj13)))+(((r00)*(x1114)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1116=IKsin(j9);
IkReal x1117=IKcos(j9);
IkReal x1118=((r10)*(sj14));
IkReal x1119=((cj14)*(r11));
IkReal x1120=((cj14)*(r10));
IkReal x1121=((cj14)*(r00));
IkReal x1122=((r11)*(sj14));
IkReal x1123=((r00)*(sj14));
IkReal x1124=((IkReal(1.00000000000000))*(x1116));
IkReal x1125=((cj13)*(x1116));
IkReal x1126=((sj13)*(x1117));
IkReal x1127=((r01)*(x1116));
IkReal x1128=((IkReal(1.00000000000000))*(x1117));
evalcond[0]=((IkReal(1.00000000000000))+(((cj14)*(x1127)))+(((IkReal(-1.00000000000000))*(x1119)*(x1128)))+(((x1116)*(x1123)))+(((IkReal(-1.00000000000000))*(x1118)*(x1128))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1123)*(x1128)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1128)))+(((IkReal(-1.00000000000000))*(x1119)*(x1124)))+(((IkReal(-1.00000000000000))*(x1118)*(x1124))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1122)*(x1128)))+(((cj13)*(x1117)*(x1120)))+(((r01)*(sj14)*(x1125)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1124)))+(((r12)*(x1126)))+(((IkReal(-1.00000000000000))*(cj13)*(x1121)*(x1124))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1128)))+(((x1120)*(x1126)))+(((sj13)*(sj14)*(x1127)))+(((IkReal(-1.00000000000000))*(x1122)*(x1126)))+(((IkReal(-1.00000000000000))*(sj13)*(x1121)*(x1124)))+(((r02)*(x1125))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1129=((cj13)*(sj14));
IkReal x1130=((IkReal(1.00000000000000))*(cj11));
IkReal x1131=((r11)*(sj9));
IkReal x1132=((cj13)*(cj14));
IkReal x1133=((IkReal(1.00000000000000))*(sj11));
IkReal x1134=((cj11)*(sj13));
IkReal x1135=((r10)*(sj9));
IkReal x1136=((sj11)*(sj13));
IkReal x1137=((cj9)*(r02));
IkReal x1138=((r12)*(sj9));
IkReal x1139=((cj9)*(r00));
IkReal x1140=((cj9)*(r01));
if( IKabs(((gconst36)*(((((r21)*(sj11)*(x1129)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)*(x1140)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1133)))+(((x1134)*(x1137)))+(((x1134)*(x1138)))+(((cj11)*(x1132)*(x1139)))+(((cj11)*(x1132)*(x1135)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(r20)*(x1132)*(x1133))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((cj11)*(r20)*(x1132)))+(((sj11)*(x1132)*(x1139)))+(((sj11)*(x1132)*(x1135)))+(((IkReal(-1.00000000000000))*(x1129)*(x1131)*(x1133)))+(((x1136)*(x1137)))+(((x1136)*(x1138)))+(((IkReal(-1.00000000000000))*(r21)*(x1129)*(x1130)))+(((IkReal(-1.00000000000000))*(x1129)*(x1133)*(x1140)))+(((r22)*(x1134))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((r21)*(sj11)*(x1129)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)*(x1140)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1133)))+(((x1134)*(x1137)))+(((x1134)*(x1138)))+(((cj11)*(x1132)*(x1139)))+(((cj11)*(x1132)*(x1135)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(r20)*(x1132)*(x1133)))))), ((gconst36)*(((((cj11)*(r20)*(x1132)))+(((sj11)*(x1132)*(x1139)))+(((sj11)*(x1132)*(x1135)))+(((IkReal(-1.00000000000000))*(x1129)*(x1131)*(x1133)))+(((x1136)*(x1137)))+(((x1136)*(x1138)))+(((IkReal(-1.00000000000000))*(r21)*(x1129)*(x1130)))+(((IkReal(-1.00000000000000))*(x1129)*(x1133)*(x1140)))+(((r22)*(x1134)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1141=IKsin(j10);
IkReal x1142=IKcos(j10);
IkReal x1143=((IkReal(1.00000000000000))*(sj13));
IkReal x1144=((r11)*(sj9));
IkReal x1145=((cj9)*(r01));
IkReal x1146=((r21)*(sj14));
IkReal x1147=((cj9)*(r02));
IkReal x1148=((sj13)*(sj9));
IkReal x1149=((cj14)*(r10));
IkReal x1150=((IkReal(1.00000000000000))*(cj13));
IkReal x1151=((cj14)*(r20));
IkReal x1152=((cj11)*(x1141));
IkReal x1153=((sj11)*(x1142));
IkReal x1154=((sj14)*(x1150));
IkReal x1155=((sj11)*(x1141));
IkReal x1156=((cj11)*(x1142));
IkReal x1157=((cj14)*(cj9)*(r00));
IkReal x1158=((x1153)+(x1152));
evalcond[0]=((x1155)+(((cj13)*(x1146)))+(((IkReal(-1.00000000000000))*(x1156)))+(((IkReal(-1.00000000000000))*(r22)*(x1143)))+(((IkReal(-1.00000000000000))*(x1150)*(x1151))));
evalcond[1]=((x1158)+(((IkReal(-1.00000000000000))*(x1143)*(x1151)))+(((sj13)*(x1146)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1144)*(x1154)))+(x1158)+(((cj13)*(sj9)*(x1149)))+(((cj13)*(x1157)))+(((sj13)*(x1147)))+(((IkReal(-1.00000000000000))*(x1145)*(x1154)))+(((r12)*(x1148))));
evalcond[3]=((x1156)+(((IkReal(-1.00000000000000))*(x1147)*(x1150)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1150)))+(((IkReal(-1.00000000000000))*(x1155)))+(((sj13)*(x1157)))+(((IkReal(-1.00000000000000))*(sj14)*(x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(sj14)*(x1143)*(x1145)))+(((x1148)*(x1149))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1159=((cj13)*(sj11));
IkReal x1160=((r21)*(sj14));
IkReal x1161=((cj11)*(cj13));
IkReal x1162=((cj11)*(sj13));
IkReal x1163=((sj11)*(sj13));
IkReal x1164=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((x1159)*(x1160)))+(((IkReal(-1.00000000000000))*(x1159)*(x1164)))+(((IkReal(-1.00000000000000))*(x1162)*(x1164)))+(((IkReal(-1.00000000000000))*(r22)*(x1163)))+(((r22)*(x1161)))+(((x1160)*(x1162))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((cj14)*(r20)*(x1161)))+(((r22)*(x1159)))+(((IkReal(-1.00000000000000))*(x1163)*(x1164)))+(((r22)*(x1162)))+(((IkReal(-1.00000000000000))*(x1160)*(x1161)))+(((x1160)*(x1163))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((x1159)*(x1160)))+(((IkReal(-1.00000000000000))*(x1159)*(x1164)))+(((IkReal(-1.00000000000000))*(x1162)*(x1164)))+(((IkReal(-1.00000000000000))*(r22)*(x1163)))+(((r22)*(x1161)))+(((x1160)*(x1162)))))), ((gconst35)*(((((cj14)*(r20)*(x1161)))+(((r22)*(x1159)))+(((IkReal(-1.00000000000000))*(x1163)*(x1164)))+(((r22)*(x1162)))+(((IkReal(-1.00000000000000))*(x1160)*(x1161)))+(((x1160)*(x1163)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1165=IKsin(j10);
IkReal x1166=IKcos(j10);
IkReal x1167=((IkReal(1.00000000000000))*(sj13));
IkReal x1168=((r11)*(sj9));
IkReal x1169=((cj9)*(r01));
IkReal x1170=((r21)*(sj14));
IkReal x1171=((cj9)*(r02));
IkReal x1172=((sj13)*(sj9));
IkReal x1173=((cj14)*(r10));
IkReal x1174=((IkReal(1.00000000000000))*(cj13));
IkReal x1175=((cj14)*(r20));
IkReal x1176=((cj11)*(x1165));
IkReal x1177=((sj11)*(x1166));
IkReal x1178=((sj14)*(x1174));
IkReal x1179=((sj11)*(x1165));
IkReal x1180=((cj11)*(x1166));
IkReal x1181=((cj14)*(cj9)*(r00));
IkReal x1182=((x1177)+(x1176));
evalcond[0]=((((cj13)*(x1170)))+(x1179)+(((IkReal(-1.00000000000000))*(r22)*(x1167)))+(((IkReal(-1.00000000000000))*(x1180)))+(((IkReal(-1.00000000000000))*(x1174)*(x1175))));
evalcond[1]=((x1182)+(((sj13)*(x1170)))+(((IkReal(-1.00000000000000))*(x1167)*(x1175)))+(((cj13)*(r22))));
evalcond[2]=((x1182)+(((cj13)*(sj9)*(x1173)))+(((sj13)*(x1171)))+(((IkReal(-1.00000000000000))*(x1168)*(x1178)))+(((r12)*(x1172)))+(((IkReal(-1.00000000000000))*(x1169)*(x1178)))+(((cj13)*(x1181))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1174)))+(x1180)+(((IkReal(-1.00000000000000))*(x1171)*(x1174)))+(((IkReal(-1.00000000000000))*(sj14)*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(sj14)*(x1167)*(x1169)))+(((x1172)*(x1173)))+(((sj13)*(x1181)))+(((IkReal(-1.00000000000000))*(x1179))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1183=((cj13)*(sj11));
IkReal x1184=((r21)*(sj14));
IkReal x1185=((cj11)*(cj13));
IkReal x1186=((cj11)*(sj13));
IkReal x1187=((sj11)*(sj13));
IkReal x1188=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst34)*(((((x1184)*(x1186)))+(((x1183)*(x1184)))+(((r22)*(x1185)))+(((IkReal(-1.00000000000000))*(x1186)*(x1188)))+(((IkReal(-1.00000000000000))*(x1183)*(x1188)))+(((IkReal(-1.00000000000000))*(r22)*(x1187))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((cj14)*(r20)*(x1185)))+(((x1184)*(x1187)))+(((r22)*(x1186)))+(((r22)*(x1183)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst34)*(((((x1184)*(x1186)))+(((x1183)*(x1184)))+(((r22)*(x1185)))+(((IkReal(-1.00000000000000))*(x1186)*(x1188)))+(((IkReal(-1.00000000000000))*(x1183)*(x1188)))+(((IkReal(-1.00000000000000))*(r22)*(x1187)))))), ((gconst34)*(((((cj14)*(r20)*(x1185)))+(((x1184)*(x1187)))+(((r22)*(x1186)))+(((r22)*(x1183)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1189=IKsin(j10);
IkReal x1190=IKcos(j10);
IkReal x1191=((IkReal(1.00000000000000))*(sj13));
IkReal x1192=((cj14)*(r20));
IkReal x1193=((r21)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x1190)))+(((IkReal(-1.00000000000000))*(r22)*(x1191)))+(((sj11)*(x1189)))+(((IkReal(-1.00000000000000))*(cj13)*(x1192)))+(((cj13)*(x1193))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1191)*(x1192)))+(((sj11)*(x1190)))+(((cj11)*(x1189)))+(((sj13)*(x1193)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1194=(sj14)*(sj14);
IkReal x1195=(cj14)*(cj14);
IkReal x1196=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst37=IKsign(((((x1194)*((r10)*(r10))))+(((x1195)*((r01)*(r01))))+(((r10)*(r11)*(x1196)))+(((x1195)*((r11)*(r11))))+(((x1194)*((r00)*(r00))))+(((r00)*(r01)*(x1196)))));
IkReal x1197=(sj14)*(sj14);
IkReal x1198=(cj14)*(cj14);
IkReal x1199=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1197)*((r00)*(r00))))+(((r10)*(r11)*(x1199)))+(((x1198)*((r01)*(r01))))+(((x1197)*((r10)*(r10))))+(((r00)*(r01)*(x1199)))+(((x1198)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1200=(cj14)*(cj14);
IkReal x1201=(sj14)*(sj14);
IkReal x1202=((IkReal(1.00000000000000))*(r01));
IkReal x1203=((sj13)*(sj14));
IkReal x1204=((cj14)*(sj13));
IkReal x1205=((r00)*(r11));
IkReal x1206=((cj13)*(x1200));
IkReal x1207=((cj13)*(x1201));
gconst38=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x1202)*(x1204)))+(((x1205)*(x1206)))+(((x1205)*(x1207)))+(((IkReal(-1.00000000000000))*(r10)*(x1202)*(x1207)))+(((IkReal(-1.00000000000000))*(r10)*(x1202)*(x1206)))+(((r02)*(r11)*(x1204)))+(((r02)*(r10)*(x1203)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1203)))));
IkReal x1208=(cj14)*(cj14);
IkReal x1209=(sj14)*(sj14);
IkReal x1210=((IkReal(1.00000000000000))*(r01));
IkReal x1211=((sj13)*(sj14));
IkReal x1212=((cj14)*(sj13));
IkReal x1213=((r00)*(r11));
IkReal x1214=((cj13)*(x1208));
IkReal x1215=((cj13)*(x1209));
dummyeval[0]=((((x1213)*(x1215)))+(((x1213)*(x1214)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1211)))+(((IkReal(-1.00000000000000))*(r10)*(x1210)*(x1215)))+(((IkReal(-1.00000000000000))*(r10)*(x1210)*(x1214)))+(((IkReal(-1.00000000000000))*(r12)*(x1210)*(x1212)))+(((r02)*(r10)*(x1211)))+(((r02)*(r11)*(x1212))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1216=((cj13)*(cj14));
IkReal x1217=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst38)*(((((r12)*(sj13)))+(((r10)*(x1216)))+(((IkReal(-1.00000000000000))*(r11)*(x1217))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((r02)*(sj13)))+(((r00)*(x1216)))+(((IkReal(-1.00000000000000))*(r01)*(x1217))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst38)*(((((r12)*(sj13)))+(((r10)*(x1216)))+(((IkReal(-1.00000000000000))*(r11)*(x1217)))))), ((gconst38)*(((((r02)*(sj13)))+(((r00)*(x1216)))+(((IkReal(-1.00000000000000))*(r01)*(x1217)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1218=IKsin(j9);
IkReal x1219=IKcos(j9);
IkReal x1220=((IkReal(1.00000000000000))*(cj14));
IkReal x1221=((IkReal(1.00000000000000))*(sj14));
IkReal x1222=((cj13)*(cj14));
IkReal x1223=((cj14)*(r10));
IkReal x1224=((r01)*(sj14));
IkReal x1225=((IkReal(1.00000000000000))*(r12));
IkReal x1226=((sj13)*(x1219));
IkReal x1227=((r02)*(x1218));
IkReal x1228=((r11)*(x1218));
IkReal x1229=((r10)*(x1219));
IkReal x1230=((r01)*(x1219));
IkReal x1231=((sj13)*(x1218));
IkReal x1232=((r11)*(x1219));
IkReal x1233=((cj13)*(x1218));
IkReal x1234=((r10)*(x1218));
IkReal x1235=((r00)*(x1219));
IkReal x1236=((cj13)*(x1219));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1220)*(x1232)))+(((IkReal(-1.00000000000000))*(x1221)*(x1229)))+(((cj14)*(r01)*(x1218)))+(((r00)*(sj14)*(x1218))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1220)*(x1230)))+(((IkReal(-1.00000000000000))*(x1220)*(x1228)))+(((IkReal(-1.00000000000000))*(x1221)*(x1234)))+(((IkReal(-1.00000000000000))*(x1221)*(x1235))));
evalcond[2]=((((x1224)*(x1233)))+(((x1222)*(x1229)))+(((IkReal(-1.00000000000000))*(r00)*(x1220)*(x1233)))+(((IkReal(-1.00000000000000))*(sj13)*(x1227)))+(((r12)*(x1226)))+(((IkReal(-1.00000000000000))*(cj13)*(x1221)*(x1232))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1221)*(x1226)))+(((IkReal(-1.00000000000000))*(x1225)*(x1236)))+(((x1223)*(x1226)))+(((x1224)*(x1231)))+(((cj13)*(x1227)))+(((IkReal(-1.00000000000000))*(r00)*(x1220)*(x1231))));
evalcond[4]=((((cj10)*(sj11)))+(((r02)*(x1226)))+(((x1222)*(x1235)))+(((x1222)*(x1234)))+(((IkReal(-1.00000000000000))*(cj13)*(x1221)*(x1228)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x1221)*(x1230)))+(((r12)*(x1231))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1225)*(x1233)))+(((IkReal(-1.00000000000000))*(r01)*(x1221)*(x1226)))+(((x1223)*(x1231)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x1221)*(x1228)))+(((IkReal(-1.00000000000000))*(r02)*(x1236)))+(((cj14)*(r00)*(x1226)))+(((cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst37)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1237=IKsin(j9);
IkReal x1238=IKcos(j9);
IkReal x1239=((IkReal(1.00000000000000))*(cj14));
IkReal x1240=((IkReal(1.00000000000000))*(sj14));
IkReal x1241=((cj13)*(cj14));
IkReal x1242=((cj14)*(r10));
IkReal x1243=((r01)*(sj14));
IkReal x1244=((IkReal(1.00000000000000))*(r12));
IkReal x1245=((sj13)*(x1238));
IkReal x1246=((r02)*(x1237));
IkReal x1247=((r11)*(x1237));
IkReal x1248=((r10)*(x1238));
IkReal x1249=((r01)*(x1238));
IkReal x1250=((sj13)*(x1237));
IkReal x1251=((r11)*(x1238));
IkReal x1252=((cj13)*(x1237));
IkReal x1253=((r10)*(x1237));
IkReal x1254=((r00)*(x1238));
IkReal x1255=((cj13)*(x1238));
evalcond[0]=((IkReal(1.00000000000000))+(((cj14)*(r01)*(x1237)))+(((r00)*(sj14)*(x1237)))+(((IkReal(-1.00000000000000))*(x1239)*(x1251)))+(((IkReal(-1.00000000000000))*(x1240)*(x1248))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1239)*(x1247)))+(((IkReal(-1.00000000000000))*(x1239)*(x1249)))+(((IkReal(-1.00000000000000))*(x1240)*(x1253)))+(((IkReal(-1.00000000000000))*(x1240)*(x1254))));
evalcond[2]=((((x1243)*(x1252)))+(((IkReal(-1.00000000000000))*(r00)*(x1239)*(x1252)))+(((IkReal(-1.00000000000000))*(cj13)*(x1240)*(x1251)))+(((IkReal(-1.00000000000000))*(sj13)*(x1246)))+(((x1241)*(x1248)))+(((r12)*(x1245))));
evalcond[3]=((((x1243)*(x1250)))+(((IkReal(-1.00000000000000))*(r00)*(x1239)*(x1250)))+(((IkReal(-1.00000000000000))*(x1244)*(x1255)))+(((x1242)*(x1245)))+(((IkReal(-1.00000000000000))*(r11)*(x1240)*(x1245)))+(((cj13)*(x1246))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1240)*(x1249)))+(((IkReal(-1.00000000000000))*(cj13)*(x1240)*(x1247)))+(((x1241)*(x1254)))+(((x1241)*(x1253)))+(((r12)*(x1250)))+(((cj10)*(sj11)))+(((r02)*(x1245)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x1240)*(x1245)))+(((IkReal(-1.00000000000000))*(sj13)*(x1240)*(x1247)))+(((IkReal(-1.00000000000000))*(r02)*(x1255)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1244)*(x1252)))+(((cj14)*(r00)*(x1245)))+(((cj10)*(cj11)))+(((x1242)*(x1250))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst32)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1256=IKsin(j9);
IkReal x1257=IKcos(j9);
IkReal x1258=((r10)*(sj14));
IkReal x1259=((cj14)*(r11));
IkReal x1260=((cj14)*(r10));
IkReal x1261=((cj14)*(r00));
IkReal x1262=((r11)*(sj14));
IkReal x1263=((r00)*(sj14));
IkReal x1264=((IkReal(1.00000000000000))*(x1256));
IkReal x1265=((cj13)*(x1256));
IkReal x1266=((sj13)*(x1257));
IkReal x1267=((r01)*(x1256));
IkReal x1268=((IkReal(1.00000000000000))*(x1257));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1258)*(x1268)))+(((cj14)*(x1267)))+(((x1256)*(x1263)))+(((IkReal(-1.00000000000000))*(x1259)*(x1268))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1258)*(x1264)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1268)))+(((IkReal(-1.00000000000000))*(x1263)*(x1268)))+(((IkReal(-1.00000000000000))*(x1259)*(x1264))));
evalcond[2]=((((r01)*(sj14)*(x1265)))+(((cj13)*(x1257)*(x1260)))+(((IkReal(-1.00000000000000))*(cj13)*(x1262)*(x1268)))+(((r12)*(x1266)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1264)))+(((IkReal(-1.00000000000000))*(cj13)*(x1261)*(x1264))));
evalcond[3]=((((r02)*(x1265)))+(((IkReal(-1.00000000000000))*(x1262)*(x1266)))+(((x1260)*(x1266)))+(((sj13)*(sj14)*(x1267)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1268)))+(((IkReal(-1.00000000000000))*(sj13)*(x1261)*(x1264))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1269=((cj13)*(sj14));
IkReal x1270=((IkReal(1.00000000000000))*(cj11));
IkReal x1271=((r11)*(sj9));
IkReal x1272=((cj13)*(cj14));
IkReal x1273=((IkReal(1.00000000000000))*(sj11));
IkReal x1274=((cj11)*(sj13));
IkReal x1275=((r10)*(sj9));
IkReal x1276=((sj11)*(sj13));
IkReal x1277=((cj9)*(r02));
IkReal x1278=((r12)*(sj9));
IkReal x1279=((cj9)*(r00));
IkReal x1280=((cj9)*(r01));
if( IKabs(((gconst36)*(((((cj11)*(x1272)*(x1279)))+(((cj11)*(x1272)*(x1275)))+(((x1274)*(x1278)))+(((x1274)*(x1277)))+(((IkReal(-1.00000000000000))*(x1269)*(x1270)*(x1280)))+(((IkReal(-1.00000000000000))*(r20)*(x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1273)))+(((r21)*(sj11)*(x1269)))+(((IkReal(-1.00000000000000))*(x1269)*(x1270)*(x1271))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x1269)*(x1273)*(x1280)))+(((x1276)*(x1277)))+(((x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(r21)*(x1269)*(x1270)))+(((sj11)*(x1272)*(x1275)))+(((sj11)*(x1272)*(x1279)))+(((r22)*(x1274)))+(((cj11)*(r20)*(x1272)))+(((IkReal(-1.00000000000000))*(x1269)*(x1271)*(x1273))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((cj11)*(x1272)*(x1279)))+(((cj11)*(x1272)*(x1275)))+(((x1274)*(x1278)))+(((x1274)*(x1277)))+(((IkReal(-1.00000000000000))*(x1269)*(x1270)*(x1280)))+(((IkReal(-1.00000000000000))*(r20)*(x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1273)))+(((r21)*(sj11)*(x1269)))+(((IkReal(-1.00000000000000))*(x1269)*(x1270)*(x1271)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(x1269)*(x1273)*(x1280)))+(((x1276)*(x1277)))+(((x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(r21)*(x1269)*(x1270)))+(((sj11)*(x1272)*(x1275)))+(((sj11)*(x1272)*(x1279)))+(((r22)*(x1274)))+(((cj11)*(r20)*(x1272)))+(((IkReal(-1.00000000000000))*(x1269)*(x1271)*(x1273)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1281=IKsin(j10);
IkReal x1282=IKcos(j10);
IkReal x1283=((IkReal(1.00000000000000))*(sj13));
IkReal x1284=((r11)*(sj9));
IkReal x1285=((cj9)*(r01));
IkReal x1286=((r21)*(sj14));
IkReal x1287=((cj9)*(r02));
IkReal x1288=((sj13)*(sj9));
IkReal x1289=((cj14)*(r10));
IkReal x1290=((IkReal(1.00000000000000))*(cj13));
IkReal x1291=((cj14)*(r20));
IkReal x1292=((cj11)*(x1281));
IkReal x1293=((sj11)*(x1282));
IkReal x1294=((sj14)*(x1290));
IkReal x1295=((sj11)*(x1281));
IkReal x1296=((cj11)*(x1282));
IkReal x1297=((cj14)*(cj9)*(r00));
IkReal x1298=((x1292)+(x1293));
evalcond[0]=((x1295)+(((IkReal(-1.00000000000000))*(r22)*(x1283)))+(((IkReal(-1.00000000000000))*(x1290)*(x1291)))+(((IkReal(-1.00000000000000))*(x1296)))+(((cj13)*(x1286))));
evalcond[1]=((x1298)+(((IkReal(-1.00000000000000))*(x1283)*(x1291)))+(((sj13)*(x1286)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1284)*(x1294)))+(x1298)+(((cj13)*(x1297)))+(((sj13)*(x1287)))+(((IkReal(-1.00000000000000))*(x1285)*(x1294)))+(((r12)*(x1288)))+(((cj13)*(sj9)*(x1289))));
evalcond[3]=((((x1288)*(x1289)))+(x1296)+(((sj13)*(x1297)))+(((IkReal(-1.00000000000000))*(x1287)*(x1290)))+(((IkReal(-1.00000000000000))*(sj14)*(x1283)*(x1284)))+(((IkReal(-1.00000000000000))*(sj14)*(x1283)*(x1285)))+(((IkReal(-1.00000000000000))*(x1295)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1290))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1299=((cj13)*(sj11));
IkReal x1300=((r21)*(sj14));
IkReal x1301=((cj11)*(cj13));
IkReal x1302=((cj11)*(sj13));
IkReal x1303=((sj11)*(sj13));
IkReal x1304=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1304)))+(((x1300)*(x1302)))+(((IkReal(-1.00000000000000))*(r22)*(x1303)))+(((r22)*(x1301)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((x1300)*(x1303)))+(((IkReal(-1.00000000000000))*(x1303)*(x1304)))+(((r22)*(x1302)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((r22)*(x1299)))+(((cj14)*(r20)*(x1301))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1304)))+(((x1300)*(x1302)))+(((IkReal(-1.00000000000000))*(r22)*(x1303)))+(((r22)*(x1301)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304)))))), ((gconst35)*(((((x1300)*(x1303)))+(((IkReal(-1.00000000000000))*(x1303)*(x1304)))+(((r22)*(x1302)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((r22)*(x1299)))+(((cj14)*(r20)*(x1301)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1305=IKsin(j10);
IkReal x1306=IKcos(j10);
IkReal x1307=((IkReal(1.00000000000000))*(sj13));
IkReal x1308=((r11)*(sj9));
IkReal x1309=((cj9)*(r01));
IkReal x1310=((r21)*(sj14));
IkReal x1311=((cj9)*(r02));
IkReal x1312=((sj13)*(sj9));
IkReal x1313=((cj14)*(r10));
IkReal x1314=((IkReal(1.00000000000000))*(cj13));
IkReal x1315=((cj14)*(r20));
IkReal x1316=((cj11)*(x1305));
IkReal x1317=((sj11)*(x1306));
IkReal x1318=((sj14)*(x1314));
IkReal x1319=((sj11)*(x1305));
IkReal x1320=((cj11)*(x1306));
IkReal x1321=((cj14)*(cj9)*(r00));
IkReal x1322=((x1317)+(x1316));
evalcond[0]=((x1319)+(((cj13)*(x1310)))+(((IkReal(-1.00000000000000))*(r22)*(x1307)))+(((IkReal(-1.00000000000000))*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(x1320))));
evalcond[1]=((x1322)+(((sj13)*(x1310)))+(((IkReal(-1.00000000000000))*(x1307)*(x1315)))+(((cj13)*(r22))));
evalcond[2]=((x1322)+(((sj13)*(x1311)))+(((cj13)*(x1321)))+(((IkReal(-1.00000000000000))*(x1308)*(x1318)))+(((r12)*(x1312)))+(((cj13)*(sj9)*(x1313)))+(((IkReal(-1.00000000000000))*(x1309)*(x1318))));
evalcond[3]=((x1320)+(((IkReal(-1.00000000000000))*(x1311)*(x1314)))+(((sj13)*(x1321)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1314)))+(((IkReal(-1.00000000000000))*(x1319)))+(((IkReal(-1.00000000000000))*(sj14)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(sj14)*(x1307)*(x1309)))+(((x1312)*(x1313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1323=((IkReal(1.00000000000000))*(sj13));
IkReal x1324=((cj14)*(npx));
IkReal x1325=((npy)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x1325)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x1323)))+(((IkReal(-1.00000000000000))*(cj13)*(x1324))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x1323)*(x1324)))+(((sj13)*(x1325)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1326=(sj14)*(sj14);
IkReal x1327=(cj14)*(cj14);
IkReal x1328=((IkReal(1.00000000000000))*(x1326));
IkReal x1329=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1330=((IkReal(1.00000000000000))*(x1327));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1329)))+(((IkReal(-1.00000000000000))*(x1328)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1329)))+(((IkReal(-1.00000000000000))*(x1328)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1330)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1330)*((r01)*(r01))))));
IkReal x1331=(sj14)*(sj14);
IkReal x1332=(cj14)*(cj14);
IkReal x1333=((IkReal(1.00000000000000))*(x1331));
IkReal x1334=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1335=((IkReal(1.00000000000000))*(x1332));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1333)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1334)))+(((IkReal(-1.00000000000000))*(x1335)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1335)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1334)))+(((IkReal(-1.00000000000000))*(x1333)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1336=(sj14)*(sj14);
IkReal x1337=(cj14)*(cj14);
IkReal x1338=((cj14)*(sj13));
IkReal x1339=((IkReal(1.00000000000000))*(r11));
IkReal x1340=((cj13)*(r00));
IkReal x1341=((sj13)*(sj14));
IkReal x1342=((cj13)*(r01)*(r10));
gconst40=IKsign(((((IkReal(-1.00000000000000))*(r02)*(r10)*(x1341)))+(((r01)*(r12)*(x1338)))+(((IkReal(-1.00000000000000))*(x1336)*(x1339)*(x1340)))+(((x1337)*(x1342)))+(((x1336)*(x1342)))+(((IkReal(-1.00000000000000))*(r02)*(x1338)*(x1339)))+(((IkReal(-1.00000000000000))*(x1337)*(x1339)*(x1340)))+(((r00)*(r12)*(x1341)))));
IkReal x1343=(sj14)*(sj14);
IkReal x1344=(cj14)*(cj14);
IkReal x1345=((cj14)*(sj13));
IkReal x1346=((IkReal(1.00000000000000))*(r11));
IkReal x1347=((cj13)*(r00));
IkReal x1348=((sj13)*(sj14));
IkReal x1349=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1348)))+(((IkReal(-1.00000000000000))*(x1344)*(x1346)*(x1347)))+(((x1344)*(x1349)))+(((r00)*(r12)*(x1348)))+(((r01)*(r12)*(x1345)))+(((IkReal(-1.00000000000000))*(x1343)*(x1346)*(x1347)))+(((x1343)*(x1349))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1350=((cj13)*(cj14));
IkReal x1351=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst40)*(((((r10)*(x1350)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1351))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1351)))+(((r00)*(x1350))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst40)*(((((r10)*(x1350)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1351)))))), ((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1351)))+(((r00)*(x1350)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1352=IKsin(j9);
IkReal x1353=IKcos(j9);
IkReal x1354=((r10)*(sj14));
IkReal x1355=((cj14)*(r11));
IkReal x1356=((cj14)*(r10));
IkReal x1357=((cj14)*(r00));
IkReal x1358=((r11)*(sj14));
IkReal x1359=((r00)*(sj14));
IkReal x1360=((IkReal(1.00000000000000))*(x1352));
IkReal x1361=((cj13)*(x1352));
IkReal x1362=((sj13)*(x1353));
IkReal x1363=((r01)*(x1352));
IkReal x1364=((IkReal(1.00000000000000))*(x1353));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x1363)))+(((IkReal(-1.00000000000000))*(x1354)*(x1364)))+(((IkReal(-1.00000000000000))*(x1355)*(x1364)))+(((x1352)*(x1359))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1354)*(x1360)))+(((IkReal(-1.00000000000000))*(x1359)*(x1364)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1364)))+(((IkReal(-1.00000000000000))*(x1355)*(x1360))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1357)*(x1360)))+(((IkReal(-1.00000000000000))*(cj13)*(x1358)*(x1364)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1360)))+(((cj13)*(x1353)*(x1356)))+(((r01)*(sj14)*(x1361)))+(((r12)*(x1362))));
evalcond[3]=((((x1356)*(x1362)))+(((IkReal(-1.00000000000000))*(sj13)*(x1357)*(x1360)))+(((r02)*(x1361)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1364)))+(((IkReal(-1.00000000000000))*(x1358)*(x1362)))+(((sj13)*(sj14)*(x1363))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1365=((cj13)*(sj14));
IkReal x1366=((IkReal(1.00000000000000))*(cj11));
IkReal x1367=((r11)*(sj9));
IkReal x1368=((IkReal(1.00000000000000))*(sj11));
IkReal x1369=((cj13)*(cj14));
IkReal x1370=((cj11)*(sj13));
IkReal x1371=((r12)*(sj9));
IkReal x1372=((cj9)*(r01));
IkReal x1373=((sj11)*(sj13));
IkReal x1374=((cj9)*(r02));
IkReal x1375=((r10)*(sj9));
IkReal x1376=((cj9)*(r00));
if( IKabs(((gconst43)*(((((r21)*(sj11)*(x1365)))+(((IkReal(-1.00000000000000))*(r20)*(x1368)*(x1369)))+(((cj11)*(x1369)*(x1376)))+(((cj11)*(x1369)*(x1375)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)*(x1372)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)*(x1367)))+(((x1370)*(x1371)))+(((x1370)*(x1374)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1368))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(x1365)*(x1368)*(x1372)))+(((r22)*(x1370)))+(((x1371)*(x1373)))+(((cj11)*(r20)*(x1369)))+(((IkReal(-1.00000000000000))*(x1365)*(x1367)*(x1368)))+(((sj11)*(x1369)*(x1376)))+(((sj11)*(x1369)*(x1375)))+(((IkReal(-1.00000000000000))*(r21)*(x1365)*(x1366)))+(((x1373)*(x1374))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((r21)*(sj11)*(x1365)))+(((IkReal(-1.00000000000000))*(r20)*(x1368)*(x1369)))+(((cj11)*(x1369)*(x1376)))+(((cj11)*(x1369)*(x1375)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)*(x1372)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)*(x1367)))+(((x1370)*(x1371)))+(((x1370)*(x1374)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1368)))))), ((gconst43)*(((((IkReal(-1.00000000000000))*(x1365)*(x1368)*(x1372)))+(((r22)*(x1370)))+(((x1371)*(x1373)))+(((cj11)*(r20)*(x1369)))+(((IkReal(-1.00000000000000))*(x1365)*(x1367)*(x1368)))+(((sj11)*(x1369)*(x1376)))+(((sj11)*(x1369)*(x1375)))+(((IkReal(-1.00000000000000))*(r21)*(x1365)*(x1366)))+(((x1373)*(x1374)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1377=IKsin(j10);
IkReal x1378=IKcos(j10);
IkReal x1379=((IkReal(1.00000000000000))*(sj13));
IkReal x1380=((r11)*(sj9));
IkReal x1381=((cj9)*(r01));
IkReal x1382=((IkReal(1.00000000000000))*(cj11));
IkReal x1383=((r21)*(sj14));
IkReal x1384=((cj9)*(r02));
IkReal x1385=((sj13)*(sj9));
IkReal x1386=((cj14)*(r10));
IkReal x1387=((IkReal(1.00000000000000))*(cj13));
IkReal x1388=((cj14)*(r20));
IkReal x1389=((sj11)*(x1377));
IkReal x1390=((sj14)*(x1387));
IkReal x1391=((sj11)*(x1378));
IkReal x1392=((cj14)*(cj9)*(r00));
IkReal x1393=((x1378)*(x1382));
evalcond[0]=((x1389)+(((IkReal(-1.00000000000000))*(r22)*(x1379)))+(((cj13)*(x1383)))+(((IkReal(-1.00000000000000))*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(x1393))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1377)*(x1382)))+(((sj13)*(x1383)))+(((IkReal(-1.00000000000000))*(x1391)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x1379)*(x1388))));
evalcond[2]=((x1391)+(((cj13)*(x1392)))+(((sj13)*(x1384)))+(((IkReal(-1.00000000000000))*(x1381)*(x1390)))+(((IkReal(-1.00000000000000))*(x1380)*(x1390)))+(((cj11)*(x1377)))+(((r12)*(x1385)))+(((cj13)*(sj9)*(x1386))));
evalcond[3]=((x1389)+(((IkReal(-1.00000000000000))*(x1384)*(x1387)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1387)))+(((IkReal(-1.00000000000000))*(sj14)*(x1379)*(x1380)))+(((IkReal(-1.00000000000000))*(sj14)*(x1379)*(x1381)))+(((sj13)*(x1392)))+(((x1385)*(x1386)))+(((IkReal(-1.00000000000000))*(x1393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1394=((cj11)*(r22));
IkReal x1395=((IkReal(1.00000000000000))*(sj13));
IkReal x1396=((cj13)*(sj11));
IkReal x1397=((r21)*(sj14));
IkReal x1398=((cj11)*(cj13));
IkReal x1399=((sj11)*(sj13));
IkReal x1400=((cj14)*(r20));
if( IKabs(((gconst42)*(((((cj11)*(sj13)*(x1397)))+(((x1396)*(x1400)))+(((cj13)*(x1394)))+(((r22)*(x1399)))+(((IkReal(-1.00000000000000))*(x1396)*(x1397)))+(((IkReal(-1.00000000000000))*(cj11)*(x1395)*(x1400))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1398)*(x1400)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(sj11)*(x1395)*(x1400)))+(((x1397)*(x1399)))+(((x1397)*(x1398)))+(((r22)*(x1396))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((cj11)*(sj13)*(x1397)))+(((x1396)*(x1400)))+(((cj13)*(x1394)))+(((r22)*(x1399)))+(((IkReal(-1.00000000000000))*(x1396)*(x1397)))+(((IkReal(-1.00000000000000))*(cj11)*(x1395)*(x1400)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1398)*(x1400)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(sj11)*(x1395)*(x1400)))+(((x1397)*(x1399)))+(((x1397)*(x1398)))+(((r22)*(x1396)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1401=IKsin(j10);
IkReal x1402=IKcos(j10);
IkReal x1403=((IkReal(1.00000000000000))*(sj13));
IkReal x1404=((r11)*(sj9));
IkReal x1405=((cj9)*(r01));
IkReal x1406=((IkReal(1.00000000000000))*(cj11));
IkReal x1407=((r21)*(sj14));
IkReal x1408=((cj9)*(r02));
IkReal x1409=((sj13)*(sj9));
IkReal x1410=((cj14)*(r10));
IkReal x1411=((IkReal(1.00000000000000))*(cj13));
IkReal x1412=((cj14)*(r20));
IkReal x1413=((sj11)*(x1401));
IkReal x1414=((sj14)*(x1411));
IkReal x1415=((sj11)*(x1402));
IkReal x1416=((cj14)*(cj9)*(r00));
IkReal x1417=((x1402)*(x1406));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1417)))+(((IkReal(-1.00000000000000))*(r22)*(x1403)))+(((cj13)*(x1407)))+(((IkReal(-1.00000000000000))*(x1411)*(x1412)))+(x1413));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1403)*(x1412)))+(((IkReal(-1.00000000000000))*(x1401)*(x1406)))+(((cj13)*(r22)))+(((sj13)*(x1407)))+(((IkReal(-1.00000000000000))*(x1415))));
evalcond[2]=((((cj13)*(sj9)*(x1410)))+(((cj13)*(x1416)))+(((r12)*(x1409)))+(((IkReal(-1.00000000000000))*(x1404)*(x1414)))+(x1415)+(((IkReal(-1.00000000000000))*(x1405)*(x1414)))+(((cj11)*(x1401)))+(((sj13)*(x1408))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1417)))+(((IkReal(-1.00000000000000))*(sj14)*(x1403)*(x1405)))+(((IkReal(-1.00000000000000))*(sj14)*(x1403)*(x1404)))+(((IkReal(-1.00000000000000))*(x1408)*(x1411)))+(((sj13)*(x1416)))+(x1413)+(((x1409)*(x1410)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1411))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1418=((r22)*(sj13));
IkReal x1419=((IkReal(1.00000000000000))*(cj11));
IkReal x1420=((cj13)*(sj11));
IkReal x1421=((cj14)*(r20));
IkReal x1422=((r21)*(sj14));
IkReal x1423=((cj11)*(cj13));
IkReal x1424=((sj11)*(sj13));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj13)*(x1419)*(x1421)))+(((x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1420)*(x1422)))+(((r22)*(x1423)))+(((sj11)*(x1418)))+(((cj11)*(sj13)*(x1422))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((x1422)*(x1423)))+(((x1422)*(x1424)))+(((r22)*(x1420)))+(((IkReal(-1.00000000000000))*(cj13)*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1419)))+(((IkReal(-1.00000000000000))*(x1421)*(x1424))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(sj13)*(x1419)*(x1421)))+(((x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1420)*(x1422)))+(((r22)*(x1423)))+(((sj11)*(x1418)))+(((cj11)*(sj13)*(x1422)))))), ((gconst41)*(((((x1422)*(x1423)))+(((x1422)*(x1424)))+(((r22)*(x1420)))+(((IkReal(-1.00000000000000))*(cj13)*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1419)))+(((IkReal(-1.00000000000000))*(x1421)*(x1424)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1425=IKsin(j10);
IkReal x1426=IKcos(j10);
IkReal x1427=((IkReal(1.00000000000000))*(sj13));
IkReal x1428=((cj14)*(r20));
IkReal x1429=((r21)*(sj14));
IkReal x1430=((IkReal(1.00000000000000))*(x1426));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x1430)))+(((IkReal(-1.00000000000000))*(r22)*(x1427)))+(((IkReal(-1.00000000000000))*(cj13)*(x1428)))+(((cj13)*(x1429)))+(((sj11)*(x1425))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1427)*(x1428)))+(((IkReal(-1.00000000000000))*(sj11)*(x1430)))+(((sj13)*(x1429)))+(((IkReal(-1.00000000000000))*(cj11)*(x1425)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1431=(sj14)*(sj14);
IkReal x1432=(cj14)*(cj14);
IkReal x1433=((IkReal(1.00000000000000))*(x1431));
IkReal x1434=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1435=((IkReal(1.00000000000000))*(x1432));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1434)))+(((IkReal(-1.00000000000000))*(x1433)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1435)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1435)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1434)))+(((IkReal(-1.00000000000000))*(x1433)*((r00)*(r00))))));
IkReal x1436=(sj14)*(sj14);
IkReal x1437=(cj14)*(cj14);
IkReal x1438=((IkReal(1.00000000000000))*(x1436));
IkReal x1439=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1440=((IkReal(1.00000000000000))*(x1437));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1439)))+(((IkReal(-1.00000000000000))*(x1438)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1440)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1440)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1439)))+(((IkReal(-1.00000000000000))*(x1438)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1441=(sj14)*(sj14);
IkReal x1442=(cj14)*(cj14);
IkReal x1443=((cj14)*(sj13));
IkReal x1444=((IkReal(1.00000000000000))*(r11));
IkReal x1445=((cj13)*(r00));
IkReal x1446=((sj13)*(sj14));
IkReal x1447=((cj13)*(r01)*(r10));
gconst45=IKsign(((((x1442)*(x1447)))+(((x1441)*(x1447)))+(((r01)*(r12)*(x1443)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(r02)*(x1443)*(x1444)))+(((r00)*(r12)*(x1446)))+(((IkReal(-1.00000000000000))*(x1441)*(x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1446)))));
IkReal x1448=(sj14)*(sj14);
IkReal x1449=(cj14)*(cj14);
IkReal x1450=((cj14)*(sj13));
IkReal x1451=((IkReal(1.00000000000000))*(r11));
IkReal x1452=((cj13)*(r00));
IkReal x1453=((sj13)*(sj14));
IkReal x1454=((cj13)*(r01)*(r10));
dummyeval[0]=((((r00)*(r12)*(x1453)))+(((IkReal(-1.00000000000000))*(x1449)*(x1451)*(x1452)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1453)))+(((x1448)*(x1454)))+(((IkReal(-1.00000000000000))*(x1448)*(x1451)*(x1452)))+(((r01)*(r12)*(x1450)))+(((IkReal(-1.00000000000000))*(r02)*(x1450)*(x1451)))+(((x1449)*(x1454))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1455=((cj13)*(cj14));
IkReal x1456=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst45)*(((((r10)*(x1455)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1456))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1456)))+(((r00)*(x1455))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst45)*(((((r10)*(x1455)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1456)))))), ((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1456)))+(((r00)*(x1455)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1457=IKsin(j9);
IkReal x1458=IKcos(j9);
IkReal x1459=((IkReal(1.00000000000000))*(cj14));
IkReal x1460=((IkReal(1.00000000000000))*(sj14));
IkReal x1461=((cj13)*(cj14));
IkReal x1462=((cj14)*(r10));
IkReal x1463=((r01)*(sj14));
IkReal x1464=((IkReal(1.00000000000000))*(r12));
IkReal x1465=((sj13)*(x1458));
IkReal x1466=((r02)*(x1457));
IkReal x1467=((r11)*(x1457));
IkReal x1468=((r10)*(x1458));
IkReal x1469=((r01)*(x1458));
IkReal x1470=((sj13)*(x1457));
IkReal x1471=((r11)*(x1458));
IkReal x1472=((cj13)*(x1457));
IkReal x1473=((r10)*(x1457));
IkReal x1474=((r00)*(x1458));
IkReal x1475=((cj13)*(x1458));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1460)*(x1468)))+(((r00)*(sj14)*(x1457)))+(((cj14)*(r01)*(x1457)))+(((IkReal(-1.00000000000000))*(x1459)*(x1471))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1459)*(x1467)))+(((IkReal(-1.00000000000000))*(x1459)*(x1469)))+(((IkReal(-1.00000000000000))*(x1460)*(x1474)))+(((IkReal(-1.00000000000000))*(x1460)*(x1473))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1459)*(x1472)))+(((x1461)*(x1468)))+(((IkReal(-1.00000000000000))*(cj13)*(x1460)*(x1471)))+(((IkReal(-1.00000000000000))*(sj13)*(x1466)))+(((x1463)*(x1472)))+(((r12)*(x1465))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1459)*(x1470)))+(((cj13)*(x1466)))+(((IkReal(-1.00000000000000))*(r11)*(x1460)*(x1465)))+(((x1463)*(x1470)))+(((x1462)*(x1465)))+(((IkReal(-1.00000000000000))*(x1464)*(x1475))));
evalcond[4]=((((r12)*(x1470)))+(((cj10)*(sj11)))+(((r02)*(x1465)))+(((IkReal(-1.00000000000000))*(cj13)*(x1460)*(x1469)))+(((IkReal(-1.00000000000000))*(cj13)*(x1460)*(x1467)))+(((cj11)*(sj10)))+(((x1461)*(x1474)))+(((x1461)*(x1473))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x1460)*(x1465)))+(((IkReal(-1.00000000000000))*(sj13)*(x1460)*(x1467)))+(((x1462)*(x1470)))+(((IkReal(-1.00000000000000))*(r02)*(x1475)))+(((sj10)*(sj11)))+(((cj14)*(r00)*(x1465)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1464)*(x1472))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst44)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1476=IKsin(j9);
IkReal x1477=IKcos(j9);
IkReal x1478=((IkReal(1.00000000000000))*(cj14));
IkReal x1479=((IkReal(1.00000000000000))*(sj14));
IkReal x1480=((cj13)*(cj14));
IkReal x1481=((cj14)*(r10));
IkReal x1482=((r01)*(sj14));
IkReal x1483=((IkReal(1.00000000000000))*(r12));
IkReal x1484=((sj13)*(x1477));
IkReal x1485=((r02)*(x1476));
IkReal x1486=((r11)*(x1476));
IkReal x1487=((r10)*(x1477));
IkReal x1488=((r01)*(x1477));
IkReal x1489=((sj13)*(x1476));
IkReal x1490=((r11)*(x1477));
IkReal x1491=((cj13)*(x1476));
IkReal x1492=((r10)*(x1476));
IkReal x1493=((r00)*(x1477));
IkReal x1494=((cj13)*(x1477));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1479)*(x1487)))+(((r00)*(sj14)*(x1476)))+(((cj14)*(r01)*(x1476)))+(((IkReal(-1.00000000000000))*(x1478)*(x1490))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1479)*(x1493)))+(((IkReal(-1.00000000000000))*(x1479)*(x1492)))+(((IkReal(-1.00000000000000))*(x1478)*(x1486)))+(((IkReal(-1.00000000000000))*(x1478)*(x1488))));
evalcond[2]=((((x1482)*(x1491)))+(((IkReal(-1.00000000000000))*(sj13)*(x1485)))+(((x1480)*(x1487)))+(((IkReal(-1.00000000000000))*(r00)*(x1478)*(x1491)))+(((r12)*(x1484)))+(((IkReal(-1.00000000000000))*(cj13)*(x1479)*(x1490))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1478)*(x1489)))+(((x1482)*(x1489)))+(((cj13)*(x1485)))+(((x1481)*(x1484)))+(((IkReal(-1.00000000000000))*(x1483)*(x1494)))+(((IkReal(-1.00000000000000))*(r11)*(x1479)*(x1484))));
evalcond[4]=((((r12)*(x1489)))+(((x1480)*(x1492)))+(((x1480)*(x1493)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1479)*(x1488)))+(((IkReal(-1.00000000000000))*(cj13)*(x1479)*(x1486)))+(((r02)*(x1484)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1494)))+(((cj14)*(r00)*(x1484)))+(((x1481)*(x1489)))+(((IkReal(-1.00000000000000))*(sj13)*(x1479)*(x1486)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1483)*(x1491)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(r01)*(x1479)*(x1484))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((cj14)*(r11)))+(((r10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)))))), ((gconst39)*(((((cj14)*(r11)))+(((r10)*(sj14)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1495=IKsin(j9);
IkReal x1496=IKcos(j9);
IkReal x1497=((r10)*(sj14));
IkReal x1498=((cj14)*(r11));
IkReal x1499=((cj14)*(r10));
IkReal x1500=((cj14)*(r00));
IkReal x1501=((r11)*(sj14));
IkReal x1502=((r00)*(sj14));
IkReal x1503=((IkReal(1.00000000000000))*(x1495));
IkReal x1504=((cj13)*(x1495));
IkReal x1505=((sj13)*(x1496));
IkReal x1506=((r01)*(x1495));
IkReal x1507=((IkReal(1.00000000000000))*(x1496));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1498)*(x1507)))+(((x1495)*(x1502)))+(((IkReal(-1.00000000000000))*(x1497)*(x1507)))+(((cj14)*(x1506))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1507)))+(((IkReal(-1.00000000000000))*(x1498)*(x1503)))+(((IkReal(-1.00000000000000))*(x1497)*(x1503)))+(((IkReal(-1.00000000000000))*(x1502)*(x1507))));
evalcond[2]=((((cj13)*(x1496)*(x1499)))+(((r12)*(x1505)))+(((IkReal(-1.00000000000000))*(cj13)*(x1501)*(x1507)))+(((r01)*(sj14)*(x1504)))+(((IkReal(-1.00000000000000))*(cj13)*(x1500)*(x1503)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1503))));
evalcond[3]=((((x1499)*(x1505)))+(((sj13)*(sj14)*(x1506)))+(((r02)*(x1504)))+(((IkReal(-1.00000000000000))*(sj13)*(x1500)*(x1503)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1507)))+(((IkReal(-1.00000000000000))*(x1501)*(x1505))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1508=((cj13)*(sj14));
IkReal x1509=((IkReal(1.00000000000000))*(cj11));
IkReal x1510=((r11)*(sj9));
IkReal x1511=((IkReal(1.00000000000000))*(sj11));
IkReal x1512=((cj13)*(cj14));
IkReal x1513=((cj11)*(sj13));
IkReal x1514=((r12)*(sj9));
IkReal x1515=((cj9)*(r01));
IkReal x1516=((sj11)*(sj13));
IkReal x1517=((cj9)*(r02));
IkReal x1518=((r10)*(sj9));
IkReal x1519=((cj9)*(r00));
if( IKabs(((gconst43)*(((((x1513)*(x1514)))+(((x1513)*(x1517)))+(((r21)*(sj11)*(x1508)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)*(x1510)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)*(x1515)))+(((IkReal(-1.00000000000000))*(r20)*(x1511)*(x1512)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1511)))+(((cj11)*(x1512)*(x1518)))+(((cj11)*(x1512)*(x1519))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((x1514)*(x1516)))+(((x1516)*(x1517)))+(((cj11)*(r20)*(x1512)))+(((IkReal(-1.00000000000000))*(r21)*(x1508)*(x1509)))+(((r22)*(x1513)))+(((sj11)*(x1512)*(x1519)))+(((sj11)*(x1512)*(x1518)))+(((IkReal(-1.00000000000000))*(x1508)*(x1510)*(x1511)))+(((IkReal(-1.00000000000000))*(x1508)*(x1511)*(x1515))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((x1513)*(x1514)))+(((x1513)*(x1517)))+(((r21)*(sj11)*(x1508)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)*(x1510)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)*(x1515)))+(((IkReal(-1.00000000000000))*(r20)*(x1511)*(x1512)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1511)))+(((cj11)*(x1512)*(x1518)))+(((cj11)*(x1512)*(x1519)))))), ((gconst43)*(((((x1514)*(x1516)))+(((x1516)*(x1517)))+(((cj11)*(r20)*(x1512)))+(((IkReal(-1.00000000000000))*(r21)*(x1508)*(x1509)))+(((r22)*(x1513)))+(((sj11)*(x1512)*(x1519)))+(((sj11)*(x1512)*(x1518)))+(((IkReal(-1.00000000000000))*(x1508)*(x1510)*(x1511)))+(((IkReal(-1.00000000000000))*(x1508)*(x1511)*(x1515)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1520=IKsin(j10);
IkReal x1521=IKcos(j10);
IkReal x1522=((IkReal(1.00000000000000))*(sj13));
IkReal x1523=((r11)*(sj9));
IkReal x1524=((cj9)*(r01));
IkReal x1525=((IkReal(1.00000000000000))*(cj11));
IkReal x1526=((r21)*(sj14));
IkReal x1527=((cj9)*(r02));
IkReal x1528=((sj13)*(sj9));
IkReal x1529=((cj14)*(r10));
IkReal x1530=((IkReal(1.00000000000000))*(cj13));
IkReal x1531=((cj14)*(r20));
IkReal x1532=((sj11)*(x1520));
IkReal x1533=((sj14)*(x1530));
IkReal x1534=((sj11)*(x1521));
IkReal x1535=((cj14)*(cj9)*(r00));
IkReal x1536=((x1521)*(x1525));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1530)*(x1531)))+(((IkReal(-1.00000000000000))*(x1536)))+(((IkReal(-1.00000000000000))*(r22)*(x1522)))+(x1532)+(((cj13)*(x1526))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1534)))+(((sj13)*(x1526)))+(((IkReal(-1.00000000000000))*(x1522)*(x1531)))+(((IkReal(-1.00000000000000))*(x1520)*(x1525)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1524)*(x1533)))+(((cj11)*(x1520)))+(((r12)*(x1528)))+(((cj13)*(sj9)*(x1529)))+(x1534)+(((cj13)*(x1535)))+(((sj13)*(x1527)))+(((IkReal(-1.00000000000000))*(x1523)*(x1533))));
evalcond[3]=((((x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(x1536)))+(x1532)+(((IkReal(-1.00000000000000))*(sj14)*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(sj14)*(x1522)*(x1524)))+(((sj13)*(x1535)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1530)))+(((IkReal(-1.00000000000000))*(x1527)*(x1530))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1537=((cj11)*(r22));
IkReal x1538=((IkReal(1.00000000000000))*(sj13));
IkReal x1539=((cj13)*(sj11));
IkReal x1540=((r21)*(sj14));
IkReal x1541=((cj11)*(cj13));
IkReal x1542=((sj11)*(sj13));
IkReal x1543=((cj14)*(r20));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1539)*(x1540)))+(((cj11)*(sj13)*(x1540)))+(((x1539)*(x1543)))+(((IkReal(-1.00000000000000))*(cj11)*(x1538)*(x1543)))+(((cj13)*(x1537)))+(((r22)*(x1542))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1541)*(x1543)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((x1540)*(x1541)))+(((x1540)*(x1542)))+(((r22)*(x1539)))+(((IkReal(-1.00000000000000))*(sj11)*(x1538)*(x1543))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(x1539)*(x1540)))+(((cj11)*(sj13)*(x1540)))+(((x1539)*(x1543)))+(((IkReal(-1.00000000000000))*(cj11)*(x1538)*(x1543)))+(((cj13)*(x1537)))+(((r22)*(x1542)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1541)*(x1543)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((x1540)*(x1541)))+(((x1540)*(x1542)))+(((r22)*(x1539)))+(((IkReal(-1.00000000000000))*(sj11)*(x1538)*(x1543)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1544=IKsin(j10);
IkReal x1545=IKcos(j10);
IkReal x1546=((IkReal(1.00000000000000))*(sj13));
IkReal x1547=((r11)*(sj9));
IkReal x1548=((cj9)*(r01));
IkReal x1549=((IkReal(1.00000000000000))*(cj11));
IkReal x1550=((r21)*(sj14));
IkReal x1551=((cj9)*(r02));
IkReal x1552=((sj13)*(sj9));
IkReal x1553=((cj14)*(r10));
IkReal x1554=((IkReal(1.00000000000000))*(cj13));
IkReal x1555=((cj14)*(r20));
IkReal x1556=((sj11)*(x1544));
IkReal x1557=((sj14)*(x1554));
IkReal x1558=((sj11)*(x1545));
IkReal x1559=((cj14)*(cj9)*(r00));
IkReal x1560=((x1545)*(x1549));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1546)))+(x1556)+(((cj13)*(x1550)))+(((IkReal(-1.00000000000000))*(x1560)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1558)))+(((IkReal(-1.00000000000000))*(x1546)*(x1555)))+(((sj13)*(x1550)))+(((IkReal(-1.00000000000000))*(x1544)*(x1549)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1551)))+(((cj11)*(x1544)))+(((IkReal(-1.00000000000000))*(x1548)*(x1557)))+(((r12)*(x1552)))+(x1558)+(((cj13)*(x1559)))+(((IkReal(-1.00000000000000))*(x1547)*(x1557)))+(((cj13)*(sj9)*(x1553))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1546)*(x1548)))+(((IkReal(-1.00000000000000))*(sj14)*(x1546)*(x1547)))+(((x1552)*(x1553)))+(((sj13)*(x1559)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1554)))+(x1556)+(((IkReal(-1.00000000000000))*(x1551)*(x1554)))+(((IkReal(-1.00000000000000))*(x1560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1561=((cj12)*(sj13));
IkReal x1562=((cj12)*(cj13));
IkReal x1563=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst2)*(((((r12)*(x1561)))+(((IkReal(-1.00000000000000))*(r11)*(x1562)*(x1563)))+(((cj14)*(r10)*(x1562))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r01)*(x1562)*(x1563)))+(((cj14)*(r00)*(x1562)))+(((r02)*(x1561))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst2)*(((((r12)*(x1561)))+(((IkReal(-1.00000000000000))*(r11)*(x1562)*(x1563)))+(((cj14)*(r10)*(x1562)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(r01)*(x1562)*(x1563)))+(((cj14)*(r00)*(x1562)))+(((r02)*(x1561)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x1564=IKsin(j9);
IkReal x1565=IKcos(j9);
IkReal x1566=((IkReal(1.00000000000000))*(sj14));
IkReal x1567=((sj13)*(x1565));
IkReal x1568=((cj13)*(x1564));
IkReal x1569=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x1570=((r01)*(x1564));
IkReal x1571=((r10)*(x1565));
IkReal x1572=((sj13)*(x1564));
IkReal x1573=((cj13)*(x1565));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1566)*(x1571)))+(cj12)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1565)))+(((r00)*(sj14)*(x1564)))+(((cj14)*(x1570))));
evalcond[1]=((((r01)*(sj14)*(x1568)))+(((cj13)*(cj14)*(x1571)))+(((r12)*(x1567)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1573)))+(((IkReal(-1.00000000000000))*(r02)*(x1572))));
evalcond[2]=((sj12)+(((IkReal(-1.00000000000000))*(x1569)*(x1572)))+(((cj14)*(r10)*(x1567)))+(((sj13)*(sj14)*(x1570)))+(((IkReal(-1.00000000000000))*(r12)*(x1573)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1567)))+(((r02)*(x1568))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1574=((r00)*(sj9));
IkReal x1575=((IkReal(1.00000000000000))*(sj13));
IkReal x1576=((cj13)*(sj14));
IkReal x1577=((cj9)*(sj14));
IkReal x1578=((cj13)*(r02));
IkReal x1579=((sj13)*(sj14));
IkReal x1580=((r01)*(sj9));
IkReal x1581=((cj9)*(sj13));
IkReal x1582=((IkReal(1.00000000000000))*(cj9));
IkReal x1583=((cj14)*(r10));
IkReal x1584=((cj14)*(npx));
IkReal x1585=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x1575)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x1584)*(x1585)))+(((npy)*(x1576))));
evalcond[3]=((((sj14)*(x1574)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1582)))+(((IkReal(-1.00000000000000))*(r10)*(x1577)))+(((cj14)*(x1580))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x1575)))+(((r21)*(x1579)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x1579)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x1575)*(x1584))));
evalcond[6]=((((cj13)*(cj9)*(x1583)))+(((IkReal(-1.00000000000000))*(cj14)*(x1574)*(x1585)))+(((x1576)*(x1580)))+(((r12)*(x1581)))+(((IkReal(-1.00000000000000))*(r11)*(x1576)*(x1582)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1575))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1582)))+(((x1579)*(x1580)))+(((IkReal(-1.00000000000000))*(r11)*(x1575)*(x1577)))+(((IkReal(-1.00000000000000))*(cj14)*(x1574)*(x1575)))+(((sj9)*(x1578)))+(((x1581)*(x1583))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1578)*(x1582)))+(((IkReal(-1.00000000000000))*(r01)*(x1575)*(x1577)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x1575)))+(((sj13)*(sj9)*(x1583)))+(((cj14)*(r00)*(x1581)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1585))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1586=((IkReal(1.00000000000000))*(cj11));
IkReal x1587=((r20)*(sj14));
IkReal x1588=((cj14)*(r21));
IkReal x1589=((cj14)*(cj9)*(r01));
IkReal x1590=((r10)*(sj14)*(sj9));
IkReal x1591=((cj9)*(r00)*(sj14));
IkReal x1592=((cj14)*(r11)*(sj9));
if( IKabs(((gconst9)*(((((sj11)*(x1592)))+(((sj11)*(x1590)))+(((sj11)*(x1591)))+(((sj11)*(x1589)))+(((cj11)*(x1588)))+(((cj11)*(x1587))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((sj11)*(x1588)))+(((sj11)*(x1587)))+(((IkReal(-1.00000000000000))*(x1586)*(x1591)))+(((IkReal(-1.00000000000000))*(x1586)*(x1590)))+(((IkReal(-1.00000000000000))*(x1586)*(x1592)))+(((IkReal(-1.00000000000000))*(x1586)*(x1589))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst9)*(((((sj11)*(x1592)))+(((sj11)*(x1590)))+(((sj11)*(x1591)))+(((sj11)*(x1589)))+(((cj11)*(x1588)))+(((cj11)*(x1587)))))), ((gconst9)*(((((sj11)*(x1588)))+(((sj11)*(x1587)))+(((IkReal(-1.00000000000000))*(x1586)*(x1591)))+(((IkReal(-1.00000000000000))*(x1586)*(x1590)))+(((IkReal(-1.00000000000000))*(x1586)*(x1592)))+(((IkReal(-1.00000000000000))*(x1586)*(x1589)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1593=IKsin(j10);
IkReal x1594=IKcos(j10);
IkReal x1595=((cj13)*(sj14));
IkReal x1596=((cj13)*(cj14));
IkReal x1597=((r10)*(sj9));
IkReal x1598=((IkReal(1.00000000000000))*(cj9));
IkReal x1599=((sj11)*(x1593));
IkReal x1600=((IkReal(1.00000000000000))*(x1594));
IkReal x1601=((cj11)*(x1593));
IkReal x1602=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1603=((cj11)*(x1600));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1601)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x1600))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1603)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x1599)+(((r21)*(x1595)))+(((IkReal(-1.00000000000000))*(r20)*(x1596))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1603)))+(((IkReal(-1.00000000000000))*(cj14)*(x1602)))+(x1599)+(((IkReal(-1.00000000000000))*(sj14)*(x1597)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1598)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1598))));
evalcond[3]=((((x1596)*(x1597)))+(((cj9)*(r00)*(x1596)))+(((sj11)*(x1594)))+(x1601)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x1595)*(x1602)))+(((IkReal(-1.00000000000000))*(r01)*(x1595)*(x1598)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1604=((cj11)*(r20));
IkReal x1605=((IkReal(1.00000000000000))*(cj13));
IkReal x1606=((r21)*(sj14));
IkReal x1607=((r22)*(sj13));
IkReal x1608=((cj14)*(sj11));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj11)*(x1605)*(x1606)))+(((cj11)*(cj14)*(r21)))+(((sj11)*(x1607)))+(((sj14)*(x1604)))+(((cj13)*(r20)*(x1608))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((r21)*(x1608)))+(((IkReal(-1.00000000000000))*(cj14)*(x1604)*(x1605)))+(((IkReal(-1.00000000000000))*(cj11)*(x1607)))+(((r20)*(sj11)*(sj14)))+(((cj11)*(cj13)*(x1606))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj11)*(x1605)*(x1606)))+(((cj11)*(cj14)*(r21)))+(((sj11)*(x1607)))+(((sj14)*(x1604)))+(((cj13)*(r20)*(x1608)))))), ((gconst8)*(((((r21)*(x1608)))+(((IkReal(-1.00000000000000))*(cj14)*(x1604)*(x1605)))+(((IkReal(-1.00000000000000))*(cj11)*(x1607)))+(((r20)*(sj11)*(sj14)))+(((cj11)*(cj13)*(x1606)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1609=IKsin(j10);
IkReal x1610=IKcos(j10);
IkReal x1611=((cj13)*(sj14));
IkReal x1612=((cj13)*(cj14));
IkReal x1613=((r10)*(sj9));
IkReal x1614=((IkReal(1.00000000000000))*(cj9));
IkReal x1615=((sj11)*(x1609));
IkReal x1616=((IkReal(1.00000000000000))*(x1610));
IkReal x1617=((cj11)*(x1609));
IkReal x1618=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1619=((cj11)*(x1616));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1617)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x1616))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x1612)))+(((r21)*(x1611)))+(x1615)+(((IkReal(-1.00000000000000))*(x1619)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x1613)))+(x1615)+(((IkReal(-1.00000000000000))*(x1619)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1614)))+(((IkReal(-1.00000000000000))*(cj14)*(x1618)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1614))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1611)*(x1614)))+(((IkReal(-1.00000000000000))*(x1611)*(x1618)))+(x1617)+(((cj9)*(r02)*(sj13)))+(((sj11)*(x1610)))+(((cj9)*(r00)*(x1612)))+(((x1612)*(x1613)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1620=((r00)*(sj9));
IkReal x1621=((IkReal(1.00000000000000))*(sj13));
IkReal x1622=((cj13)*(sj14));
IkReal x1623=((cj9)*(sj14));
IkReal x1624=((cj13)*(r02));
IkReal x1625=((sj13)*(sj14));
IkReal x1626=((r01)*(sj9));
IkReal x1627=((cj9)*(sj13));
IkReal x1628=((IkReal(1.00000000000000))*(cj9));
IkReal x1629=((cj14)*(r10));
IkReal x1630=((cj14)*(npx));
IkReal x1631=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x1622)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x1630)*(x1631)))+(((IkReal(-1.00000000000000))*(npz)*(x1621))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1628)))+(((sj14)*(x1620)))+(((IkReal(-1.00000000000000))*(r10)*(x1623)))+(((cj14)*(x1626))));
evalcond[4]=((((r21)*(x1625)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x1621)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((npy)*(x1625)))+(((IkReal(-1.00000000000000))*(x1621)*(x1630)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((cj13)*(cj9)*(x1629)))+(((IkReal(-1.00000000000000))*(r11)*(x1622)*(x1628)))+(((x1622)*(x1626)))+(((r12)*(x1627)))+(((IkReal(-1.00000000000000))*(cj14)*(x1620)*(x1631)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1621))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(x1620)*(x1621)))+(((x1627)*(x1629)))+(((IkReal(-1.00000000000000))*(r11)*(x1621)*(x1623)))+(((sj9)*(x1624)))+(((x1625)*(x1626)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1628))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1631)))+(((IkReal(-1.00000000000000))*(r01)*(x1621)*(x1623)))+(((cj14)*(r00)*(x1627)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x1621)))+(((IkReal(-1.00000000000000))*(x1624)*(x1628)))+(((sj13)*(sj9)*(x1629))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1632=((IkReal(1.00000000000000))*(sj11));
IkReal x1633=((cj14)*(r21));
IkReal x1634=((IkReal(1.00000000000000))*(cj11));
IkReal x1635=((r20)*(sj14));
IkReal x1636=((cj9)*(r00)*(sj14));
IkReal x1637=((cj14)*(r11)*(sj9));
IkReal x1638=((cj14)*(cj9)*(r01));
IkReal x1639=((r10)*(sj14)*(sj9));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(((IkReal(-1.00000000000000))*(x1633)*(x1634)))+(((IkReal(-1.00000000000000))*(x1632)*(x1639)))+(((IkReal(-1.00000000000000))*(x1632)*(x1638)))+(((IkReal(-1.00000000000000))*(x1632)*(x1637)))+(((IkReal(-1.00000000000000))*(x1632)*(x1636))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj11)*(x1636)))+(((cj11)*(x1637)))+(((cj11)*(x1638)))+(((cj11)*(x1639)))+(((IkReal(-1.00000000000000))*(x1632)*(x1635)))+(((IkReal(-1.00000000000000))*(x1632)*(x1633))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(((IkReal(-1.00000000000000))*(x1633)*(x1634)))+(((IkReal(-1.00000000000000))*(x1632)*(x1639)))+(((IkReal(-1.00000000000000))*(x1632)*(x1638)))+(((IkReal(-1.00000000000000))*(x1632)*(x1637)))+(((IkReal(-1.00000000000000))*(x1632)*(x1636)))))), ((gconst11)*(((((cj11)*(x1636)))+(((cj11)*(x1637)))+(((cj11)*(x1638)))+(((cj11)*(x1639)))+(((IkReal(-1.00000000000000))*(x1632)*(x1635)))+(((IkReal(-1.00000000000000))*(x1632)*(x1633)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1640=IKsin(j10);
IkReal x1641=IKcos(j10);
IkReal x1642=((cj14)*(sj9));
IkReal x1643=((IkReal(1.00000000000000))*(r11));
IkReal x1644=((cj13)*(sj14));
IkReal x1645=((IkReal(1.00000000000000))*(cj9));
IkReal x1646=((cj13)*(cj14));
IkReal x1647=((cj11)*(x1640));
IkReal x1648=((sj11)*(x1641));
IkReal x1649=((cj11)*(x1641));
IkReal x1650=((sj11)*(x1640));
IkReal x1651=((x1647)+(x1648));
evalcond[0]=((((cj14)*(r21)))+(x1651)+(((r20)*(sj14))));
evalcond[1]=((((r21)*(x1644)))+(x1650)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x1649)))+(((IkReal(-1.00000000000000))*(r20)*(x1646))));
evalcond[2]=((x1649)+(((IkReal(-1.00000000000000))*(x1650)))+(((IkReal(-1.00000000000000))*(x1642)*(x1643)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1645)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1645))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x1643)*(x1644)))+(x1651)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1644)*(x1645)))+(((cj13)*(r10)*(x1642)))+(((cj9)*(r00)*(x1646)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1652=((cj13)*(sj11));
IkReal x1653=((r21)*(sj14));
IkReal x1654=((cj14)*(r20));
IkReal x1655=((cj11)*(cj13));
IkReal x1656=((r22)*(sj13));
IkReal x1657=((r20)*(sj14));
IkReal x1658=((cj14)*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(sj11)*(x1656)))+(((IkReal(-1.00000000000000))*(x1652)*(x1654)))+(((cj11)*(x1658)))+(((cj11)*(x1657)))+(((x1652)*(x1653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((sj11)*(x1657)))+(((sj11)*(x1658)))+(((x1654)*(x1655)))+(((IkReal(-1.00000000000000))*(x1653)*(x1655)))+(((cj11)*(x1656))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(sj11)*(x1656)))+(((IkReal(-1.00000000000000))*(x1652)*(x1654)))+(((cj11)*(x1658)))+(((cj11)*(x1657)))+(((x1652)*(x1653)))))), ((gconst10)*(((((sj11)*(x1657)))+(((sj11)*(x1658)))+(((x1654)*(x1655)))+(((IkReal(-1.00000000000000))*(x1653)*(x1655)))+(((cj11)*(x1656)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1659=IKsin(j10);
IkReal x1660=IKcos(j10);
IkReal x1661=((cj14)*(sj9));
IkReal x1662=((IkReal(1.00000000000000))*(r11));
IkReal x1663=((cj13)*(sj14));
IkReal x1664=((IkReal(1.00000000000000))*(cj9));
IkReal x1665=((cj13)*(cj14));
IkReal x1666=((cj11)*(x1659));
IkReal x1667=((sj11)*(x1660));
IkReal x1668=((cj11)*(x1660));
IkReal x1669=((sj11)*(x1659));
IkReal x1670=((x1667)+(x1666));
evalcond[0]=((((cj14)*(r21)))+(x1670)+(((r20)*(sj14))));
evalcond[1]=((x1669)+(((IkReal(-1.00000000000000))*(x1668)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1665)))+(((r21)*(x1663))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1664)))+(((IkReal(-1.00000000000000))*(x1661)*(x1662)))+(x1668)+(((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1664))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x1662)*(x1663)))+(((IkReal(-1.00000000000000))*(r01)*(x1663)*(x1664)))+(x1670)+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x1665)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r10)*(x1661))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1671=((cj9)*(r10));
IkReal x1672=((cj13)*(cj14));
IkReal x1673=((sj14)*(sj9));
IkReal x1674=((IkReal(1.00000000000000))*(sj14));
IkReal x1675=((cj9)*(sj13));
IkReal x1676=((r02)*(sj9));
IkReal x1677=((cj13)*(cj9));
IkReal x1678=((cj14)*(r01));
IkReal x1679=((IkReal(1.00000000000000))*(npx));
IkReal x1680=((cj14)*(sj13));
IkReal x1681=((IkReal(1.00000000000000))*(cj9));
IkReal x1682=((npy)*(sj14));
IkReal x1683=((IkReal(1.00000000000000))*(sj13));
IkReal x1684=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x1672)*(x1679)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x1682)))+(((IkReal(-1.00000000000000))*(npz)*(x1683))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x1673)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1681)))+(((IkReal(-1.00000000000000))*(x1671)*(x1674)))+(((sj9)*(x1678))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x1679)*(x1680)))+(((cj13)*(npz)))+(((sj13)*(x1682)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x1684)))+(((IkReal(-1.00000000000000))*(r10)*(x1673)))+(((IkReal(-1.00000000000000))*(x1678)*(x1681)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1674))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r00)*(sj9)*(x1672)))+(((cj13)*(r01)*(x1673)))+(((IkReal(-1.00000000000000))*(x1676)*(x1683)))+(((IkReal(-1.00000000000000))*(r11)*(x1674)*(x1677)))+(((x1671)*(x1672)))+(((r12)*(x1675))));
evalcond[8]=((((r01)*(sj13)*(x1673)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x1680)))+(((x1671)*(x1680)))+(((IkReal(-1.00000000000000))*(r11)*(x1674)*(x1675)))+(((IkReal(-1.00000000000000))*(r12)*(x1677)))+(((cj13)*(x1676))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1685=((cj13)*(sj14));
IkReal x1686=((IkReal(1.00000000000000))*(cj11));
IkReal x1687=((r11)*(sj9));
IkReal x1688=((IkReal(1.00000000000000))*(sj11));
IkReal x1689=((cj13)*(cj14));
IkReal x1690=((cj9)*(r01));
IkReal x1691=((cj9)*(sj11));
IkReal x1692=((r02)*(sj13));
IkReal x1693=((r10)*(sj9));
IkReal x1694=((cj11)*(cj9));
IkReal x1695=((r22)*(sj13));
IkReal x1696=((r12)*(sj13)*(sj9));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(x1688)*(x1695)))+(((IkReal(-1.00000000000000))*(x1685)*(x1686)*(x1690)))+(((IkReal(-1.00000000000000))*(r20)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1685)*(x1686)*(x1687)))+(((r00)*(x1689)*(x1694)))+(((x1692)*(x1694)))+(((cj11)*(x1696)))+(((r21)*(sj11)*(x1685)))+(((cj11)*(x1689)*(x1693))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((sj11)*(x1696)))+(((r00)*(x1689)*(x1691)))+(((x1691)*(x1692)))+(((sj11)*(x1689)*(x1693)))+(((cj11)*(x1695)))+(((cj11)*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1685)*(x1687)*(x1688)))+(((IkReal(-1.00000000000000))*(r21)*(x1685)*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)*(x1688)*(x1690))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(x1688)*(x1695)))+(((IkReal(-1.00000000000000))*(x1685)*(x1686)*(x1690)))+(((IkReal(-1.00000000000000))*(r20)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1685)*(x1686)*(x1687)))+(((r00)*(x1689)*(x1694)))+(((x1692)*(x1694)))+(((cj11)*(x1696)))+(((r21)*(sj11)*(x1685)))+(((cj11)*(x1689)*(x1693)))))), ((gconst13)*(((((sj11)*(x1696)))+(((r00)*(x1689)*(x1691)))+(((x1691)*(x1692)))+(((sj11)*(x1689)*(x1693)))+(((cj11)*(x1695)))+(((cj11)*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1685)*(x1687)*(x1688)))+(((IkReal(-1.00000000000000))*(r21)*(x1685)*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)*(x1688)*(x1690)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1697=IKsin(j10);
IkReal x1698=IKcos(j10);
IkReal x1699=((IkReal(1.00000000000000))*(sj13));
IkReal x1700=((r11)*(sj9));
IkReal x1701=((cj9)*(r01));
IkReal x1702=((r21)*(sj14));
IkReal x1703=((cj9)*(r02));
IkReal x1704=((sj13)*(sj9));
IkReal x1705=((cj14)*(r10));
IkReal x1706=((IkReal(1.00000000000000))*(cj13));
IkReal x1707=((cj14)*(r20));
IkReal x1708=((cj11)*(x1697));
IkReal x1709=((sj11)*(x1698));
IkReal x1710=((sj14)*(x1706));
IkReal x1711=((sj11)*(x1697));
IkReal x1712=((cj11)*(x1698));
IkReal x1713=((cj14)*(cj9)*(r00));
IkReal x1714=((x1708)+(x1709));
evalcond[0]=((x1711)+(((IkReal(-1.00000000000000))*(x1712)))+(((IkReal(-1.00000000000000))*(r22)*(x1699)))+(((IkReal(-1.00000000000000))*(x1706)*(x1707)))+(((cj13)*(x1702))));
evalcond[1]=((x1714)+(((IkReal(-1.00000000000000))*(x1699)*(x1707)))+(((sj13)*(x1702)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1701)*(x1710)))+(((cj13)*(x1713)))+(((r12)*(x1704)))+(x1714)+(((sj13)*(x1703)))+(((IkReal(-1.00000000000000))*(x1700)*(x1710)))+(((cj13)*(sj9)*(x1705))));
evalcond[3]=((x1712)+(((sj13)*(x1713)))+(((IkReal(-1.00000000000000))*(x1711)))+(((x1704)*(x1705)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1706)))+(((IkReal(-1.00000000000000))*(x1703)*(x1706)))+(((IkReal(-1.00000000000000))*(sj14)*(x1699)*(x1700)))+(((IkReal(-1.00000000000000))*(sj14)*(x1699)*(x1701))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1715=((IkReal(1.00000000000000))*(cj11));
IkReal x1716=((cj11)*(r22));
IkReal x1717=((sj11)*(sj13));
IkReal x1718=((r21)*(sj14));
IkReal x1719=((cj13)*(sj11));
IkReal x1720=((cj14)*(r20));
IkReal x1721=((cj13)*(x1718));
IkReal x1722=((IkReal(1.00000000000000))*(x1720));
if( IKabs(((gconst12)*(((((cj13)*(x1716)))+(((cj11)*(sj13)*(x1718)))+(((IkReal(-1.00000000000000))*(r22)*(x1717)))+(((IkReal(-1.00000000000000))*(sj13)*(x1715)*(x1720)))+(((IkReal(-1.00000000000000))*(x1719)*(x1722)))+(((x1718)*(x1719))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((r22)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1721)))+(((sj13)*(x1716)))+(((IkReal(-1.00000000000000))*(x1717)*(x1722)))+(((cj11)*(cj13)*(x1720)))+(((x1717)*(x1718))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst12)*(((((cj13)*(x1716)))+(((cj11)*(sj13)*(x1718)))+(((IkReal(-1.00000000000000))*(r22)*(x1717)))+(((IkReal(-1.00000000000000))*(sj13)*(x1715)*(x1720)))+(((IkReal(-1.00000000000000))*(x1719)*(x1722)))+(((x1718)*(x1719)))))), ((gconst12)*(((((r22)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1721)))+(((sj13)*(x1716)))+(((IkReal(-1.00000000000000))*(x1717)*(x1722)))+(((cj11)*(cj13)*(x1720)))+(((x1717)*(x1718)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1723=IKsin(j10);
IkReal x1724=IKcos(j10);
IkReal x1725=((IkReal(1.00000000000000))*(sj13));
IkReal x1726=((r11)*(sj9));
IkReal x1727=((cj9)*(r01));
IkReal x1728=((r21)*(sj14));
IkReal x1729=((cj9)*(r02));
IkReal x1730=((sj13)*(sj9));
IkReal x1731=((cj14)*(r10));
IkReal x1732=((IkReal(1.00000000000000))*(cj13));
IkReal x1733=((cj14)*(r20));
IkReal x1734=((cj11)*(x1723));
IkReal x1735=((sj11)*(x1724));
IkReal x1736=((sj14)*(x1732));
IkReal x1737=((sj11)*(x1723));
IkReal x1738=((cj11)*(x1724));
IkReal x1739=((cj14)*(cj9)*(r00));
IkReal x1740=((x1735)+(x1734));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1725)))+(x1737)+(((cj13)*(x1728)))+(((IkReal(-1.00000000000000))*(x1738)))+(((IkReal(-1.00000000000000))*(x1732)*(x1733))));
evalcond[1]=((x1740)+(((IkReal(-1.00000000000000))*(x1725)*(x1733)))+(((cj13)*(r22)))+(((sj13)*(x1728))));
evalcond[2]=((((cj13)*(sj9)*(x1731)))+(x1740)+(((IkReal(-1.00000000000000))*(x1726)*(x1736)))+(((cj13)*(x1739)))+(((r12)*(x1730)))+(((IkReal(-1.00000000000000))*(x1727)*(x1736)))+(((sj13)*(x1729))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1732)))+(((x1730)*(x1731)))+(x1738)+(((IkReal(-1.00000000000000))*(sj14)*(x1725)*(x1727)))+(((IkReal(-1.00000000000000))*(sj14)*(x1725)*(x1726)))+(((IkReal(-1.00000000000000))*(x1729)*(x1732)))+(((IkReal(-1.00000000000000))*(x1737)))+(((sj13)*(x1739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1741=((cj9)*(r10));
IkReal x1742=((cj13)*(cj14));
IkReal x1743=((sj14)*(sj9));
IkReal x1744=((IkReal(1.00000000000000))*(sj14));
IkReal x1745=((cj9)*(sj13));
IkReal x1746=((r02)*(sj9));
IkReal x1747=((cj13)*(cj9));
IkReal x1748=((cj14)*(r01));
IkReal x1749=((IkReal(1.00000000000000))*(npx));
IkReal x1750=((cj14)*(sj13));
IkReal x1751=((IkReal(1.00000000000000))*(cj9));
IkReal x1752=((npy)*(sj14));
IkReal x1753=((IkReal(1.00000000000000))*(sj13));
IkReal x1754=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x1753)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x1752)))+(((IkReal(-1.00000000000000))*(x1742)*(x1749))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1741)*(x1744)))+(((sj9)*(x1748)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1751)))+(((r00)*(x1743))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x1749)*(x1750)))+(((cj13)*(npz)))+(((sj13)*(x1752)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x1754)))+(((IkReal(-1.00000000000000))*(r10)*(x1743)))+(((IkReal(-1.00000000000000))*(x1748)*(x1751)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1744))));
evalcond[7]=((((r12)*(x1745)))+(((cj13)*(r01)*(x1743)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x1742)))+(((IkReal(-1.00000000000000))*(x1746)*(x1753)))+(((IkReal(-1.00000000000000))*(r11)*(x1744)*(x1747)))+(((x1741)*(x1742))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(sj9)*(x1750)))+(((IkReal(-1.00000000000000))*(r12)*(x1747)))+(((cj13)*(x1746)))+(((r01)*(sj13)*(x1743)))+(((IkReal(-1.00000000000000))*(r11)*(x1744)*(x1745)))+(((x1741)*(x1750))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1755=((cj13)*(sj14));
IkReal x1756=((IkReal(1.00000000000000))*(cj11));
IkReal x1757=((r11)*(sj9));
IkReal x1758=((IkReal(1.00000000000000))*(sj11));
IkReal x1759=((cj13)*(cj14));
IkReal x1760=((cj11)*(sj13));
IkReal x1761=((r12)*(sj9));
IkReal x1762=((cj9)*(r01));
IkReal x1763=((sj11)*(sj13));
IkReal x1764=((cj9)*(r02));
IkReal x1765=((r10)*(sj9));
IkReal x1766=((cj9)*(r00));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1755)*(x1756)*(x1757)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1758)))+(((r21)*(sj11)*(x1755)))+(((IkReal(-1.00000000000000))*(r20)*(x1758)*(x1759)))+(((IkReal(-1.00000000000000))*(x1755)*(x1756)*(x1762)))+(((cj11)*(x1759)*(x1765)))+(((cj11)*(x1759)*(x1766)))+(((x1760)*(x1761)))+(((x1760)*(x1764))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((cj11)*(r20)*(x1759)))+(((IkReal(-1.00000000000000))*(x1755)*(x1758)*(x1762)))+(((IkReal(-1.00000000000000))*(r21)*(x1755)*(x1756)))+(((r22)*(x1760)))+(((IkReal(-1.00000000000000))*(x1755)*(x1757)*(x1758)))+(((x1761)*(x1763)))+(((sj11)*(x1759)*(x1766)))+(((sj11)*(x1759)*(x1765)))+(((x1763)*(x1764))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x1755)*(x1756)*(x1757)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1758)))+(((r21)*(sj11)*(x1755)))+(((IkReal(-1.00000000000000))*(r20)*(x1758)*(x1759)))+(((IkReal(-1.00000000000000))*(x1755)*(x1756)*(x1762)))+(((cj11)*(x1759)*(x1765)))+(((cj11)*(x1759)*(x1766)))+(((x1760)*(x1761)))+(((x1760)*(x1764)))))), ((gconst15)*(((((cj11)*(r20)*(x1759)))+(((IkReal(-1.00000000000000))*(x1755)*(x1758)*(x1762)))+(((IkReal(-1.00000000000000))*(r21)*(x1755)*(x1756)))+(((r22)*(x1760)))+(((IkReal(-1.00000000000000))*(x1755)*(x1757)*(x1758)))+(((x1761)*(x1763)))+(((sj11)*(x1759)*(x1766)))+(((sj11)*(x1759)*(x1765)))+(((x1763)*(x1764)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1767=IKsin(j10);
IkReal x1768=IKcos(j10);
IkReal x1769=((IkReal(1.00000000000000))*(sj13));
IkReal x1770=((r11)*(sj9));
IkReal x1771=((cj9)*(r01));
IkReal x1772=((IkReal(1.00000000000000))*(cj11));
IkReal x1773=((r21)*(sj14));
IkReal x1774=((cj9)*(r02));
IkReal x1775=((sj13)*(sj9));
IkReal x1776=((cj14)*(r10));
IkReal x1777=((IkReal(1.00000000000000))*(cj13));
IkReal x1778=((cj14)*(r20));
IkReal x1779=((sj11)*(x1767));
IkReal x1780=((sj14)*(x1777));
IkReal x1781=((sj11)*(x1768));
IkReal x1782=((cj14)*(cj9)*(r00));
IkReal x1783=((x1768)*(x1772));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1783)))+(x1779)+(((IkReal(-1.00000000000000))*(r22)*(x1769)))+(((IkReal(-1.00000000000000))*(x1777)*(x1778)))+(((cj13)*(x1773))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1767)*(x1772)))+(((sj13)*(x1773)))+(((IkReal(-1.00000000000000))*(x1781)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x1769)*(x1778))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1770)*(x1780)))+(((r12)*(x1775)))+(x1781)+(((cj11)*(x1767)))+(((sj13)*(x1774)))+(((cj13)*(x1782)))+(((cj13)*(sj9)*(x1776)))+(((IkReal(-1.00000000000000))*(x1771)*(x1780))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1783)))+(x1779)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1777)))+(((x1775)*(x1776)))+(((IkReal(-1.00000000000000))*(x1774)*(x1777)))+(((sj13)*(x1782)))+(((IkReal(-1.00000000000000))*(sj14)*(x1769)*(x1771)))+(((IkReal(-1.00000000000000))*(sj14)*(x1769)*(x1770))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1784=((IkReal(1.00000000000000))*(sj11));
IkReal x1785=((cj11)*(r22));
IkReal x1786=((IkReal(1.00000000000000))*(sj13));
IkReal x1787=((sj11)*(sj13));
IkReal x1788=((r21)*(sj14));
IkReal x1789=((cj14)*(r20));
IkReal x1790=((cj13)*(sj11));
IkReal x1791=((cj13)*(x1788));
if( IKabs(((gconst14)*(((((cj13)*(x1785)))+(((x1789)*(x1790)))+(((r22)*(x1787)))+(((IkReal(-1.00000000000000))*(x1784)*(x1791)))+(((cj11)*(sj13)*(x1788)))+(((IkReal(-1.00000000000000))*(cj11)*(x1786)*(x1789))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(sj13)*(x1784)*(x1789)))+(((x1787)*(x1788)))+(((IkReal(-1.00000000000000))*(x1785)*(x1786)))+(((r22)*(x1790)))+(((cj11)*(x1791)))+(((IkReal(-1.00000000000000))*(cj11)*(cj13)*(x1789))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst14)*(((((cj13)*(x1785)))+(((x1789)*(x1790)))+(((r22)*(x1787)))+(((IkReal(-1.00000000000000))*(x1784)*(x1791)))+(((cj11)*(sj13)*(x1788)))+(((IkReal(-1.00000000000000))*(cj11)*(x1786)*(x1789)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(sj13)*(x1784)*(x1789)))+(((x1787)*(x1788)))+(((IkReal(-1.00000000000000))*(x1785)*(x1786)))+(((r22)*(x1790)))+(((cj11)*(x1791)))+(((IkReal(-1.00000000000000))*(cj11)*(cj13)*(x1789)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1792=IKsin(j10);
IkReal x1793=IKcos(j10);
IkReal x1794=((IkReal(1.00000000000000))*(sj13));
IkReal x1795=((r11)*(sj9));
IkReal x1796=((cj9)*(r01));
IkReal x1797=((IkReal(1.00000000000000))*(cj11));
IkReal x1798=((r21)*(sj14));
IkReal x1799=((cj9)*(r02));
IkReal x1800=((sj13)*(sj9));
IkReal x1801=((cj14)*(r10));
IkReal x1802=((IkReal(1.00000000000000))*(cj13));
IkReal x1803=((cj14)*(r20));
IkReal x1804=((sj11)*(x1792));
IkReal x1805=((sj14)*(x1802));
IkReal x1806=((sj11)*(x1793));
IkReal x1807=((cj14)*(cj9)*(r00));
IkReal x1808=((x1793)*(x1797));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1794)))+(((cj13)*(x1798)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(x1808)))+(x1804));
evalcond[1]=((((sj13)*(x1798)))+(((IkReal(-1.00000000000000))*(x1792)*(x1797)))+(((IkReal(-1.00000000000000))*(x1794)*(x1803)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x1806))));
evalcond[2]=((((sj13)*(x1799)))+(((IkReal(-1.00000000000000))*(x1795)*(x1805)))+(((IkReal(-1.00000000000000))*(x1796)*(x1805)))+(((cj13)*(x1807)))+(((r12)*(x1800)))+(x1806)+(((cj11)*(x1792)))+(((cj13)*(sj9)*(x1801))));
evalcond[3]=((((x1800)*(x1801)))+(((IkReal(-1.00000000000000))*(x1799)*(x1802)))+(((IkReal(-1.00000000000000))*(x1808)))+(x1804)+(((IkReal(-1.00000000000000))*(sj14)*(x1794)*(x1795)))+(((IkReal(-1.00000000000000))*(sj14)*(x1794)*(x1796)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1802)))+(((sj13)*(x1807))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1809=((r21)*(sj14));
IkReal x1810=((cj12)*(cj13));
IkReal x1811=((sj11)*(sj13));
IkReal x1812=((cj14)*(r20));
IkReal x1813=((IkReal(1.00000000000000))*(sj11));
IkReal x1814=((cj12)*(r22));
IkReal x1815=((IkReal(1.00000000000000))*(cj11));
IkReal x1816=((cj13)*(r22));
IkReal x1817=((sj13)*(x1815));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1809)*(x1817)))+(((sj11)*(x1810)*(x1812)))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)*(x1813)))+(((cj11)*(sj13)*(x1812)))+(((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((x1811)*(x1814))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1810)*(x1812)*(x1815)))+(((IkReal(-1.00000000000000))*(x1813)*(x1816)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(x1814)*(x1817)))+(((x1811)*(x1812)))+(((cj11)*(x1809)*(x1810))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1809)*(x1817)))+(((sj11)*(x1810)*(x1812)))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)*(x1813)))+(((cj11)*(sj13)*(x1812)))+(((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((x1811)*(x1814)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x1810)*(x1812)*(x1815)))+(((IkReal(-1.00000000000000))*(x1813)*(x1816)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(x1814)*(x1817)))+(((x1811)*(x1812)))+(((cj11)*(x1809)*(x1810)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1818=IKsin(j10);
IkReal x1819=IKcos(j10);
IkReal x1820=((IkReal(1.00000000000000))*(cj13));
IkReal x1821=((cj9)*(r02));
IkReal x1822=((IkReal(1.00000000000000))*(sj13));
IkReal x1823=((r11)*(sj9));
IkReal x1824=((IkReal(1.00000000000000))*(cj14));
IkReal x1825=((cj9)*(r01));
IkReal x1826=((r21)*(sj14));
IkReal x1827=((IkReal(1.00000000000000))*(sj12));
IkReal x1828=((r10)*(sj9));
IkReal x1829=((cj14)*(sj13));
IkReal x1830=((cj14)*(r20));
IkReal x1831=((IkReal(1.00000000000000))*(sj14));
IkReal x1832=((r12)*(sj9));
IkReal x1833=((cj13)*(cj14));
IkReal x1834=((cj9)*(r00));
IkReal x1835=((sj11)*(x1818));
IkReal x1836=((cj11)*(x1818));
IkReal x1837=((sj11)*(x1819));
IkReal x1838=((cj11)*(x1819));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1827)*(x1836)))+(((IkReal(-1.00000000000000))*(x1827)*(x1837))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1838)))+(((cj13)*(x1826)))+(((IkReal(-1.00000000000000))*(r22)*(x1822)))+(x1835)+(((IkReal(-1.00000000000000))*(x1820)*(x1830))));
evalcond[2]=((((sj13)*(x1826)))+(((cj12)*(x1836)))+(((cj12)*(x1837)))+(((IkReal(-1.00000000000000))*(x1822)*(x1830)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1828)*(x1831)))+(((IkReal(-1.00000000000000))*(x1827)*(x1838)))+(((IkReal(-1.00000000000000))*(x1823)*(x1824)))+(((IkReal(-1.00000000000000))*(x1831)*(x1834)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825)))+(((sj12)*(x1835))));
evalcond[4]=((((sj13)*(x1821)))+(x1836)+(x1837)+(((IkReal(-1.00000000000000))*(sj14)*(x1820)*(x1823)))+(((IkReal(-1.00000000000000))*(sj14)*(x1820)*(x1825)))+(((x1833)*(x1834)))+(((x1828)*(x1833)))+(((sj13)*(x1832))));
evalcond[5]=((((x1829)*(x1834)))+(((IkReal(-1.00000000000000))*(sj14)*(x1822)*(x1825)))+(((IkReal(-1.00000000000000))*(sj14)*(x1822)*(x1823)))+(((cj12)*(x1838)))+(((IkReal(-1.00000000000000))*(cj12)*(x1835)))+(((x1828)*(x1829)))+(((IkReal(-1.00000000000000))*(x1820)*(x1832)))+(((IkReal(-1.00000000000000))*(x1820)*(x1821))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1839=((cj11)*(sj12));
IkReal x1840=((r22)*(sj13));
IkReal x1841=((r20)*(sj14));
IkReal x1842=((cj14)*(sj11));
IkReal x1843=((cj13)*(r20));
IkReal x1844=((sj11)*(sj12));
IkReal x1845=((cj13)*(r21)*(sj14));
if( IKabs(((gconst6)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x1842)*(x1843)))+(((x1840)*(x1844)))+(((IkReal(-1.00000000000000))*(x1844)*(x1845)))+(((cj11)*(x1841))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((sj11)*(x1841)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((x1839)*(x1845)))+(((r21)*(x1842)))+(((IkReal(-1.00000000000000))*(cj14)*(x1839)*(x1843))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x1842)*(x1843)))+(((x1840)*(x1844)))+(((IkReal(-1.00000000000000))*(x1844)*(x1845)))+(((cj11)*(x1841)))))), ((gconst6)*(((((sj11)*(x1841)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((x1839)*(x1845)))+(((r21)*(x1842)))+(((IkReal(-1.00000000000000))*(cj14)*(x1839)*(x1843)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1846=IKsin(j10);
IkReal x1847=IKcos(j10);
IkReal x1848=((IkReal(1.00000000000000))*(cj13));
IkReal x1849=((cj9)*(r02));
IkReal x1850=((IkReal(1.00000000000000))*(sj13));
IkReal x1851=((r11)*(sj9));
IkReal x1852=((IkReal(1.00000000000000))*(cj14));
IkReal x1853=((cj9)*(r01));
IkReal x1854=((r21)*(sj14));
IkReal x1855=((IkReal(1.00000000000000))*(sj12));
IkReal x1856=((r10)*(sj9));
IkReal x1857=((cj14)*(sj13));
IkReal x1858=((cj14)*(r20));
IkReal x1859=((IkReal(1.00000000000000))*(sj14));
IkReal x1860=((r12)*(sj9));
IkReal x1861=((cj13)*(cj14));
IkReal x1862=((cj9)*(r00));
IkReal x1863=((sj11)*(x1846));
IkReal x1864=((cj11)*(x1846));
IkReal x1865=((sj11)*(x1847));
IkReal x1866=((cj11)*(x1847));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1855)*(x1864)))+(((IkReal(-1.00000000000000))*(x1855)*(x1865)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1848)*(x1858)))+(((cj13)*(x1854)))+(((IkReal(-1.00000000000000))*(r22)*(x1850)))+(x1863)+(((IkReal(-1.00000000000000))*(x1866))));
evalcond[2]=((((sj13)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1858)))+(((cj13)*(r22)))+(((cj12)*(x1864)))+(((cj12)*(x1865))));
evalcond[3]=((((sj12)*(x1863)))+(((IkReal(-1.00000000000000))*(x1855)*(x1866)))+(((IkReal(-1.00000000000000))*(x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(x1851)*(x1852)))+(((IkReal(-1.00000000000000))*(x1856)*(x1859)))+(((IkReal(-1.00000000000000))*(x1859)*(x1862))));
evalcond[4]=((((sj13)*(x1860)))+(((IkReal(-1.00000000000000))*(sj14)*(x1848)*(x1853)))+(((IkReal(-1.00000000000000))*(sj14)*(x1848)*(x1851)))+(((x1856)*(x1861)))+(x1865)+(x1864)+(((sj13)*(x1849)))+(((x1861)*(x1862))));
evalcond[5]=((((x1856)*(x1857)))+(((IkReal(-1.00000000000000))*(x1848)*(x1860)))+(((IkReal(-1.00000000000000))*(sj14)*(x1850)*(x1851)))+(((IkReal(-1.00000000000000))*(sj14)*(x1850)*(x1853)))+(((IkReal(-1.00000000000000))*(x1848)*(x1849)))+(((x1857)*(x1862)))+(((IkReal(-1.00000000000000))*(cj12)*(x1863)))+(((cj12)*(x1866))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1867=((sj11)*(sj13));
IkReal x1868=((cj14)*(r20));
IkReal x1869=((IkReal(1.00000000000000))*(sj11));
IkReal x1870=((cj12)*(r22));
IkReal x1871=((r21)*(sj14));
IkReal x1872=((cj12)*(cj13));
IkReal x1873=((IkReal(1.00000000000000))*(cj11));
IkReal x1874=((cj13)*(r22));
IkReal x1875=((sj13)*(x1873));
IkReal x1876=((x1871)*(x1872));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1873)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1876)))+(((IkReal(-1.00000000000000))*(x1871)*(x1875)))+(((cj11)*(sj13)*(x1868)))+(((sj11)*(x1868)*(x1872)))+(((x1867)*(x1870))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x1867)*(x1868)))+(((IkReal(-1.00000000000000))*(x1869)*(x1874)))+(((IkReal(-1.00000000000000))*(x1870)*(x1875)))+(((cj11)*(x1876)))+(((IkReal(-1.00000000000000))*(x1867)*(x1871)))+(((IkReal(-1.00000000000000))*(x1868)*(x1872)*(x1873))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(x1873)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1876)))+(((IkReal(-1.00000000000000))*(x1871)*(x1875)))+(((cj11)*(sj13)*(x1868)))+(((sj11)*(x1868)*(x1872)))+(((x1867)*(x1870)))))), ((gconst5)*(((((x1867)*(x1868)))+(((IkReal(-1.00000000000000))*(x1869)*(x1874)))+(((IkReal(-1.00000000000000))*(x1870)*(x1875)))+(((cj11)*(x1876)))+(((IkReal(-1.00000000000000))*(x1867)*(x1871)))+(((IkReal(-1.00000000000000))*(x1868)*(x1872)*(x1873)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1877=IKsin(j10);
IkReal x1878=IKcos(j10);
IkReal x1879=((IkReal(1.00000000000000))*(sj13));
IkReal x1880=((cj14)*(r20));
IkReal x1881=((r21)*(sj14));
IkReal x1882=((IkReal(1.00000000000000))*(x1878));
IkReal x1883=((cj11)*(x1877));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj12)*(x1883)))+(((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1882))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj13)*(x1880)))+(((sj11)*(x1877)))+(((IkReal(-1.00000000000000))*(r22)*(x1879)))+(((cj13)*(x1881)))+(((IkReal(-1.00000000000000))*(cj11)*(x1882))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1879)*(x1880)))+(((cj12)*(x1883)))+(((sj13)*(x1881)))+(((cj12)*(sj11)*(x1878)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1884=(cj14)*(cj14);
IkReal x1885=(sj14)*(sj14);
IkReal x1886=((IkReal(1.00000000000000))*(r01));
IkReal x1887=((sj13)*(sj14));
IkReal x1888=((cj14)*(sj13));
IkReal x1889=((r00)*(r11));
IkReal x1890=((cj13)*(x1884));
IkReal x1891=((cj13)*(x1885));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r12)*(x1887)))+(((r02)*(r10)*(x1887)))+(((x1889)*(x1891)))+(((x1889)*(x1890)))+(((r02)*(r11)*(x1888)))+(((IkReal(-1.00000000000000))*(r12)*(x1886)*(x1888)))+(((IkReal(-1.00000000000000))*(r10)*(x1886)*(x1890)))+(((IkReal(-1.00000000000000))*(r10)*(x1886)*(x1891)))));
IkReal x1892=(cj14)*(cj14);
IkReal x1893=(sj14)*(sj14);
IkReal x1894=((IkReal(1.00000000000000))*(r01));
IkReal x1895=((sj13)*(sj14));
IkReal x1896=((cj14)*(sj13));
IkReal x1897=((r00)*(r11));
IkReal x1898=((cj13)*(x1892));
IkReal x1899=((cj13)*(x1893));
dummyeval[0]=((((x1897)*(x1899)))+(((x1897)*(x1898)))+(((IkReal(-1.00000000000000))*(r10)*(x1894)*(x1899)))+(((IkReal(-1.00000000000000))*(r10)*(x1894)*(x1898)))+(((IkReal(-1.00000000000000))*(r12)*(x1894)*(x1896)))+(((r02)*(r11)*(x1896)))+(((r02)*(r10)*(x1895)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1895))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1900=(sj14)*(sj14);
IkReal x1901=(cj14)*(cj14);
IkReal x1902=((cj13)*(r12));
IkReal x1903=((IkReal(1.00000000000000))*(r10));
IkReal x1904=((cj13)*(r02));
IkReal x1905=((r01)*(sj13));
IkReal x1906=((r00)*(r11)*(sj13));
gconst17=IKsign(((((x1901)*(x1906)))+(((IkReal(-1.00000000000000))*(sj14)*(x1903)*(x1904)))+(((IkReal(-1.00000000000000))*(x1901)*(x1903)*(x1905)))+(((r00)*(sj14)*(x1902)))+(((IkReal(-1.00000000000000))*(x1900)*(x1903)*(x1905)))+(((x1900)*(x1906)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1904)))+(((cj14)*(r01)*(x1902)))));
IkReal x1907=(sj14)*(sj14);
IkReal x1908=(cj14)*(cj14);
IkReal x1909=((cj13)*(r12));
IkReal x1910=((IkReal(1.00000000000000))*(r10));
IkReal x1911=((cj13)*(r02));
IkReal x1912=((r01)*(sj13));
IkReal x1913=((r00)*(r11)*(sj13));
dummyeval[0]=((((x1907)*(x1913)))+(((IkReal(-1.00000000000000))*(x1907)*(x1910)*(x1912)))+(((r00)*(sj14)*(x1909)))+(((IkReal(-1.00000000000000))*(x1908)*(x1910)*(x1912)))+(((x1908)*(x1913)))+(((IkReal(-1.00000000000000))*(sj14)*(x1910)*(x1911)))+(((cj14)*(r01)*(x1909)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1911))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1914=((sj12)*(sj14));
IkReal x1915=((cj14)*(sj12));
IkReal x1916=((cj12)*(cj14)*(sj13));
IkReal x1917=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x1918=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((r10)*(x1914)))+(((r10)*(x1916)))+(((IkReal(-1.00000000000000))*(r12)*(x1917)))+(((IkReal(-1.00000000000000))*(r11)*(x1918)))+(((r11)*(x1915))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1918)))+(((IkReal(-1.00000000000000))*(r02)*(x1917)))+(((r00)*(x1916)))+(((r00)*(x1914)))+(((r01)*(x1915))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((r10)*(x1914)))+(((r10)*(x1916)))+(((IkReal(-1.00000000000000))*(r12)*(x1917)))+(((IkReal(-1.00000000000000))*(r11)*(x1918)))+(((r11)*(x1915)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1918)))+(((IkReal(-1.00000000000000))*(r02)*(x1917)))+(((r00)*(x1916)))+(((r00)*(x1914)))+(((r01)*(x1915)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1919=IKsin(j9);
IkReal x1920=IKcos(j9);
IkReal x1921=((cj10)*(cj11));
IkReal x1922=((IkReal(1.00000000000000))*(cj14));
IkReal x1923=((IkReal(1.00000000000000))*(sj14));
IkReal x1924=((cj13)*(cj14));
IkReal x1925=((cj14)*(r10));
IkReal x1926=((r01)*(sj14));
IkReal x1927=((sj10)*(sj11));
IkReal x1928=((IkReal(1.00000000000000))*(r12));
IkReal x1929=((sj13)*(x1920));
IkReal x1930=((r02)*(x1919));
IkReal x1931=((r11)*(x1919));
IkReal x1932=((r10)*(x1920));
IkReal x1933=((r01)*(x1920));
IkReal x1934=((sj13)*(x1919));
IkReal x1935=((r11)*(x1920));
IkReal x1936=((cj13)*(x1919));
IkReal x1937=((r10)*(x1919));
IkReal x1938=((r00)*(x1920));
IkReal x1939=((cj13)*(x1920));
evalcond[0]=((((r00)*(sj14)*(x1919)))+(((IkReal(-1.00000000000000))*(x1923)*(x1932)))+(cj12)+(((cj14)*(r01)*(x1919)))+(((IkReal(-1.00000000000000))*(x1922)*(x1935))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj12)*(x1921)))+(((IkReal(-1.00000000000000))*(x1923)*(x1938)))+(((IkReal(-1.00000000000000))*(x1923)*(x1937)))+(((IkReal(-1.00000000000000))*(x1922)*(x1931)))+(((IkReal(-1.00000000000000))*(x1922)*(x1933)))+(((sj12)*(x1927))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x1930)))+(((IkReal(-1.00000000000000))*(r00)*(x1922)*(x1936)))+(((x1924)*(x1932)))+(((x1926)*(x1936)))+(((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1935)))+(((r12)*(x1929))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1928)*(x1939)))+(((IkReal(-1.00000000000000))*(r00)*(x1922)*(x1934)))+(((cj13)*(x1930)))+(((IkReal(-1.00000000000000))*(r11)*(x1923)*(x1929)))+(((x1926)*(x1934)))+(sj12)+(((x1925)*(x1929))));
evalcond[4]=((((cj10)*(sj11)))+(((x1924)*(x1938)))+(((x1924)*(x1937)))+(((r12)*(x1934)))+(((r02)*(x1929)))+(((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1933)))+(((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1931)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1928)*(x1936)))+(((IkReal(-1.00000000000000))*(sj13)*(x1923)*(x1931)))+(((IkReal(-1.00000000000000))*(r01)*(x1923)*(x1929)))+(((x1925)*(x1934)))+(((cj12)*(x1921)))+(((IkReal(-1.00000000000000))*(cj12)*(x1927)))+(((cj14)*(r00)*(x1929)))+(((IkReal(-1.00000000000000))*(r02)*(x1939))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1940=((cj12)*(sj13));
IkReal x1941=((cj12)*(cj13));
IkReal x1942=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((r12)*(x1940)))+(((cj14)*(r10)*(x1941)))+(((IkReal(-1.00000000000000))*(r11)*(x1941)*(x1942))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1941)*(x1942)))+(((cj14)*(r00)*(x1941)))+(((r02)*(x1940))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((r12)*(x1940)))+(((cj14)*(r10)*(x1941)))+(((IkReal(-1.00000000000000))*(r11)*(x1941)*(x1942)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1941)*(x1942)))+(((cj14)*(r00)*(x1941)))+(((r02)*(x1940)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1943=IKsin(j9);
IkReal x1944=IKcos(j9);
IkReal x1945=((cj10)*(cj11));
IkReal x1946=((IkReal(1.00000000000000))*(cj14));
IkReal x1947=((IkReal(1.00000000000000))*(sj14));
IkReal x1948=((cj13)*(cj14));
IkReal x1949=((cj14)*(r10));
IkReal x1950=((r01)*(sj14));
IkReal x1951=((sj10)*(sj11));
IkReal x1952=((IkReal(1.00000000000000))*(r12));
IkReal x1953=((sj13)*(x1944));
IkReal x1954=((r02)*(x1943));
IkReal x1955=((r11)*(x1943));
IkReal x1956=((r10)*(x1944));
IkReal x1957=((r01)*(x1944));
IkReal x1958=((sj13)*(x1943));
IkReal x1959=((r11)*(x1944));
IkReal x1960=((cj13)*(x1943));
IkReal x1961=((r10)*(x1943));
IkReal x1962=((r00)*(x1944));
IkReal x1963=((cj13)*(x1944));
evalcond[0]=((((cj14)*(r01)*(x1943)))+(((IkReal(-1.00000000000000))*(x1947)*(x1956)))+(cj12)+(((IkReal(-1.00000000000000))*(x1946)*(x1959)))+(((r00)*(sj14)*(x1943))));
evalcond[1]=((((sj12)*(x1951)))+(((IkReal(-1.00000000000000))*(x1947)*(x1962)))+(((IkReal(-1.00000000000000))*(x1947)*(x1961)))+(((IkReal(-1.00000000000000))*(x1946)*(x1957)))+(((IkReal(-1.00000000000000))*(x1946)*(x1955)))+(((IkReal(-1.00000000000000))*(sj12)*(x1945))));
evalcond[2]=((((r12)*(x1953)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1959)))+(((x1950)*(x1960)))+(((x1948)*(x1956)))+(((IkReal(-1.00000000000000))*(sj13)*(x1954)))+(((IkReal(-1.00000000000000))*(r00)*(x1946)*(x1960))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1952)*(x1963)))+(((IkReal(-1.00000000000000))*(r11)*(x1947)*(x1953)))+(((IkReal(-1.00000000000000))*(r00)*(x1946)*(x1958)))+(((cj13)*(x1954)))+(((x1950)*(x1958)))+(sj12)+(((x1949)*(x1953))));
evalcond[4]=((((r12)*(x1958)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1955)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1957)))+(((cj10)*(sj11)))+(((r02)*(x1953)))+(((cj11)*(sj10)))+(((x1948)*(x1961)))+(((x1948)*(x1962))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1952)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1947)*(x1953)))+(((cj12)*(x1945)))+(((IkReal(-1.00000000000000))*(sj13)*(x1947)*(x1955)))+(((IkReal(-1.00000000000000))*(cj12)*(x1951)))+(((cj14)*(r00)*(x1953)))+(((IkReal(-1.00000000000000))*(r02)*(x1963)))+(((x1949)*(x1958))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1964=((cj11)*(sj12));
IkReal x1965=((r22)*(sj13));
IkReal x1966=((r20)*(sj14));
IkReal x1967=((cj14)*(sj11));
IkReal x1968=((cj13)*(r20));
IkReal x1969=((sj11)*(sj12));
IkReal x1970=((cj13)*(r21)*(sj14));
if( IKabs(((gconst4)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x1967)*(x1968)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970)))+(((cj11)*(x1966)))+(((x1965)*(x1969))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1964)*(x1970)))+(((IkReal(-1.00000000000000))*(x1964)*(x1965)))+(((r21)*(x1967)))+(((sj11)*(x1966)))+(((IkReal(-1.00000000000000))*(cj14)*(x1964)*(x1968))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x1967)*(x1968)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970)))+(((cj11)*(x1966)))+(((x1965)*(x1969)))))), ((gconst4)*(((((x1964)*(x1970)))+(((IkReal(-1.00000000000000))*(x1964)*(x1965)))+(((r21)*(x1967)))+(((sj11)*(x1966)))+(((IkReal(-1.00000000000000))*(cj14)*(x1964)*(x1968)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1971=IKsin(j10);
IkReal x1972=IKcos(j10);
IkReal x1973=((IkReal(1.00000000000000))*(sj13));
IkReal x1974=((cj14)*(r20));
IkReal x1975=((r21)*(sj14));
IkReal x1976=((IkReal(1.00000000000000))*(x1972));
IkReal x1977=((cj11)*(x1971));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1976)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj12)*(x1977))));
evalcond[1]=((((cj13)*(x1975)))+(((IkReal(-1.00000000000000))*(cj11)*(x1976)))+(((IkReal(-1.00000000000000))*(r22)*(x1973)))+(((IkReal(-1.00000000000000))*(cj13)*(x1974)))+(((sj11)*(x1971))));
evalcond[2]=((((cj12)*(sj11)*(x1972)))+(((cj12)*(x1977)))+(((IkReal(-1.00000000000000))*(x1973)*(x1974)))+(((sj13)*(x1975)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1978=(cj14)*(cj14);
IkReal x1979=(sj14)*(sj14);
IkReal x1980=((IkReal(1.00000000000000))*(r01));
IkReal x1981=((sj13)*(sj14));
IkReal x1982=((cj14)*(sj13));
IkReal x1983=((r00)*(r11));
IkReal x1984=((cj13)*(x1978));
IkReal x1985=((cj13)*(x1979));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r12)*(x1981)))+(((IkReal(-1.00000000000000))*(r10)*(x1980)*(x1985)))+(((IkReal(-1.00000000000000))*(r10)*(x1980)*(x1984)))+(((r02)*(r11)*(x1982)))+(((x1983)*(x1984)))+(((x1983)*(x1985)))+(((IkReal(-1.00000000000000))*(r12)*(x1980)*(x1982)))+(((r02)*(r10)*(x1981)))));
IkReal x1986=(cj14)*(cj14);
IkReal x1987=(sj14)*(sj14);
IkReal x1988=((IkReal(1.00000000000000))*(r01));
IkReal x1989=((sj13)*(sj14));
IkReal x1990=((cj14)*(sj13));
IkReal x1991=((r00)*(r11));
IkReal x1992=((cj13)*(x1986));
IkReal x1993=((cj13)*(x1987));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r12)*(x1989)))+(((x1991)*(x1993)))+(((x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(r12)*(x1988)*(x1990)))+(((IkReal(-1.00000000000000))*(r10)*(x1988)*(x1992)))+(((IkReal(-1.00000000000000))*(r10)*(x1988)*(x1993)))+(((r02)*(r11)*(x1990)))+(((r02)*(r10)*(x1989))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1994=(sj14)*(sj14);
IkReal x1995=(cj14)*(cj14);
IkReal x1996=((cj13)*(r12));
IkReal x1997=((IkReal(1.00000000000000))*(r10));
IkReal x1998=((cj13)*(r02));
IkReal x1999=((r01)*(sj13));
IkReal x2000=((r00)*(r11)*(sj13));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1998)))+(((cj14)*(r01)*(x1996)))+(((IkReal(-1.00000000000000))*(x1995)*(x1997)*(x1999)))+(((x1994)*(x2000)))+(((x1995)*(x2000)))+(((IkReal(-1.00000000000000))*(sj14)*(x1997)*(x1998)))+(((r00)*(sj14)*(x1996)))+(((IkReal(-1.00000000000000))*(x1994)*(x1997)*(x1999)))));
IkReal x2001=(sj14)*(sj14);
IkReal x2002=(cj14)*(cj14);
IkReal x2003=((cj13)*(r12));
IkReal x2004=((IkReal(1.00000000000000))*(r10));
IkReal x2005=((cj13)*(r02));
IkReal x2006=((r01)*(sj13));
IkReal x2007=((r00)*(r11)*(sj13));
dummyeval[0]=((((x2002)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)*(x2006)))+(((cj14)*(r01)*(x2003)))+(((IkReal(-1.00000000000000))*(x2001)*(x2004)*(x2006)))+(((IkReal(-1.00000000000000))*(sj14)*(x2004)*(x2005)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2005)))+(((r00)*(sj14)*(x2003)))+(((x2001)*(x2007))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2008=((sj12)*(sj14));
IkReal x2009=((cj14)*(sj12));
IkReal x2010=((cj12)*(cj14)*(sj13));
IkReal x2011=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2012=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((r11)*(x2009)))+(((r10)*(x2008)))+(((r10)*(x2010)))+(((IkReal(-1.00000000000000))*(r12)*(x2011)))+(((IkReal(-1.00000000000000))*(r11)*(x2012))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((r01)*(x2009)))+(((r00)*(x2008)))+(((r00)*(x2010)))+(((IkReal(-1.00000000000000))*(r02)*(x2011)))+(((IkReal(-1.00000000000000))*(r01)*(x2012))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((r11)*(x2009)))+(((r10)*(x2008)))+(((r10)*(x2010)))+(((IkReal(-1.00000000000000))*(r12)*(x2011)))+(((IkReal(-1.00000000000000))*(r11)*(x2012)))))), ((gconst17)*(((((r01)*(x2009)))+(((r00)*(x2008)))+(((r00)*(x2010)))+(((IkReal(-1.00000000000000))*(r02)*(x2011)))+(((IkReal(-1.00000000000000))*(r01)*(x2012)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2013=IKsin(j9);
IkReal x2014=IKcos(j9);
IkReal x2015=((cj10)*(cj11));
IkReal x2016=((IkReal(1.00000000000000))*(cj14));
IkReal x2017=((IkReal(1.00000000000000))*(sj14));
IkReal x2018=((cj13)*(cj14));
IkReal x2019=((cj14)*(r10));
IkReal x2020=((r01)*(sj14));
IkReal x2021=((sj10)*(sj11));
IkReal x2022=((IkReal(1.00000000000000))*(r12));
IkReal x2023=((sj13)*(x2014));
IkReal x2024=((r02)*(x2013));
IkReal x2025=((r11)*(x2013));
IkReal x2026=((r10)*(x2014));
IkReal x2027=((r01)*(x2014));
IkReal x2028=((sj13)*(x2013));
IkReal x2029=((r11)*(x2014));
IkReal x2030=((cj13)*(x2013));
IkReal x2031=((r10)*(x2013));
IkReal x2032=((r00)*(x2014));
IkReal x2033=((cj13)*(x2014));
evalcond[0]=((((r00)*(sj14)*(x2013)))+(((IkReal(-1.00000000000000))*(x2016)*(x2029)))+(((IkReal(-1.00000000000000))*(x2017)*(x2026)))+(cj12)+(((cj14)*(r01)*(x2013))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2016)*(x2025)))+(((IkReal(-1.00000000000000))*(x2016)*(x2027)))+(((sj12)*(x2021)))+(((IkReal(-1.00000000000000))*(sj12)*(x2015)))+(((IkReal(-1.00000000000000))*(x2017)*(x2032)))+(((IkReal(-1.00000000000000))*(x2017)*(x2031))));
evalcond[2]=((((x2018)*(x2026)))+(((IkReal(-1.00000000000000))*(r00)*(x2016)*(x2030)))+(((IkReal(-1.00000000000000))*(sj13)*(x2024)))+(((x2020)*(x2030)))+(((r12)*(x2023)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2029))));
evalcond[3]=((((x2020)*(x2028)))+(((IkReal(-1.00000000000000))*(r11)*(x2017)*(x2023)))+(((cj13)*(x2024)))+(((x2019)*(x2023)))+(((IkReal(-1.00000000000000))*(x2022)*(x2033)))+(sj12)+(((IkReal(-1.00000000000000))*(r00)*(x2016)*(x2028))));
evalcond[4]=((((x2018)*(x2031)))+(((x2018)*(x2032)))+(((cj10)*(sj11)))+(((r02)*(x2023)))+(((cj11)*(sj10)))+(((r12)*(x2028)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2025)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2027))));
evalcond[5]=((((x2019)*(x2028)))+(((IkReal(-1.00000000000000))*(cj12)*(x2021)))+(((IkReal(-1.00000000000000))*(x2022)*(x2030)))+(((IkReal(-1.00000000000000))*(sj13)*(x2017)*(x2025)))+(((IkReal(-1.00000000000000))*(r01)*(x2017)*(x2023)))+(((cj14)*(r00)*(x2023)))+(((cj12)*(x2015)))+(((IkReal(-1.00000000000000))*(r02)*(x2033))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2034=((cj12)*(sj13));
IkReal x2035=((cj12)*(cj13));
IkReal x2036=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x2035)*(x2036)))+(((r12)*(x2034)))+(((cj14)*(r10)*(x2035))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x2035)*(x2036)))+(((r02)*(x2034)))+(((cj14)*(r00)*(x2035))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x2035)*(x2036)))+(((r12)*(x2034)))+(((cj14)*(r10)*(x2035)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x2035)*(x2036)))+(((r02)*(x2034)))+(((cj14)*(r00)*(x2035)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2037=IKsin(j9);
IkReal x2038=IKcos(j9);
IkReal x2039=((cj10)*(cj11));
IkReal x2040=((IkReal(1.00000000000000))*(cj14));
IkReal x2041=((IkReal(1.00000000000000))*(sj14));
IkReal x2042=((cj13)*(cj14));
IkReal x2043=((cj14)*(r10));
IkReal x2044=((r01)*(sj14));
IkReal x2045=((sj10)*(sj11));
IkReal x2046=((IkReal(1.00000000000000))*(r12));
IkReal x2047=((sj13)*(x2038));
IkReal x2048=((r02)*(x2037));
IkReal x2049=((r11)*(x2037));
IkReal x2050=((r10)*(x2038));
IkReal x2051=((r01)*(x2038));
IkReal x2052=((sj13)*(x2037));
IkReal x2053=((r11)*(x2038));
IkReal x2054=((cj13)*(x2037));
IkReal x2055=((r10)*(x2037));
IkReal x2056=((r00)*(x2038));
IkReal x2057=((cj13)*(x2038));
evalcond[0]=((((cj14)*(r01)*(x2037)))+(cj12)+(((IkReal(-1.00000000000000))*(x2040)*(x2053)))+(((IkReal(-1.00000000000000))*(x2041)*(x2050)))+(((r00)*(sj14)*(x2037))));
evalcond[1]=((((sj12)*(x2045)))+(((IkReal(-1.00000000000000))*(sj12)*(x2039)))+(((IkReal(-1.00000000000000))*(x2040)*(x2049)))+(((IkReal(-1.00000000000000))*(x2040)*(x2051)))+(((IkReal(-1.00000000000000))*(x2041)*(x2055)))+(((IkReal(-1.00000000000000))*(x2041)*(x2056))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x2048)))+(((x2042)*(x2050)))+(((r12)*(x2047)))+(((IkReal(-1.00000000000000))*(r00)*(x2040)*(x2054)))+(((x2044)*(x2054)))+(((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2053))));
evalcond[3]=((((x2043)*(x2047)))+(((cj13)*(x2048)))+(((IkReal(-1.00000000000000))*(r00)*(x2040)*(x2052)))+(((x2044)*(x2052)))+(((IkReal(-1.00000000000000))*(x2046)*(x2057)))+(sj12)+(((IkReal(-1.00000000000000))*(r11)*(x2041)*(x2047))));
evalcond[4]=((((r12)*(x2052)))+(((x2042)*(x2055)))+(((x2042)*(x2056)))+(((r02)*(x2047)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2051)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2049))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x2041)*(x2047)))+(((IkReal(-1.00000000000000))*(r02)*(x2057)))+(((cj12)*(x2039)))+(((x2043)*(x2052)))+(((IkReal(-1.00000000000000))*(sj13)*(x2041)*(x2049)))+(((IkReal(-1.00000000000000))*(x2046)*(x2054)))+(((cj14)*(r00)*(x2047)))+(((IkReal(-1.00000000000000))*(cj12)*(x2045))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2058=((sj12)*(sj14));
IkReal x2059=((cj14)*(sj12));
IkReal x2060=((cj12)*(cj14)*(sj13));
IkReal x2061=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2062=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst1)*(((((r10)*(x2058)))+(((IkReal(-1.00000000000000))*(r12)*(x2061)))+(((r11)*(x2059)))+(((IkReal(-1.00000000000000))*(r11)*(x2062)))+(((r10)*(x2060))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r01)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(x2061)))+(((r00)*(x2060)))+(((IkReal(-1.00000000000000))*(r01)*(x2062)))+(((r00)*(x2058))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst1)*(((((r10)*(x2058)))+(((IkReal(-1.00000000000000))*(r12)*(x2061)))+(((r11)*(x2059)))+(((IkReal(-1.00000000000000))*(r11)*(x2062)))+(((r10)*(x2060)))))), ((gconst1)*(((((r01)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(x2061)))+(((r00)*(x2060)))+(((IkReal(-1.00000000000000))*(r01)*(x2062)))+(((r00)*(x2058)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2063=IKsin(j9);
IkReal x2064=IKcos(j9);
IkReal x2065=((IkReal(1.00000000000000))*(sj14));
IkReal x2066=((sj13)*(x2064));
IkReal x2067=((cj13)*(x2063));
IkReal x2068=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2069=((r01)*(x2063));
IkReal x2070=((r10)*(x2064));
IkReal x2071=((sj13)*(x2063));
IkReal x2072=((cj13)*(x2064));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2064)))+(((cj14)*(x2069)))+(cj12)+(((r00)*(sj14)*(x2063)))+(((IkReal(-1.00000000000000))*(x2065)*(x2070))));
evalcond[1]=((((cj13)*(cj14)*(x2070)))+(((IkReal(-1.00000000000000))*(r11)*(x2065)*(x2072)))+(((r12)*(x2066)))+(((IkReal(-1.00000000000000))*(r02)*(x2071)))+(((r01)*(sj14)*(x2067)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x2065)*(x2066)))+(((r02)*(x2067)))+(sj12)+(((cj14)*(r10)*(x2066)))+(((IkReal(-1.00000000000000))*(r12)*(x2072)))+(((sj13)*(sj14)*(x2069)))+(((IkReal(-1.00000000000000))*(x2068)*(x2071))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2073=((IkReal(1.00000000000000))*(sj13));
IkReal x2074=((cj14)*(sj9));
IkReal x2075=((cj9)*(sj14));
IkReal x2076=((cj13)*(sj9));
IkReal x2077=((sj13)*(sj14));
IkReal x2078=((cj9)*(sj13));
IkReal x2079=((IkReal(1.00000000000000))*(cj13));
IkReal x2080=((cj14)*(r10));
IkReal x2081=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x2075)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((r01)*(x2074)))+(((r00)*(x2081))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2073)))+(((cj13)*(r22)))+(((r21)*(x2077))));
evalcond[3]=((IkReal(0.0950000000000000))+(((npy)*(x2077)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2073))));
evalcond[4]=((((r12)*(x2078)))+(((IkReal(-1.00000000000000))*(r00)*(x2074)*(x2079)))+(((cj13)*(cj9)*(x2080)))+(((IkReal(-1.00000000000000))*(r11)*(x2075)*(x2079)))+(((r01)*(sj14)*(x2076)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2073))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2078)*(x2080)))+(((r02)*(x2076)))+(((IkReal(-1.00000000000000))*(r00)*(x2073)*(x2074)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2079)))+(((IkReal(-1.00000000000000))*(r11)*(x2073)*(x2075)))+(((r01)*(sj9)*(x2077))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2073)*(x2081)))+(((IkReal(-1.00000000000000))*(r01)*(x2073)*(x2075)))+(((cj14)*(r00)*(x2078)))+(((r10)*(sj13)*(x2074)))+(((IkReal(-1.00000000000000))*(r12)*(x2076)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2079))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2082=((IkReal(4.00000000000000))*(sj14));
IkReal x2083=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2083)))+(((IkReal(-1.00000000000000))*(npx)*(x2082))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082)))+(((cj13)*(npx)*(x2083)))+(((IkReal(-0.360000000000000))*(cj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2083)))+(((IkReal(-1.00000000000000))*(npx)*(x2082)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082)))+(((cj13)*(npx)*(x2083)))+(((IkReal(-0.360000000000000))*(cj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2083)))+(((IkReal(-1.00000000000000))*(npx)*(x2082)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082)))+(((cj13)*(npx)*(x2083)))+(((IkReal(-0.360000000000000))*(cj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((cj13)*(npy)*(sj14)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2084=((IkReal(1.00000000000000))*(cj11));
IkReal x2085=((r20)*(sj14));
IkReal x2086=((cj14)*(r21));
IkReal x2087=((cj14)*(cj9)*(r01));
IkReal x2088=((r10)*(sj14)*(sj9));
IkReal x2089=((cj9)*(r00)*(sj14));
IkReal x2090=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((cj11)*(x2086)))+(((cj11)*(x2085)))+(((sj11)*(x2087)))+(((sj11)*(x2089)))+(((sj11)*(x2088)))+(((sj11)*(x2090))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2084)*(x2087)))+(((IkReal(-1.00000000000000))*(x2084)*(x2088)))+(((IkReal(-1.00000000000000))*(x2084)*(x2089)))+(((sj11)*(x2086)))+(((sj11)*(x2085)))+(((IkReal(-1.00000000000000))*(x2084)*(x2090))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((cj11)*(x2086)))+(((cj11)*(x2085)))+(((sj11)*(x2087)))+(((sj11)*(x2089)))+(((sj11)*(x2088)))+(((sj11)*(x2090)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2084)*(x2087)))+(((IkReal(-1.00000000000000))*(x2084)*(x2088)))+(((IkReal(-1.00000000000000))*(x2084)*(x2089)))+(((sj11)*(x2086)))+(((sj11)*(x2085)))+(((IkReal(-1.00000000000000))*(x2084)*(x2090)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2091=IKsin(j10);
IkReal x2092=IKcos(j10);
IkReal x2093=((cj13)*(sj14));
IkReal x2094=((cj13)*(cj14));
IkReal x2095=((r10)*(sj9));
IkReal x2096=((IkReal(1.00000000000000))*(cj9));
IkReal x2097=((sj11)*(x2091));
IkReal x2098=((IkReal(1.00000000000000))*(x2092));
IkReal x2099=((cj11)*(x2091));
IkReal x2100=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2101=((cj11)*(x2098));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x2098)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2099))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2094)))+(((IkReal(-1.00000000000000))*(x2101)))+(x2097)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2093))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x2100)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2096)))+(((IkReal(-1.00000000000000))*(x2101)))+(x2097)+(((IkReal(-1.00000000000000))*(sj14)*(x2095)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2096))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2093)*(x2100)))+(((x2094)*(x2095)))+(x2099)+(((cj9)*(r02)*(sj13)))+(((sj11)*(x2092)))+(((IkReal(-1.00000000000000))*(r01)*(x2093)*(x2096)))+(((cj9)*(r00)*(x2094)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2102=((r20)*(sj14));
IkReal x2103=((IkReal(1.00000000000000))*(cj13));
IkReal x2104=((cj14)*(r20));
IkReal x2105=((r21)*(sj14));
IkReal x2106=((r22)*(sj13));
IkReal x2107=((cj14)*(r21));
if( IKabs(((gconst56)*(((((cj13)*(sj11)*(x2104)))+(((IkReal(-1.00000000000000))*(sj11)*(x2103)*(x2105)))+(((cj11)*(x2102)))+(((cj11)*(x2107)))+(((sj11)*(x2106))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2106)))+(((cj11)*(cj13)*(x2105)))+(((IkReal(-1.00000000000000))*(cj11)*(x2103)*(x2104)))+(((sj11)*(x2102)))+(((sj11)*(x2107))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((cj13)*(sj11)*(x2104)))+(((IkReal(-1.00000000000000))*(sj11)*(x2103)*(x2105)))+(((cj11)*(x2102)))+(((cj11)*(x2107)))+(((sj11)*(x2106)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2106)))+(((cj11)*(cj13)*(x2105)))+(((IkReal(-1.00000000000000))*(cj11)*(x2103)*(x2104)))+(((sj11)*(x2102)))+(((sj11)*(x2107)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2108=IKsin(j10);
IkReal x2109=IKcos(j10);
IkReal x2110=((cj13)*(sj14));
IkReal x2111=((cj13)*(cj14));
IkReal x2112=((r10)*(sj9));
IkReal x2113=((IkReal(1.00000000000000))*(cj9));
IkReal x2114=((sj11)*(x2108));
IkReal x2115=((IkReal(1.00000000000000))*(x2109));
IkReal x2116=((cj11)*(x2108));
IkReal x2117=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2118=((cj11)*(x2115));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2116)))+(((IkReal(-1.00000000000000))*(sj11)*(x2115))));
evalcond[1]=((((r21)*(x2110)))+(x2114)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2118)))+(((IkReal(-1.00000000000000))*(r20)*(x2111))));
evalcond[2]=((x2114)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2113)))+(((IkReal(-1.00000000000000))*(cj14)*(x2117)))+(((IkReal(-1.00000000000000))*(x2118)))+(((IkReal(-1.00000000000000))*(sj14)*(x2112)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2113))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(x2116)+(((x2111)*(x2112)))+(((cj9)*(r00)*(x2111)))+(((IkReal(-1.00000000000000))*(x2110)*(x2117)))+(((IkReal(-1.00000000000000))*(r01)*(x2110)*(x2113)))+(((r12)*(sj13)*(sj9)))+(((sj11)*(x2109))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2119=((IkReal(1.00000000000000))*(sj13));
IkReal x2120=((cj14)*(sj9));
IkReal x2121=((cj9)*(sj14));
IkReal x2122=((cj13)*(sj9));
IkReal x2123=((sj13)*(sj14));
IkReal x2124=((cj9)*(sj13));
IkReal x2125=((IkReal(1.00000000000000))*(cj13));
IkReal x2126=((cj14)*(r10));
IkReal x2127=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((r01)*(x2120)))+(((IkReal(-1.00000000000000))*(r10)*(x2121)))+(((r00)*(x2127))));
evalcond[2]=((((r21)*(x2123)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2119))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((npy)*(x2123)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2119))));
evalcond[4]=((((r12)*(x2124)))+(((r01)*(sj14)*(x2122)))+(((cj13)*(cj9)*(x2126)))+(((IkReal(-1.00000000000000))*(r00)*(x2120)*(x2125)))+(((IkReal(-1.00000000000000))*(r11)*(x2121)*(x2125)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2119))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(sj9)*(x2123)))+(((IkReal(-1.00000000000000))*(r00)*(x2119)*(x2120)))+(((IkReal(-1.00000000000000))*(r11)*(x2119)*(x2121)))+(((r02)*(x2122)))+(((x2124)*(x2126)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2125))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x2119)*(x2121)))+(((IkReal(-1.00000000000000))*(r11)*(x2119)*(x2127)))+(((IkReal(-1.00000000000000))*(r12)*(x2122)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2125)))+(((cj14)*(r00)*(x2124)))+(((r10)*(sj13)*(x2120))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2128=((IkReal(4.00000000000000))*(sj14));
IkReal x2129=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((npx)*(x2128)))+(((npy)*(x2129))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-0.360000000000000))*(cj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npx)*(x2128)))+(((npy)*(x2129)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-0.360000000000000))*(cj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npx)*(x2128)))+(((npy)*(x2129)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-0.360000000000000))*(cj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((cj13)*(npy)*(sj14)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2130=((IkReal(1.00000000000000))*(sj11));
IkReal x2131=((cj14)*(r21));
IkReal x2132=((IkReal(1.00000000000000))*(cj11));
IkReal x2133=((r20)*(sj14));
IkReal x2134=((cj9)*(r00)*(sj14));
IkReal x2135=((cj14)*(r11)*(sj9));
IkReal x2136=((cj14)*(cj9)*(r01));
IkReal x2137=((r10)*(sj14)*(sj9));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2132)*(x2133)))+(((IkReal(-1.00000000000000))*(x2130)*(x2137)))+(((IkReal(-1.00000000000000))*(x2130)*(x2136)))+(((IkReal(-1.00000000000000))*(x2130)*(x2135)))+(((IkReal(-1.00000000000000))*(x2130)*(x2134)))+(((IkReal(-1.00000000000000))*(x2131)*(x2132))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj11)*(x2136)))+(((cj11)*(x2137)))+(((cj11)*(x2134)))+(((cj11)*(x2135)))+(((IkReal(-1.00000000000000))*(x2130)*(x2133)))+(((IkReal(-1.00000000000000))*(x2130)*(x2131))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(x2132)*(x2133)))+(((IkReal(-1.00000000000000))*(x2130)*(x2137)))+(((IkReal(-1.00000000000000))*(x2130)*(x2136)))+(((IkReal(-1.00000000000000))*(x2130)*(x2135)))+(((IkReal(-1.00000000000000))*(x2130)*(x2134)))+(((IkReal(-1.00000000000000))*(x2131)*(x2132)))))), ((gconst59)*(((((cj11)*(x2136)))+(((cj11)*(x2137)))+(((cj11)*(x2134)))+(((cj11)*(x2135)))+(((IkReal(-1.00000000000000))*(x2130)*(x2133)))+(((IkReal(-1.00000000000000))*(x2130)*(x2131)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2138=IKsin(j10);
IkReal x2139=IKcos(j10);
IkReal x2140=((cj14)*(sj9));
IkReal x2141=((IkReal(1.00000000000000))*(r11));
IkReal x2142=((cj13)*(sj14));
IkReal x2143=((IkReal(1.00000000000000))*(cj9));
IkReal x2144=((cj13)*(cj14));
IkReal x2145=((cj11)*(x2138));
IkReal x2146=((sj11)*(x2139));
IkReal x2147=((cj11)*(x2139));
IkReal x2148=((sj11)*(x2138));
IkReal x2149=((x2146)+(x2145));
evalcond[0]=((((cj14)*(r21)))+(x2149)+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2147)))+(((IkReal(-1.00000000000000))*(r20)*(x2144)))+(x2148)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2142))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2148)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2143)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2143)))+(x2147)+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2140)*(x2141))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2142)*(x2143)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x2141)*(x2142)))+(x2149)+(((cj9)*(r00)*(x2144)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r10)*(x2140))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2150=((cj13)*(sj11));
IkReal x2151=((r21)*(sj14));
IkReal x2152=((cj14)*(r20));
IkReal x2153=((cj11)*(cj13));
IkReal x2154=((r22)*(sj13));
IkReal x2155=((r20)*(sj14));
IkReal x2156=((cj14)*(r21));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(sj11)*(x2154)))+(((IkReal(-1.00000000000000))*(x2150)*(x2152)))+(((cj11)*(x2155)))+(((cj11)*(x2156)))+(((x2150)*(x2151))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((x2152)*(x2153)))+(((cj11)*(x2154)))+(((IkReal(-1.00000000000000))*(x2151)*(x2153)))+(((sj11)*(x2156)))+(((sj11)*(x2155))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(sj11)*(x2154)))+(((IkReal(-1.00000000000000))*(x2150)*(x2152)))+(((cj11)*(x2155)))+(((cj11)*(x2156)))+(((x2150)*(x2151)))))), ((gconst58)*(((((x2152)*(x2153)))+(((cj11)*(x2154)))+(((IkReal(-1.00000000000000))*(x2151)*(x2153)))+(((sj11)*(x2156)))+(((sj11)*(x2155)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2157=IKsin(j10);
IkReal x2158=IKcos(j10);
IkReal x2159=((cj14)*(sj9));
IkReal x2160=((IkReal(1.00000000000000))*(r11));
IkReal x2161=((cj13)*(sj14));
IkReal x2162=((IkReal(1.00000000000000))*(cj9));
IkReal x2163=((cj13)*(cj14));
IkReal x2164=((cj11)*(x2157));
IkReal x2165=((sj11)*(x2158));
IkReal x2166=((cj11)*(x2158));
IkReal x2167=((sj11)*(x2157));
IkReal x2168=((x2165)+(x2164));
evalcond[0]=((((cj14)*(r21)))+(x2168)+(((r20)*(sj14))));
evalcond[1]=((x2167)+(((r21)*(x2161)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2166)))+(((IkReal(-1.00000000000000))*(r20)*(x2163))));
evalcond[2]=((x2166)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2162)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2159)*(x2160)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2162)))+(((IkReal(-1.00000000000000))*(x2167))));
evalcond[3]=((((cj13)*(r10)*(x2159)))+(((cj9)*(r02)*(sj13)))+(x2168)+(((cj9)*(r00)*(x2163)))+(((IkReal(-1.00000000000000))*(sj9)*(x2160)*(x2161)))+(((IkReal(-1.00000000000000))*(r01)*(x2161)*(x2162)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2169=((cj13)*(sj9));
IkReal x2170=((r01)*(sj14));
IkReal x2171=((cj9)*(sj13));
IkReal x2172=((sj13)*(sj9));
IkReal x2173=((cj14)*(r01));
IkReal x2174=((cj14)*(r10));
IkReal x2175=((cj13)*(cj9));
IkReal x2176=((IkReal(1.00000000000000))*(cj9));
IkReal x2177=((sj14)*(sj9));
IkReal x2178=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2179=((sj14)*(x2176));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(x2177)))+(((sj9)*(x2173)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2176)))+(((IkReal(-1.00000000000000))*(r10)*(x2179))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x2177)))+(((IkReal(-1.00000000000000))*(x2173)*(x2176)))+(((IkReal(-1.00000000000000))*(r11)*(x2178)))+(((IkReal(-1.00000000000000))*(r00)*(x2179))));
evalcond[5]=((((x2174)*(x2175)))+(((IkReal(-1.00000000000000))*(r02)*(x2172)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2175)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2169)))+(((x2169)*(x2170)))+(((r12)*(x2171))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2175)))+(((x2170)*(x2172)))+(((x2171)*(x2174)))+(((r02)*(x2169)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2171)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2172))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2180=((IkReal(4.00000000000000))*(cj13));
IkReal x2181=((npy)*(sj14));
IkReal x2182=((cj14)*(npx));
IkReal x2183=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((npz)*(x2180)))+(((IkReal(0.360000000000000))*(sj13)))+(((x2181)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2182)))+(((IkReal(-0.360000000000000))*(cj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npz)*(x2180)))+(((IkReal(0.360000000000000))*(sj13)))+(((x2181)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2182)))+(((IkReal(-0.360000000000000))*(cj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npz)*(x2180)))+(((IkReal(0.360000000000000))*(sj13)))+(((x2181)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))), ((IkReal(-0.940000000000000))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2182)))+(((IkReal(-0.360000000000000))*(cj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2184=((IkReal(1.00000000000000))*(sj13));
IkReal x2185=((cj14)*(npx));
IkReal x2186=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2184)))+(((cj13)*(x2186)))+(((IkReal(-1.00000000000000))*(cj13)*(x2185))));
evalcond[1]=((IkReal(0.0300000000000000))+(((sj13)*(x2186)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2184)*(x2185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2187=((cj13)*(sj14));
IkReal x2188=((IkReal(1.00000000000000))*(cj11));
IkReal x2189=((r11)*(sj9));
IkReal x2190=((cj11)*(sj13));
IkReal x2191=((r12)*(sj9));
IkReal x2192=((cj9)*(r00));
IkReal x2193=((sj11)*(sj13));
IkReal x2194=((cj9)*(r02));
IkReal x2195=((cj9)*(r01));
IkReal x2196=((IkReal(1.00000000000000))*(sj11));
IkReal x2197=((r10)*(sj9));
IkReal x2198=((cj13)*(cj14)*(sj11));
IkReal x2199=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(x2187)*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2196)))+(((x2192)*(x2199)))+(((r21)*(sj11)*(x2187)))+(((x2190)*(x2194)))+(((x2190)*(x2191)))+(((IkReal(-1.00000000000000))*(r22)*(x2193)))+(((x2197)*(x2199)))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)*(x2195))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((r22)*(x2190)))+(((x2191)*(x2193)))+(((x2193)*(x2194)))+(((x2192)*(x2198)))+(((r20)*(x2199)))+(((IkReal(-1.00000000000000))*(x2187)*(x2195)*(x2196)))+(((IkReal(-1.00000000000000))*(x2187)*(x2189)*(x2196)))+(((x2197)*(x2198)))+(((IkReal(-1.00000000000000))*(r21)*(x2187)*(x2188))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((IkReal(-1.00000000000000))*(x2187)*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2196)))+(((x2192)*(x2199)))+(((r21)*(sj11)*(x2187)))+(((x2190)*(x2194)))+(((x2190)*(x2191)))+(((IkReal(-1.00000000000000))*(r22)*(x2193)))+(((x2197)*(x2199)))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)*(x2195)))))), ((gconst61)*(((((r22)*(x2190)))+(((x2191)*(x2193)))+(((x2193)*(x2194)))+(((x2192)*(x2198)))+(((r20)*(x2199)))+(((IkReal(-1.00000000000000))*(x2187)*(x2195)*(x2196)))+(((IkReal(-1.00000000000000))*(x2187)*(x2189)*(x2196)))+(((x2197)*(x2198)))+(((IkReal(-1.00000000000000))*(r21)*(x2187)*(x2188)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2200=IKsin(j10);
IkReal x2201=IKcos(j10);
IkReal x2202=((IkReal(1.00000000000000))*(sj13));
IkReal x2203=((r11)*(sj9));
IkReal x2204=((cj9)*(r01));
IkReal x2205=((r21)*(sj14));
IkReal x2206=((cj9)*(r02));
IkReal x2207=((sj13)*(sj9));
IkReal x2208=((cj14)*(r10));
IkReal x2209=((IkReal(1.00000000000000))*(cj13));
IkReal x2210=((cj14)*(r20));
IkReal x2211=((cj11)*(x2200));
IkReal x2212=((sj11)*(x2201));
IkReal x2213=((sj14)*(x2209));
IkReal x2214=((sj11)*(x2200));
IkReal x2215=((cj11)*(x2201));
IkReal x2216=((cj14)*(cj9)*(r00));
IkReal x2217=((x2212)+(x2211));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2215)))+(x2214)+(((IkReal(-1.00000000000000))*(r22)*(x2202)))+(((cj13)*(x2205)))+(((IkReal(-1.00000000000000))*(x2209)*(x2210))));
evalcond[1]=((x2217)+(((IkReal(-1.00000000000000))*(x2202)*(x2210)))+(((sj13)*(x2205)))+(((cj13)*(r22))));
evalcond[2]=((x2217)+(((IkReal(-1.00000000000000))*(x2204)*(x2213)))+(((r12)*(x2207)))+(((cj13)*(x2216)))+(((cj13)*(sj9)*(x2208)))+(((sj13)*(x2206)))+(((IkReal(-1.00000000000000))*(x2203)*(x2213))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2214)))+(x2215)+(((IkReal(-1.00000000000000))*(sj14)*(x2202)*(x2204)))+(((IkReal(-1.00000000000000))*(sj14)*(x2202)*(x2203)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2209)))+(((IkReal(-1.00000000000000))*(x2206)*(x2209)))+(((x2207)*(x2208)))+(((sj13)*(x2216))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2218=((cj13)*(sj11));
IkReal x2219=((r21)*(sj14));
IkReal x2220=((cj11)*(cj13));
IkReal x2221=((sj11)*(sj13));
IkReal x2222=((cj11)*(sj13));
IkReal x2223=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x2222)*(x2223)))+(((r22)*(x2220)))+(((IkReal(-1.00000000000000))*(r22)*(x2221)))+(((x2219)*(x2222)))+(((IkReal(-1.00000000000000))*(x2218)*(x2223)))+(((x2218)*(x2219))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r22)*(x2222)))+(((IkReal(-1.00000000000000))*(x2219)*(x2220)))+(((IkReal(-1.00000000000000))*(x2221)*(x2223)))+(((x2219)*(x2221)))+(((r22)*(x2218)))+(((cj14)*(r20)*(x2220))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(x2222)*(x2223)))+(((r22)*(x2220)))+(((IkReal(-1.00000000000000))*(r22)*(x2221)))+(((x2219)*(x2222)))+(((IkReal(-1.00000000000000))*(x2218)*(x2223)))+(((x2218)*(x2219)))))), ((gconst60)*(((((r22)*(x2222)))+(((IkReal(-1.00000000000000))*(x2219)*(x2220)))+(((IkReal(-1.00000000000000))*(x2221)*(x2223)))+(((x2219)*(x2221)))+(((r22)*(x2218)))+(((cj14)*(r20)*(x2220)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2224=IKsin(j10);
IkReal x2225=IKcos(j10);
IkReal x2226=((IkReal(1.00000000000000))*(sj13));
IkReal x2227=((r11)*(sj9));
IkReal x2228=((cj9)*(r01));
IkReal x2229=((r21)*(sj14));
IkReal x2230=((cj9)*(r02));
IkReal x2231=((sj13)*(sj9));
IkReal x2232=((cj14)*(r10));
IkReal x2233=((IkReal(1.00000000000000))*(cj13));
IkReal x2234=((cj14)*(r20));
IkReal x2235=((cj11)*(x2224));
IkReal x2236=((sj11)*(x2225));
IkReal x2237=((sj14)*(x2233));
IkReal x2238=((sj11)*(x2224));
IkReal x2239=((cj11)*(x2225));
IkReal x2240=((cj14)*(cj9)*(r00));
IkReal x2241=((x2235)+(x2236));
evalcond[0]=((((cj13)*(x2229)))+(x2238)+(((IkReal(-1.00000000000000))*(x2239)))+(((IkReal(-1.00000000000000))*(r22)*(x2226)))+(((IkReal(-1.00000000000000))*(x2233)*(x2234))));
evalcond[1]=((x2241)+(((IkReal(-1.00000000000000))*(x2226)*(x2234)))+(((sj13)*(x2229)))+(((cj13)*(r22))));
evalcond[2]=((x2241)+(((sj13)*(x2230)))+(((IkReal(-1.00000000000000))*(x2227)*(x2237)))+(((cj13)*(x2240)))+(((IkReal(-1.00000000000000))*(x2228)*(x2237)))+(((cj13)*(sj9)*(x2232)))+(((r12)*(x2231))));
evalcond[3]=((x2239)+(((IkReal(-1.00000000000000))*(x2238)))+(((x2231)*(x2232)))+(((IkReal(-1.00000000000000))*(x2230)*(x2233)))+(((IkReal(-1.00000000000000))*(sj14)*(x2226)*(x2227)))+(((IkReal(-1.00000000000000))*(sj14)*(x2226)*(x2228)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2233)))+(((sj13)*(x2240))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2242=((cj13)*(sj9));
IkReal x2243=((r01)*(sj14));
IkReal x2244=((cj9)*(sj13));
IkReal x2245=((sj13)*(sj9));
IkReal x2246=((cj14)*(r01));
IkReal x2247=((cj14)*(r10));
IkReal x2248=((cj13)*(cj9));
IkReal x2249=((IkReal(1.00000000000000))*(cj9));
IkReal x2250=((sj14)*(sj9));
IkReal x2251=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2252=((sj14)*(x2249));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(-1.00000000000000))+(((sj9)*(x2246)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2249)))+(((IkReal(-1.00000000000000))*(r10)*(x2252)))+(((r00)*(x2250))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x2250)))+(((IkReal(-1.00000000000000))*(r00)*(x2252)))+(((IkReal(-1.00000000000000))*(r11)*(x2251)))+(((IkReal(-1.00000000000000))*(x2246)*(x2249))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2248)))+(((IkReal(-1.00000000000000))*(r02)*(x2245)))+(((x2247)*(x2248)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2242)))+(((x2242)*(x2243)))+(((r12)*(x2244))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2244)))+(((x2243)*(x2245)))+(((x2244)*(x2247)))+(((IkReal(-1.00000000000000))*(r12)*(x2248)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2245)))+(((r02)*(x2242))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2253=((IkReal(4.00000000000000))*(cj13));
IkReal x2254=((npy)*(sj14));
IkReal x2255=((cj14)*(npx));
IkReal x2256=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(npz)*(x2253)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256)))+(((IkReal(-0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x2253)*(x2255)))+(((IkReal(-1.00000000000000))*(x2253)*(x2254)))+(((npz)*(x2256)))+(((IkReal(-0.360000000000000))*(cj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(npz)*(x2253)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256)))+(((IkReal(-0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((x2253)*(x2255)))+(((IkReal(-1.00000000000000))*(x2253)*(x2254)))+(((npz)*(x2256)))+(((IkReal(-0.360000000000000))*(cj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(npz)*(x2253)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256)))+(((IkReal(-0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((x2253)*(x2255)))+(((IkReal(-1.00000000000000))*(x2253)*(x2254)))+(((npz)*(x2256)))+(((IkReal(-0.360000000000000))*(cj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2257=((IkReal(1.00000000000000))*(sj13));
IkReal x2258=((cj14)*(npx));
IkReal x2259=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2257)))+(((IkReal(-1.00000000000000))*(cj13)*(x2258)))+(((cj13)*(x2259))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x2257)*(x2258)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x2259)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2260=((cj13)*(sj14));
IkReal x2261=((IkReal(1.00000000000000))*(cj11));
IkReal x2262=((r11)*(sj9));
IkReal x2263=((IkReal(1.00000000000000))*(sj11));
IkReal x2264=((cj13)*(cj14));
IkReal x2265=((cj11)*(sj13));
IkReal x2266=((r12)*(sj9));
IkReal x2267=((sj11)*(sj13));
IkReal x2268=((cj9)*(r02));
IkReal x2269=((cj9)*(r01));
IkReal x2270=((r10)*(sj9));
IkReal x2271=((cj9)*(r00));
if( IKabs(((gconst63)*(((((r21)*(sj11)*(x2260)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2263)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)*(x2269)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)*(x2262)))+(((IkReal(-1.00000000000000))*(r20)*(x2263)*(x2264)))+(((cj11)*(x2264)*(x2271)))+(((cj11)*(x2264)*(x2270)))+(((x2265)*(x2266)))+(((x2265)*(x2268))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(x2260)*(x2262)*(x2263)))+(((IkReal(-1.00000000000000))*(x2260)*(x2263)*(x2269)))+(((r22)*(x2265)))+(((sj11)*(x2264)*(x2270)))+(((sj11)*(x2264)*(x2271)))+(((IkReal(-1.00000000000000))*(r21)*(x2260)*(x2261)))+(((x2266)*(x2267)))+(((x2267)*(x2268)))+(((cj11)*(r20)*(x2264))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((r21)*(sj11)*(x2260)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2263)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)*(x2269)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)*(x2262)))+(((IkReal(-1.00000000000000))*(r20)*(x2263)*(x2264)))+(((cj11)*(x2264)*(x2271)))+(((cj11)*(x2264)*(x2270)))+(((x2265)*(x2266)))+(((x2265)*(x2268)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(x2260)*(x2262)*(x2263)))+(((IkReal(-1.00000000000000))*(x2260)*(x2263)*(x2269)))+(((r22)*(x2265)))+(((sj11)*(x2264)*(x2270)))+(((sj11)*(x2264)*(x2271)))+(((IkReal(-1.00000000000000))*(r21)*(x2260)*(x2261)))+(((x2266)*(x2267)))+(((x2267)*(x2268)))+(((cj11)*(r20)*(x2264)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2272=IKsin(j10);
IkReal x2273=IKcos(j10);
IkReal x2274=((IkReal(1.00000000000000))*(sj13));
IkReal x2275=((r11)*(sj9));
IkReal x2276=((cj9)*(r01));
IkReal x2277=((IkReal(1.00000000000000))*(cj11));
IkReal x2278=((r21)*(sj14));
IkReal x2279=((cj9)*(r02));
IkReal x2280=((sj13)*(sj9));
IkReal x2281=((cj14)*(r10));
IkReal x2282=((IkReal(1.00000000000000))*(cj13));
IkReal x2283=((cj14)*(r20));
IkReal x2284=((sj11)*(x2272));
IkReal x2285=((sj14)*(x2282));
IkReal x2286=((sj11)*(x2273));
IkReal x2287=((cj14)*(cj9)*(r00));
IkReal x2288=((x2273)*(x2277));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2282)*(x2283)))+(x2284)+(((cj13)*(x2278)))+(((IkReal(-1.00000000000000))*(x2288)))+(((IkReal(-1.00000000000000))*(r22)*(x2274))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2286)))+(((sj13)*(x2278)))+(((IkReal(-1.00000000000000))*(x2274)*(x2283)))+(((IkReal(-1.00000000000000))*(x2272)*(x2277)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2276)*(x2285)))+(x2286)+(((cj13)*(sj9)*(x2281)))+(((r12)*(x2280)))+(((cj11)*(x2272)))+(((sj13)*(x2279)))+(((cj13)*(x2287)))+(((IkReal(-1.00000000000000))*(x2275)*(x2285))));
evalcond[3]=((x2284)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2282)))+(((IkReal(-1.00000000000000))*(x2288)))+(((x2280)*(x2281)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((IkReal(-1.00000000000000))*(sj14)*(x2274)*(x2275)))+(((IkReal(-1.00000000000000))*(sj14)*(x2274)*(x2276)))+(((sj13)*(x2287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2289=((cj13)*(r22));
IkReal x2290=((IkReal(1.00000000000000))*(sj11));
IkReal x2291=((IkReal(1.00000000000000))*(cj11));
IkReal x2292=((r22)*(sj13));
IkReal x2293=((cj14)*(r20));
IkReal x2294=((cj13)*(r21)*(sj14));
IkReal x2295=((r21)*(sj13)*(sj14));
if( IKabs(((gconst62)*(((((sj11)*(x2292)))+(((cj13)*(sj11)*(x2293)))+(((IkReal(-1.00000000000000))*(sj13)*(x2291)*(x2293)))+(((cj11)*(x2295)))+(((IkReal(-1.00000000000000))*(x2290)*(x2294)))+(((cj11)*(x2289))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((sj11)*(x2295)))+(((sj11)*(x2289)))+(((IkReal(-1.00000000000000))*(cj13)*(x2291)*(x2293)))+(((IkReal(-1.00000000000000))*(x2291)*(x2292)))+(((cj11)*(x2294)))+(((IkReal(-1.00000000000000))*(sj13)*(x2290)*(x2293))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((sj11)*(x2292)))+(((cj13)*(sj11)*(x2293)))+(((IkReal(-1.00000000000000))*(sj13)*(x2291)*(x2293)))+(((cj11)*(x2295)))+(((IkReal(-1.00000000000000))*(x2290)*(x2294)))+(((cj11)*(x2289)))))), ((gconst62)*(((((sj11)*(x2295)))+(((sj11)*(x2289)))+(((IkReal(-1.00000000000000))*(cj13)*(x2291)*(x2293)))+(((IkReal(-1.00000000000000))*(x2291)*(x2292)))+(((cj11)*(x2294)))+(((IkReal(-1.00000000000000))*(sj13)*(x2290)*(x2293)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2296=IKsin(j10);
IkReal x2297=IKcos(j10);
IkReal x2298=((IkReal(1.00000000000000))*(sj13));
IkReal x2299=((r11)*(sj9));
IkReal x2300=((cj9)*(r01));
IkReal x2301=((IkReal(1.00000000000000))*(cj11));
IkReal x2302=((r21)*(sj14));
IkReal x2303=((cj9)*(r02));
IkReal x2304=((sj13)*(sj9));
IkReal x2305=((cj14)*(r10));
IkReal x2306=((IkReal(1.00000000000000))*(cj13));
IkReal x2307=((cj14)*(r20));
IkReal x2308=((sj11)*(x2296));
IkReal x2309=((sj14)*(x2306));
IkReal x2310=((sj11)*(x2297));
IkReal x2311=((cj14)*(cj9)*(r00));
IkReal x2312=((x2297)*(x2301));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2306)*(x2307)))+(((cj13)*(x2302)))+(x2308)+(((IkReal(-1.00000000000000))*(r22)*(x2298)))+(((IkReal(-1.00000000000000))*(x2312))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2310)))+(((sj13)*(x2302)))+(((IkReal(-1.00000000000000))*(x2296)*(x2301)))+(((IkReal(-1.00000000000000))*(x2298)*(x2307)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x2304)))+(((sj13)*(x2303)))+(((IkReal(-1.00000000000000))*(x2300)*(x2309)))+(x2310)+(((IkReal(-1.00000000000000))*(x2299)*(x2309)))+(((cj11)*(x2296)))+(((cj13)*(x2311)))+(((cj13)*(sj9)*(x2305))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2306)))+(((x2304)*(x2305)))+(x2308)+(((IkReal(-1.00000000000000))*(x2303)*(x2306)))+(((IkReal(-1.00000000000000))*(sj14)*(x2298)*(x2299)))+(((sj13)*(x2311)))+(((IkReal(-1.00000000000000))*(sj14)*(x2298)*(x2300)))+(((IkReal(-1.00000000000000))*(x2312))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2313=((IkReal(4.00000000000000))*(cj13));
IkReal x2314=((npy)*(sj14));
IkReal x2315=((IkReal(4.00000000000000))*(sj13));
IkReal x2316=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x2313)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x2315)*(x2316)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((x2314)*(x2315))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x2315)))+(((IkReal(-1.00000000000000))*(x2313)*(x2314)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2313)*(x2316))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x2313)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x2315)*(x2316)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((x2314)*(x2315)))))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x2315)))+(((IkReal(-1.00000000000000))*(x2313)*(x2314)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2313)*(x2316)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x2313)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x2315)*(x2316)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((x2314)*(x2315)))))), ((IkReal(-0.940000000000000))+(((npz)*(x2315)))+(((IkReal(-1.00000000000000))*(x2313)*(x2314)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2313)*(x2316)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2317=IKsin(j11);
IkReal x2318=((IkReal(1.00000000000000))*(sj13));
IkReal x2319=((cj14)*(npx));
IkReal x2320=((npy)*(sj14));
IkReal x2321=((IkReal(0.250000000000000))*(x2317));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj12)))+(((cj14)*(npy)))+(((IkReal(-0.0300000000000000))*(sj12)))+(((npx)*(sj14)))+(((sj12)*(x2321))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2319)))+(((IkReal(-1.00000000000000))*(npz)*(x2318)))+(((cj13)*(x2320))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2318)*(x2319)))+(((IkReal(0.0950000000000000))*(sj12)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x2321)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x2320))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2322=((r00)*(sj9));
IkReal x2323=((IkReal(1.00000000000000))*(sj13));
IkReal x2324=((cj13)*(sj14));
IkReal x2325=((cj9)*(sj14));
IkReal x2326=((cj13)*(r02));
IkReal x2327=((sj13)*(sj14));
IkReal x2328=((r01)*(sj9));
IkReal x2329=((cj9)*(sj13));
IkReal x2330=((IkReal(1.00000000000000))*(cj9));
IkReal x2331=((cj14)*(r10));
IkReal x2332=((cj14)*(npx));
IkReal x2333=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2332)*(x2333)))+(((npy)*(x2324)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2323))));
evalcond[3]=((((sj14)*(x2322)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2330)))+(((cj14)*(x2328)))+(((IkReal(-1.00000000000000))*(r10)*(x2325))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2323)))+(((r21)*(x2327)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x2327)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2323)*(x2332)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((r12)*(x2329)))+(((IkReal(-1.00000000000000))*(cj14)*(x2322)*(x2333)))+(((cj13)*(cj9)*(x2331)))+(((IkReal(-1.00000000000000))*(r11)*(x2324)*(x2330)))+(((x2324)*(x2328)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2323))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x2323)*(x2325)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2330)))+(((x2329)*(x2331)))+(((x2327)*(x2328)))+(((IkReal(-1.00000000000000))*(cj14)*(x2322)*(x2323)))+(((sj9)*(x2326))));
evalcond[8]=((((sj13)*(sj9)*(x2331)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2323)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2333)))+(((cj14)*(r00)*(x2329)))+(((IkReal(-1.00000000000000))*(r01)*(x2323)*(x2325)))+(((IkReal(-1.00000000000000))*(x2326)*(x2330))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2334=((IkReal(1.00000000000000))*(cj11));
IkReal x2335=((sj11)*(sj14));
IkReal x2336=((r10)*(sj9));
IkReal x2337=((cj9)*(r00));
IkReal x2338=((cj14)*(sj11));
IkReal x2339=((r11)*(sj9));
IkReal x2340=((cj14)*(cj9)*(r01));
if( IKabs(((gconst49)*(((((cj11)*(cj14)*(r21)))+(((cj9)*(r01)*(x2338)))+(((cj11)*(r20)*(sj14)))+(((x2335)*(x2337)))+(((x2335)*(x2336)))+(((x2338)*(x2339))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r21)*(x2338)))+(((IkReal(-1.00000000000000))*(sj14)*(x2334)*(x2337)))+(((IkReal(-1.00000000000000))*(sj14)*(x2334)*(x2336)))+(((IkReal(-1.00000000000000))*(x2334)*(x2340)))+(((IkReal(-1.00000000000000))*(cj14)*(x2334)*(x2339)))+(((r20)*(x2335))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj11)*(cj14)*(r21)))+(((cj9)*(r01)*(x2338)))+(((cj11)*(r20)*(sj14)))+(((x2335)*(x2337)))+(((x2335)*(x2336)))+(((x2338)*(x2339)))))), ((gconst49)*(((((r21)*(x2338)))+(((IkReal(-1.00000000000000))*(sj14)*(x2334)*(x2337)))+(((IkReal(-1.00000000000000))*(sj14)*(x2334)*(x2336)))+(((IkReal(-1.00000000000000))*(x2334)*(x2340)))+(((IkReal(-1.00000000000000))*(cj14)*(x2334)*(x2339)))+(((r20)*(x2335)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2341=IKsin(j10);
IkReal x2342=IKcos(j10);
IkReal x2343=((cj13)*(sj14));
IkReal x2344=((cj13)*(cj14));
IkReal x2345=((r10)*(sj9));
IkReal x2346=((IkReal(1.00000000000000))*(cj9));
IkReal x2347=((sj11)*(x2341));
IkReal x2348=((IkReal(1.00000000000000))*(x2342));
IkReal x2349=((cj11)*(x2341));
IkReal x2350=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2351=((cj11)*(x2348));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2349)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2348))));
evalcond[1]=((x2347)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2344)))+(((r21)*(x2343)))+(((IkReal(-1.00000000000000))*(x2351))));
evalcond[2]=((x2347)+(((IkReal(-1.00000000000000))*(sj14)*(x2345)))+(((IkReal(-1.00000000000000))*(cj14)*(x2350)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2346)))+(((IkReal(-1.00000000000000))*(x2351)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2346))));
evalcond[3]=((x2349)+(((cj9)*(r00)*(x2344)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2343)*(x2346)))+(((x2344)*(x2345)))+(((IkReal(-1.00000000000000))*(x2343)*(x2350)))+(((r12)*(sj13)*(sj9)))+(((sj11)*(x2342))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2352=((cj11)*(r20));
IkReal x2353=((IkReal(1.00000000000000))*(cj13));
IkReal x2354=((r21)*(sj14));
IkReal x2355=((r22)*(sj13));
IkReal x2356=((r20)*(sj11));
IkReal x2357=((cj14)*(r21));
if( IKabs(((gconst48)*(((((cj11)*(x2357)))+(((IkReal(-1.00000000000000))*(sj11)*(x2353)*(x2354)))+(((sj11)*(x2355)))+(((cj13)*(cj14)*(x2356)))+(((sj14)*(x2352))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj11)*(x2357)))+(((cj11)*(cj13)*(x2354)))+(((IkReal(-1.00000000000000))*(cj11)*(x2355)))+(((IkReal(-1.00000000000000))*(cj14)*(x2352)*(x2353)))+(((sj14)*(x2356))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((cj11)*(x2357)))+(((IkReal(-1.00000000000000))*(sj11)*(x2353)*(x2354)))+(((sj11)*(x2355)))+(((cj13)*(cj14)*(x2356)))+(((sj14)*(x2352)))))), ((gconst48)*(((((sj11)*(x2357)))+(((cj11)*(cj13)*(x2354)))+(((IkReal(-1.00000000000000))*(cj11)*(x2355)))+(((IkReal(-1.00000000000000))*(cj14)*(x2352)*(x2353)))+(((sj14)*(x2356)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2358=IKsin(j10);
IkReal x2359=IKcos(j10);
IkReal x2360=((cj13)*(sj14));
IkReal x2361=((cj13)*(cj14));
IkReal x2362=((r10)*(sj9));
IkReal x2363=((IkReal(1.00000000000000))*(cj9));
IkReal x2364=((sj11)*(x2358));
IkReal x2365=((IkReal(1.00000000000000))*(x2359));
IkReal x2366=((cj11)*(x2358));
IkReal x2367=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2368=((cj11)*(x2365));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2366)))+(((IkReal(-1.00000000000000))*(sj11)*(x2365))));
evalcond[1]=((x2364)+(((IkReal(-1.00000000000000))*(x2368)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2360)))+(((IkReal(-1.00000000000000))*(r20)*(x2361))));
evalcond[2]=((x2364)+(((IkReal(-1.00000000000000))*(x2368)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2363)))+(((IkReal(-1.00000000000000))*(cj14)*(x2367)))+(((IkReal(-1.00000000000000))*(sj14)*(x2362)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2363))));
evalcond[3]=((((sj11)*(x2359)))+(x2366)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2360)*(x2363)))+(((x2361)*(x2362)))+(((cj9)*(r00)*(x2361)))+(((IkReal(-1.00000000000000))*(x2360)*(x2367)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2369=((r00)*(sj9));
IkReal x2370=((IkReal(1.00000000000000))*(sj13));
IkReal x2371=((cj13)*(sj14));
IkReal x2372=((cj9)*(sj14));
IkReal x2373=((cj13)*(r02));
IkReal x2374=((sj13)*(sj14));
IkReal x2375=((r01)*(sj9));
IkReal x2376=((cj9)*(sj13));
IkReal x2377=((IkReal(1.00000000000000))*(cj9));
IkReal x2378=((cj14)*(r10));
IkReal x2379=((cj14)*(npx));
IkReal x2380=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2370)))+(((IkReal(-1.00000000000000))*(x2379)*(x2380)))+(((npy)*(x2371))));
evalcond[3]=((((cj14)*(x2375)))+(((IkReal(-1.00000000000000))*(r10)*(x2372)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2377)))+(((sj14)*(x2369))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2370)))+(((cj13)*(r22)))+(((r21)*(x2374))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2370)*(x2379)))+(((npy)*(x2374))));
evalcond[6]=((((r12)*(x2376)))+(((x2371)*(x2375)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2370)))+(((IkReal(-1.00000000000000))*(cj14)*(x2369)*(x2380)))+(((IkReal(-1.00000000000000))*(r11)*(x2371)*(x2377)))+(((cj13)*(cj9)*(x2378))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(x2369)*(x2370)))+(((IkReal(-1.00000000000000))*(r11)*(x2370)*(x2372)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2377)))+(((x2374)*(x2375)))+(((sj9)*(x2373)))+(((x2376)*(x2378))));
evalcond[8]=((((sj13)*(sj9)*(x2378)))+(((cj14)*(r00)*(x2376)))+(((IkReal(-1.00000000000000))*(r01)*(x2370)*(x2372)))+(((IkReal(-1.00000000000000))*(x2373)*(x2377)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2380)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2370))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2381=((IkReal(1.00000000000000))*(sj11));
IkReal x2382=((cj14)*(r21));
IkReal x2383=((IkReal(1.00000000000000))*(cj11));
IkReal x2384=((r20)*(sj14));
IkReal x2385=((cj9)*(r00)*(sj14));
IkReal x2386=((cj14)*(r11)*(sj9));
IkReal x2387=((cj14)*(cj9)*(r01));
IkReal x2388=((r10)*(sj14)*(sj9));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2381)*(x2386)))+(((IkReal(-1.00000000000000))*(x2381)*(x2388)))+(((IkReal(-1.00000000000000))*(x2381)*(x2385)))+(((IkReal(-1.00000000000000))*(x2381)*(x2387)))+(((IkReal(-1.00000000000000))*(x2382)*(x2383)))+(((IkReal(-1.00000000000000))*(x2383)*(x2384))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2381)*(x2382)))+(((IkReal(-1.00000000000000))*(x2381)*(x2384)))+(((cj11)*(x2385)))+(((cj11)*(x2387)))+(((cj11)*(x2386)))+(((cj11)*(x2388))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2381)*(x2386)))+(((IkReal(-1.00000000000000))*(x2381)*(x2388)))+(((IkReal(-1.00000000000000))*(x2381)*(x2385)))+(((IkReal(-1.00000000000000))*(x2381)*(x2387)))+(((IkReal(-1.00000000000000))*(x2382)*(x2383)))+(((IkReal(-1.00000000000000))*(x2383)*(x2384)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(x2381)*(x2382)))+(((IkReal(-1.00000000000000))*(x2381)*(x2384)))+(((cj11)*(x2385)))+(((cj11)*(x2387)))+(((cj11)*(x2386)))+(((cj11)*(x2388)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2389=IKsin(j10);
IkReal x2390=IKcos(j10);
IkReal x2391=((cj14)*(sj9));
IkReal x2392=((IkReal(1.00000000000000))*(r11));
IkReal x2393=((cj13)*(sj14));
IkReal x2394=((IkReal(1.00000000000000))*(cj9));
IkReal x2395=((cj13)*(cj14));
IkReal x2396=((cj11)*(x2389));
IkReal x2397=((sj11)*(x2390));
IkReal x2398=((cj11)*(x2390));
IkReal x2399=((sj11)*(x2389));
IkReal x2400=((x2396)+(x2397));
evalcond[0]=((x2400)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((x2399)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2398)))+(((IkReal(-1.00000000000000))*(r20)*(x2395)))+(((r21)*(x2393))));
evalcond[2]=((x2398)+(((IkReal(-1.00000000000000))*(x2399)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2394)))+(((IkReal(-1.00000000000000))*(x2391)*(x2392)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2394))));
evalcond[3]=((x2400)+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x2391)))+(((IkReal(-1.00000000000000))*(sj9)*(x2392)*(x2393)))+(((IkReal(-1.00000000000000))*(r01)*(x2393)*(x2394)))+(((cj9)*(r00)*(x2395)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2401=((cj13)*(sj11));
IkReal x2402=((r21)*(sj14));
IkReal x2403=((cj14)*(r20));
IkReal x2404=((cj11)*(cj13));
IkReal x2405=((r22)*(sj13));
IkReal x2406=((r20)*(sj14));
IkReal x2407=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x2406)))+(((cj11)*(x2407)))+(((x2401)*(x2402)))+(((IkReal(-1.00000000000000))*(sj11)*(x2405)))+(((IkReal(-1.00000000000000))*(x2401)*(x2403))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((x2403)*(x2404)))+(((cj11)*(x2405)))+(((IkReal(-1.00000000000000))*(x2402)*(x2404)))+(((sj11)*(x2406)))+(((sj11)*(x2407))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x2406)))+(((cj11)*(x2407)))+(((x2401)*(x2402)))+(((IkReal(-1.00000000000000))*(sj11)*(x2405)))+(((IkReal(-1.00000000000000))*(x2401)*(x2403)))))), ((gconst50)*(((((x2403)*(x2404)))+(((cj11)*(x2405)))+(((IkReal(-1.00000000000000))*(x2402)*(x2404)))+(((sj11)*(x2406)))+(((sj11)*(x2407)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2408=IKsin(j10);
IkReal x2409=IKcos(j10);
IkReal x2410=((cj14)*(sj9));
IkReal x2411=((IkReal(1.00000000000000))*(r11));
IkReal x2412=((cj13)*(sj14));
IkReal x2413=((IkReal(1.00000000000000))*(cj9));
IkReal x2414=((cj13)*(cj14));
IkReal x2415=((cj11)*(x2408));
IkReal x2416=((sj11)*(x2409));
IkReal x2417=((cj11)*(x2409));
IkReal x2418=((sj11)*(x2408));
IkReal x2419=((x2415)+(x2416));
evalcond[0]=((x2419)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((x2418)+(((r21)*(x2412)))+(((IkReal(-1.00000000000000))*(x2417)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2414))));
evalcond[2]=((x2417)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2413)))+(((IkReal(-1.00000000000000))*(x2418)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2410)*(x2411)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2413))));
evalcond[3]=((((cj13)*(r10)*(x2410)))+(x2419)+(((cj9)*(r00)*(x2414)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2412)*(x2413)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x2411)*(x2412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2420=((cj9)*(r10));
IkReal x2421=((cj13)*(cj14));
IkReal x2422=((sj14)*(sj9));
IkReal x2423=((IkReal(1.00000000000000))*(sj14));
IkReal x2424=((cj9)*(sj13));
IkReal x2425=((r02)*(sj9));
IkReal x2426=((cj13)*(cj9));
IkReal x2427=((cj14)*(r01));
IkReal x2428=((IkReal(1.00000000000000))*(npx));
IkReal x2429=((cj14)*(sj13));
IkReal x2430=((IkReal(1.00000000000000))*(cj9));
IkReal x2431=((npy)*(sj14));
IkReal x2432=((IkReal(1.00000000000000))*(sj13));
IkReal x2433=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj13)*(x2431)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2432)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x2421)*(x2428))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2430)))+(((IkReal(-1.00000000000000))*(x2420)*(x2423)))+(((r00)*(x2422)))+(((sj9)*(x2427))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x2428)*(x2429)))+(((sj13)*(x2431)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2427)*(x2430)))+(((IkReal(-1.00000000000000))*(r10)*(x2422)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2423)))+(((IkReal(-1.00000000000000))*(r11)*(x2433))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2425)*(x2432)))+(((x2420)*(x2421)))+(((cj13)*(r01)*(x2422)))+(((r12)*(x2424)))+(((IkReal(-1.00000000000000))*(r11)*(x2423)*(x2426)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2421))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(x2426)))+(((x2420)*(x2429)))+(((r01)*(sj13)*(x2422)))+(((cj13)*(x2425)))+(((IkReal(-1.00000000000000))*(r11)*(x2423)*(x2424)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2429))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2434=((cj13)*(sj14));
IkReal x2435=((IkReal(1.00000000000000))*(cj11));
IkReal x2436=((r11)*(sj9));
IkReal x2437=((IkReal(1.00000000000000))*(sj11));
IkReal x2438=((cj13)*(cj14));
IkReal x2439=((cj11)*(sj13));
IkReal x2440=((r12)*(sj9));
IkReal x2441=((sj11)*(sj13));
IkReal x2442=((cj9)*(r02));
IkReal x2443=((cj9)*(r01));
IkReal x2444=((r10)*(sj9));
IkReal x2445=((cj9)*(r00));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x2434)*(x2435)*(x2436)))+(((IkReal(-1.00000000000000))*(r20)*(x2437)*(x2438)))+(((cj11)*(x2438)*(x2445)))+(((cj11)*(x2438)*(x2444)))+(((r21)*(sj11)*(x2434)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2437)))+(((IkReal(-1.00000000000000))*(x2434)*(x2435)*(x2443)))+(((x2439)*(x2440)))+(((x2439)*(x2442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((sj11)*(x2438)*(x2444)))+(((sj11)*(x2438)*(x2445)))+(((IkReal(-1.00000000000000))*(x2434)*(x2436)*(x2437)))+(((x2440)*(x2441)))+(((IkReal(-1.00000000000000))*(r21)*(x2434)*(x2435)))+(((r22)*(x2439)))+(((IkReal(-1.00000000000000))*(x2434)*(x2437)*(x2443)))+(((cj11)*(r20)*(x2438)))+(((x2441)*(x2442))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(x2434)*(x2435)*(x2436)))+(((IkReal(-1.00000000000000))*(r20)*(x2437)*(x2438)))+(((cj11)*(x2438)*(x2445)))+(((cj11)*(x2438)*(x2444)))+(((r21)*(sj11)*(x2434)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2437)))+(((IkReal(-1.00000000000000))*(x2434)*(x2435)*(x2443)))+(((x2439)*(x2440)))+(((x2439)*(x2442)))))), ((gconst53)*(((((sj11)*(x2438)*(x2444)))+(((sj11)*(x2438)*(x2445)))+(((IkReal(-1.00000000000000))*(x2434)*(x2436)*(x2437)))+(((x2440)*(x2441)))+(((IkReal(-1.00000000000000))*(r21)*(x2434)*(x2435)))+(((r22)*(x2439)))+(((IkReal(-1.00000000000000))*(x2434)*(x2437)*(x2443)))+(((cj11)*(r20)*(x2438)))+(((x2441)*(x2442)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2446=IKsin(j10);
IkReal x2447=IKcos(j10);
IkReal x2448=((IkReal(1.00000000000000))*(sj13));
IkReal x2449=((r11)*(sj9));
IkReal x2450=((cj9)*(r01));
IkReal x2451=((r21)*(sj14));
IkReal x2452=((cj9)*(r02));
IkReal x2453=((sj13)*(sj9));
IkReal x2454=((cj14)*(r10));
IkReal x2455=((IkReal(1.00000000000000))*(cj13));
IkReal x2456=((cj14)*(r20));
IkReal x2457=((cj11)*(x2446));
IkReal x2458=((sj11)*(x2447));
IkReal x2459=((sj14)*(x2455));
IkReal x2460=((sj11)*(x2446));
IkReal x2461=((cj11)*(x2447));
IkReal x2462=((cj14)*(cj9)*(r00));
IkReal x2463=((x2458)+(x2457));
evalcond[0]=((x2460)+(((IkReal(-1.00000000000000))*(x2461)))+(((cj13)*(x2451)))+(((IkReal(-1.00000000000000))*(r22)*(x2448)))+(((IkReal(-1.00000000000000))*(x2455)*(x2456))));
evalcond[1]=((x2463)+(((sj13)*(x2451)))+(((IkReal(-1.00000000000000))*(x2448)*(x2456)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2450)*(x2459)))+(x2463)+(((sj13)*(x2452)))+(((cj13)*(x2462)))+(((IkReal(-1.00000000000000))*(x2449)*(x2459)))+(((r12)*(x2453)))+(((cj13)*(sj9)*(x2454))));
evalcond[3]=((x2461)+(((IkReal(-1.00000000000000))*(x2452)*(x2455)))+(((x2453)*(x2454)))+(((IkReal(-1.00000000000000))*(x2460)))+(((IkReal(-1.00000000000000))*(sj14)*(x2448)*(x2450)))+(((sj13)*(x2462)))+(((IkReal(-1.00000000000000))*(sj14)*(x2448)*(x2449)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2455))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2464=((cj13)*(sj11));
IkReal x2465=((r21)*(sj14));
IkReal x2466=((cj11)*(cj13));
IkReal x2467=((cj11)*(sj13));
IkReal x2468=((sj11)*(sj13));
IkReal x2469=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2464)*(x2469)))+(((x2464)*(x2465)))+(((x2465)*(x2467)))+(((r22)*(x2466)))+(((IkReal(-1.00000000000000))*(x2467)*(x2469)))+(((IkReal(-1.00000000000000))*(r22)*(x2468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((cj14)*(r20)*(x2466)))+(((IkReal(-1.00000000000000))*(x2468)*(x2469)))+(((x2465)*(x2468)))+(((IkReal(-1.00000000000000))*(x2465)*(x2466)))+(((r22)*(x2464)))+(((r22)*(x2467))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x2464)*(x2469)))+(((x2464)*(x2465)))+(((x2465)*(x2467)))+(((r22)*(x2466)))+(((IkReal(-1.00000000000000))*(x2467)*(x2469)))+(((IkReal(-1.00000000000000))*(r22)*(x2468)))))), ((gconst52)*(((((cj14)*(r20)*(x2466)))+(((IkReal(-1.00000000000000))*(x2468)*(x2469)))+(((x2465)*(x2468)))+(((IkReal(-1.00000000000000))*(x2465)*(x2466)))+(((r22)*(x2464)))+(((r22)*(x2467)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2470=IKsin(j10);
IkReal x2471=IKcos(j10);
IkReal x2472=((IkReal(1.00000000000000))*(sj13));
IkReal x2473=((r11)*(sj9));
IkReal x2474=((cj9)*(r01));
IkReal x2475=((r21)*(sj14));
IkReal x2476=((cj9)*(r02));
IkReal x2477=((sj13)*(sj9));
IkReal x2478=((cj14)*(r10));
IkReal x2479=((IkReal(1.00000000000000))*(cj13));
IkReal x2480=((cj14)*(r20));
IkReal x2481=((cj11)*(x2470));
IkReal x2482=((sj11)*(x2471));
IkReal x2483=((sj14)*(x2479));
IkReal x2484=((sj11)*(x2470));
IkReal x2485=((cj11)*(x2471));
IkReal x2486=((cj14)*(cj9)*(r00));
IkReal x2487=((x2482)+(x2481));
evalcond[0]=((x2484)+(((IkReal(-1.00000000000000))*(x2485)))+(((cj13)*(x2475)))+(((IkReal(-1.00000000000000))*(r22)*(x2472)))+(((IkReal(-1.00000000000000))*(x2479)*(x2480))));
evalcond[1]=((x2487)+(((IkReal(-1.00000000000000))*(x2472)*(x2480)))+(((sj13)*(x2475)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x2477)))+(x2487)+(((cj13)*(sj9)*(x2478)))+(((cj13)*(x2486)))+(((IkReal(-1.00000000000000))*(x2473)*(x2483)))+(((IkReal(-1.00000000000000))*(x2474)*(x2483)))+(((sj13)*(x2476))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2479)))+(x2485)+(((IkReal(-1.00000000000000))*(x2484)))+(((sj13)*(x2486)))+(((x2477)*(x2478)))+(((IkReal(-1.00000000000000))*(x2476)*(x2479)))+(((IkReal(-1.00000000000000))*(sj14)*(x2472)*(x2474)))+(((IkReal(-1.00000000000000))*(sj14)*(x2472)*(x2473))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2488=((cj9)*(r10));
IkReal x2489=((cj13)*(cj14));
IkReal x2490=((sj14)*(sj9));
IkReal x2491=((IkReal(1.00000000000000))*(sj14));
IkReal x2492=((cj9)*(sj13));
IkReal x2493=((r02)*(sj9));
IkReal x2494=((cj13)*(cj9));
IkReal x2495=((cj14)*(r01));
IkReal x2496=((IkReal(1.00000000000000))*(npx));
IkReal x2497=((cj14)*(sj13));
IkReal x2498=((IkReal(1.00000000000000))*(cj9));
IkReal x2499=((npy)*(sj14));
IkReal x2500=((IkReal(1.00000000000000))*(sj13));
IkReal x2501=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x2499)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x2489)*(x2496)))+(((IkReal(-1.00000000000000))*(npz)*(x2500))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r00)*(x2490)))+(((sj9)*(x2495)))+(((IkReal(-1.00000000000000))*(x2488)*(x2491)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2498))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x2496)*(x2497)))+(((cj13)*(npz)))+(((sj13)*(x2499)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2495)*(x2498)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2491)))+(((IkReal(-1.00000000000000))*(r11)*(x2501)))+(((IkReal(-1.00000000000000))*(r10)*(x2490))));
evalcond[7]=((((cj13)*(r01)*(x2490)))+(((IkReal(-1.00000000000000))*(r11)*(x2491)*(x2494)))+(((x2488)*(x2489)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2489)))+(((IkReal(-1.00000000000000))*(x2493)*(x2500)))+(((r12)*(x2492))));
evalcond[8]=((((r01)*(sj13)*(x2490)))+(((IkReal(-1.00000000000000))*(r12)*(x2494)))+(((x2488)*(x2497)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2497)))+(((IkReal(-1.00000000000000))*(r11)*(x2491)*(x2492)))+(((cj13)*(x2493))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2502=((cj13)*(sj14));
IkReal x2503=((IkReal(1.00000000000000))*(cj11));
IkReal x2504=((r11)*(sj9));
IkReal x2505=((cj11)*(sj13));
IkReal x2506=((r12)*(sj9));
IkReal x2507=((r10)*(sj9));
IkReal x2508=((sj11)*(sj13));
IkReal x2509=((cj9)*(r02));
IkReal x2510=((IkReal(1.00000000000000))*(sj11));
IkReal x2511=((cj9)*(r01));
IkReal x2512=((cj9)*(r00));
IkReal x2513=((cj13)*(cj14)*(sj11));
IkReal x2514=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst55)*(((((x2512)*(x2514)))+(((x2505)*(x2506)))+(((x2505)*(x2509)))+(((r21)*(sj11)*(x2502)))+(((IkReal(-1.00000000000000))*(r22)*(x2508)))+(((x2507)*(x2514)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2510)))+(((IkReal(-1.00000000000000))*(x2502)*(x2503)*(x2504)))+(((IkReal(-1.00000000000000))*(x2502)*(x2503)*(x2511))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x2512)*(x2513)))+(((r22)*(x2505)))+(((x2506)*(x2508)))+(((IkReal(-1.00000000000000))*(x2502)*(x2504)*(x2510)))+(((x2508)*(x2509)))+(((x2507)*(x2513)))+(((IkReal(-1.00000000000000))*(x2502)*(x2510)*(x2511)))+(((IkReal(-1.00000000000000))*(r21)*(x2502)*(x2503)))+(((r20)*(x2514))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x2512)*(x2514)))+(((x2505)*(x2506)))+(((x2505)*(x2509)))+(((r21)*(sj11)*(x2502)))+(((IkReal(-1.00000000000000))*(r22)*(x2508)))+(((x2507)*(x2514)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2510)))+(((IkReal(-1.00000000000000))*(x2502)*(x2503)*(x2504)))+(((IkReal(-1.00000000000000))*(x2502)*(x2503)*(x2511)))))), ((gconst55)*(((((x2512)*(x2513)))+(((r22)*(x2505)))+(((x2506)*(x2508)))+(((IkReal(-1.00000000000000))*(x2502)*(x2504)*(x2510)))+(((x2508)*(x2509)))+(((x2507)*(x2513)))+(((IkReal(-1.00000000000000))*(x2502)*(x2510)*(x2511)))+(((IkReal(-1.00000000000000))*(r21)*(x2502)*(x2503)))+(((r20)*(x2514)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2515=IKsin(j10);
IkReal x2516=IKcos(j10);
IkReal x2517=((IkReal(1.00000000000000))*(sj13));
IkReal x2518=((r11)*(sj9));
IkReal x2519=((cj9)*(r01));
IkReal x2520=((IkReal(1.00000000000000))*(cj11));
IkReal x2521=((r21)*(sj14));
IkReal x2522=((cj9)*(r02));
IkReal x2523=((sj13)*(sj9));
IkReal x2524=((cj14)*(r10));
IkReal x2525=((IkReal(1.00000000000000))*(cj13));
IkReal x2526=((cj14)*(r20));
IkReal x2527=((sj11)*(x2515));
IkReal x2528=((sj14)*(x2525));
IkReal x2529=((sj11)*(x2516));
IkReal x2530=((cj14)*(cj9)*(r00));
IkReal x2531=((x2516)*(x2520));
evalcond[0]=((x2527)+(((cj13)*(x2521)))+(((IkReal(-1.00000000000000))*(x2531)))+(((IkReal(-1.00000000000000))*(r22)*(x2517)))+(((IkReal(-1.00000000000000))*(x2525)*(x2526))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2515)*(x2520)))+(((IkReal(-1.00000000000000))*(x2529)))+(((IkReal(-1.00000000000000))*(x2517)*(x2526)))+(((sj13)*(x2521)))+(((cj13)*(r22))));
evalcond[2]=((x2529)+(((cj11)*(x2515)))+(((cj13)*(sj9)*(x2524)))+(((r12)*(x2523)))+(((sj13)*(x2522)))+(((cj13)*(x2530)))+(((IkReal(-1.00000000000000))*(x2519)*(x2528)))+(((IkReal(-1.00000000000000))*(x2518)*(x2528))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2517)*(x2518)))+(((IkReal(-1.00000000000000))*(sj14)*(x2517)*(x2519)))+(x2527)+(((sj13)*(x2530)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2525)))+(((IkReal(-1.00000000000000))*(x2531)))+(((IkReal(-1.00000000000000))*(x2522)*(x2525)))+(((x2523)*(x2524))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2532=((r22)*(sj11));
IkReal x2533=((IkReal(1.00000000000000))*(sj11));
IkReal x2534=((IkReal(1.00000000000000))*(cj11));
IkReal x2535=((cj14)*(r20));
IkReal x2536=((cj13)*(r21)*(sj14));
IkReal x2537=((r21)*(sj13)*(sj14));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x2533)*(x2536)))+(((cj11)*(x2537)))+(((sj13)*(x2532)))+(((cj11)*(cj13)*(r22)))+(((cj13)*(sj11)*(x2535)))+(((IkReal(-1.00000000000000))*(sj13)*(x2534)*(x2535))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2534)))+(((cj11)*(x2536)))+(((IkReal(-1.00000000000000))*(cj13)*(x2534)*(x2535)))+(((sj11)*(x2537)))+(((cj13)*(x2532)))+(((IkReal(-1.00000000000000))*(sj13)*(x2533)*(x2535))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(x2533)*(x2536)))+(((cj11)*(x2537)))+(((sj13)*(x2532)))+(((cj11)*(cj13)*(r22)))+(((cj13)*(sj11)*(x2535)))+(((IkReal(-1.00000000000000))*(sj13)*(x2534)*(x2535)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2534)))+(((cj11)*(x2536)))+(((IkReal(-1.00000000000000))*(cj13)*(x2534)*(x2535)))+(((sj11)*(x2537)))+(((cj13)*(x2532)))+(((IkReal(-1.00000000000000))*(sj13)*(x2533)*(x2535)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2538=IKsin(j10);
IkReal x2539=IKcos(j10);
IkReal x2540=((IkReal(1.00000000000000))*(sj13));
IkReal x2541=((r11)*(sj9));
IkReal x2542=((cj9)*(r01));
IkReal x2543=((IkReal(1.00000000000000))*(cj11));
IkReal x2544=((r21)*(sj14));
IkReal x2545=((cj9)*(r02));
IkReal x2546=((sj13)*(sj9));
IkReal x2547=((cj14)*(r10));
IkReal x2548=((IkReal(1.00000000000000))*(cj13));
IkReal x2549=((cj14)*(r20));
IkReal x2550=((sj11)*(x2538));
IkReal x2551=((sj14)*(x2548));
IkReal x2552=((sj11)*(x2539));
IkReal x2553=((cj14)*(cj9)*(r00));
IkReal x2554=((x2539)*(x2543));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2548)*(x2549)))+(x2550)+(((cj13)*(x2544)))+(((IkReal(-1.00000000000000))*(r22)*(x2540)))+(((IkReal(-1.00000000000000))*(x2554))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2552)))+(((sj13)*(x2544)))+(((IkReal(-1.00000000000000))*(x2538)*(x2543)))+(((IkReal(-1.00000000000000))*(x2540)*(x2549)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x2553)))+(x2552)+(((IkReal(-1.00000000000000))*(x2542)*(x2551)))+(((cj11)*(x2538)))+(((cj13)*(sj9)*(x2547)))+(((r12)*(x2546)))+(((sj13)*(x2545)))+(((IkReal(-1.00000000000000))*(x2541)*(x2551))));
evalcond[3]=((x2550)+(((IkReal(-1.00000000000000))*(x2545)*(x2548)))+(((IkReal(-1.00000000000000))*(sj14)*(x2540)*(x2542)))+(((IkReal(-1.00000000000000))*(sj14)*(x2540)*(x2541)))+(((sj13)*(x2553)))+(((x2546)*(x2547)))+(((IkReal(-1.00000000000000))*(x2554)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2548))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2555=((r21)*(sj14));
IkReal x2556=((cj12)*(cj13));
IkReal x2557=((sj11)*(sj13));
IkReal x2558=((cj14)*(r20));
IkReal x2559=((IkReal(1.00000000000000))*(sj11));
IkReal x2560=((cj12)*(r22));
IkReal x2561=((IkReal(1.00000000000000))*(cj11));
IkReal x2562=((cj13)*(r22));
IkReal x2563=((sj13)*(x2561));
if( IKabs(((gconst47)*(((((sj11)*(x2556)*(x2558)))+(((IkReal(-1.00000000000000))*(x2555)*(x2563)))+(((x2557)*(x2560)))+(((IkReal(-1.00000000000000))*(x2555)*(x2556)*(x2559)))+(((IkReal(-1.00000000000000))*(x2561)*(x2562)))+(((cj11)*(sj13)*(x2558))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2555)*(x2557)))+(((cj11)*(x2555)*(x2556)))+(((IkReal(-1.00000000000000))*(x2556)*(x2558)*(x2561)))+(((IkReal(-1.00000000000000))*(x2560)*(x2563)))+(((IkReal(-1.00000000000000))*(x2559)*(x2562)))+(((x2557)*(x2558))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((sj11)*(x2556)*(x2558)))+(((IkReal(-1.00000000000000))*(x2555)*(x2563)))+(((x2557)*(x2560)))+(((IkReal(-1.00000000000000))*(x2555)*(x2556)*(x2559)))+(((IkReal(-1.00000000000000))*(x2561)*(x2562)))+(((cj11)*(sj13)*(x2558)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2555)*(x2557)))+(((cj11)*(x2555)*(x2556)))+(((IkReal(-1.00000000000000))*(x2556)*(x2558)*(x2561)))+(((IkReal(-1.00000000000000))*(x2560)*(x2563)))+(((IkReal(-1.00000000000000))*(x2559)*(x2562)))+(((x2557)*(x2558)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2564=IKsin(j10);
IkReal x2565=IKcos(j10);
IkReal x2566=((IkReal(1.00000000000000))*(cj13));
IkReal x2567=((cj9)*(r02));
IkReal x2568=((IkReal(1.00000000000000))*(sj13));
IkReal x2569=((r11)*(sj9));
IkReal x2570=((IkReal(1.00000000000000))*(cj14));
IkReal x2571=((cj9)*(r01));
IkReal x2572=((r21)*(sj14));
IkReal x2573=((IkReal(1.00000000000000))*(sj12));
IkReal x2574=((r10)*(sj9));
IkReal x2575=((cj14)*(sj13));
IkReal x2576=((cj14)*(r20));
IkReal x2577=((IkReal(1.00000000000000))*(sj14));
IkReal x2578=((r12)*(sj9));
IkReal x2579=((cj13)*(cj14));
IkReal x2580=((cj9)*(r00));
IkReal x2581=((sj11)*(x2564));
IkReal x2582=((cj11)*(x2564));
IkReal x2583=((sj11)*(x2565));
IkReal x2584=((cj11)*(x2565));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2573)*(x2582)))+(((IkReal(-1.00000000000000))*(x2573)*(x2583)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((x2581)+(((IkReal(-1.00000000000000))*(r22)*(x2568)))+(((IkReal(-1.00000000000000))*(x2566)*(x2576)))+(((cj13)*(x2572)))+(((IkReal(-1.00000000000000))*(x2584))));
evalcond[2]=((((cj12)*(x2582)))+(((cj12)*(x2583)))+(((IkReal(-1.00000000000000))*(x2568)*(x2576)))+(((sj13)*(x2572)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2569)*(x2570)))+(((IkReal(-1.00000000000000))*(x2573)*(x2584)))+(((sj12)*(x2581)))+(((IkReal(-1.00000000000000))*(x2570)*(x2571)))+(((IkReal(-1.00000000000000))*(x2577)*(x2580)))+(((IkReal(-1.00000000000000))*(x2574)*(x2577))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x2566)*(x2569)))+(x2583)+(x2582)+(((IkReal(-1.00000000000000))*(sj14)*(x2566)*(x2571)))+(((x2574)*(x2579)))+(((sj13)*(x2567)))+(((sj13)*(x2578)))+(((x2579)*(x2580))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2566)*(x2578)))+(((cj12)*(x2584)))+(((x2574)*(x2575)))+(((IkReal(-1.00000000000000))*(x2566)*(x2567)))+(((IkReal(-1.00000000000000))*(sj14)*(x2568)*(x2569)))+(((x2575)*(x2580)))+(((IkReal(-1.00000000000000))*(sj14)*(x2568)*(x2571)))+(((IkReal(-1.00000000000000))*(cj12)*(x2581))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2585=((cj11)*(sj12));
IkReal x2586=((r22)*(sj13));
IkReal x2587=((r20)*(sj14));
IkReal x2588=((cj14)*(sj11));
IkReal x2589=((cj13)*(r20));
IkReal x2590=((sj11)*(sj12));
IkReal x2591=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2586)*(x2590)))+(((IkReal(-1.00000000000000))*(x2590)*(x2591)))+(((sj12)*(x2588)*(x2589)))+(((cj11)*(x2587))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2585)*(x2589)))+(((sj11)*(x2587)))+(((IkReal(-1.00000000000000))*(x2585)*(x2586)))+(((x2585)*(x2591)))+(((r21)*(x2588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2586)*(x2590)))+(((IkReal(-1.00000000000000))*(x2590)*(x2591)))+(((sj12)*(x2588)*(x2589)))+(((cj11)*(x2587)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2585)*(x2589)))+(((sj11)*(x2587)))+(((IkReal(-1.00000000000000))*(x2585)*(x2586)))+(((x2585)*(x2591)))+(((r21)*(x2588)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2592=IKsin(j10);
IkReal x2593=IKcos(j10);
IkReal x2594=((IkReal(1.00000000000000))*(cj13));
IkReal x2595=((cj9)*(r02));
IkReal x2596=((IkReal(1.00000000000000))*(sj13));
IkReal x2597=((r11)*(sj9));
IkReal x2598=((IkReal(1.00000000000000))*(cj14));
IkReal x2599=((cj9)*(r01));
IkReal x2600=((r21)*(sj14));
IkReal x2601=((IkReal(1.00000000000000))*(sj12));
IkReal x2602=((r10)*(sj9));
IkReal x2603=((cj14)*(sj13));
IkReal x2604=((cj14)*(r20));
IkReal x2605=((IkReal(1.00000000000000))*(sj14));
IkReal x2606=((r12)*(sj9));
IkReal x2607=((cj13)*(cj14));
IkReal x2608=((cj9)*(r00));
IkReal x2609=((sj11)*(x2592));
IkReal x2610=((cj11)*(x2592));
IkReal x2611=((sj11)*(x2593));
IkReal x2612=((cj11)*(x2593));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2601)*(x2610)))+(((IkReal(-1.00000000000000))*(x2601)*(x2611))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2596)))+(((IkReal(-1.00000000000000))*(x2612)))+(((cj13)*(x2600)))+(((IkReal(-1.00000000000000))*(x2594)*(x2604)))+(x2609));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2596)*(x2604)))+(((sj13)*(x2600)))+(((cj12)*(x2610)))+(((cj12)*(x2611)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2598)*(x2599)))+(((sj12)*(x2609)))+(((IkReal(-1.00000000000000))*(x2597)*(x2598)))+(((IkReal(-1.00000000000000))*(x2602)*(x2605)))+(((IkReal(-1.00000000000000))*(x2605)*(x2608)))+(((IkReal(-1.00000000000000))*(x2601)*(x2612))));
evalcond[4]=((((x2607)*(x2608)))+(((sj13)*(x2606)))+(((x2602)*(x2607)))+(((sj13)*(x2595)))+(((IkReal(-1.00000000000000))*(sj14)*(x2594)*(x2599)))+(((IkReal(-1.00000000000000))*(sj14)*(x2594)*(x2597)))+(x2611)+(x2610));
evalcond[5]=((((x2603)*(x2608)))+(((IkReal(-1.00000000000000))*(x2594)*(x2595)))+(((x2602)*(x2603)))+(((IkReal(-1.00000000000000))*(sj14)*(x2596)*(x2597)))+(((IkReal(-1.00000000000000))*(sj14)*(x2596)*(x2599)))+(((IkReal(-1.00000000000000))*(cj12)*(x2609)))+(((cj12)*(x2612)))+(((IkReal(-1.00000000000000))*(x2594)*(x2606))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2613=((IkReal(4.00000000000000))*(sj14));
IkReal x2614=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2613)))+(((IkReal(-1.00000000000000))*(npy)*(x2614))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2613)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2614))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2613)))+(((IkReal(-1.00000000000000))*(npy)*(x2614)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2613)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2614)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2613)))+(((IkReal(-1.00000000000000))*(npy)*(x2614)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2613)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2614)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2615=IKsin(j11);
IkReal x2616=((IkReal(1.00000000000000))*(sj13));
IkReal x2617=((cj14)*(npx));
IkReal x2618=((npy)*(sj14));
IkReal x2619=((IkReal(0.250000000000000))*(x2615));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj12)))+(((sj12)*(x2619)))+(((cj14)*(npy)))+(((IkReal(-0.0300000000000000))*(sj12)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2616)))+(((IkReal(-1.00000000000000))*(cj13)*(x2617)))+(((cj13)*(x2618))));
evalcond[2]=((((sj13)*(x2618)))+(((IkReal(0.0950000000000000))*(sj12)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2616)*(x2617)))+(((IkReal(-1.00000000000000))*(cj12)*(x2619))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2620=((r00)*(sj9));
IkReal x2621=((IkReal(1.00000000000000))*(sj13));
IkReal x2622=((cj13)*(sj14));
IkReal x2623=((cj9)*(sj14));
IkReal x2624=((cj13)*(r02));
IkReal x2625=((sj13)*(sj14));
IkReal x2626=((r01)*(sj9));
IkReal x2627=((cj9)*(sj13));
IkReal x2628=((IkReal(1.00000000000000))*(cj9));
IkReal x2629=((cj14)*(r10));
IkReal x2630=((cj14)*(npx));
IkReal x2631=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2621)))+(((IkReal(-1.00000000000000))*(x2630)*(x2631)))+(((npy)*(x2622))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2628)))+(((IkReal(-1.00000000000000))*(r10)*(x2623)))+(((cj14)*(x2626)))+(((sj14)*(x2620))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2621)))+(((r21)*(x2625)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2621)*(x2630)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x2625))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2621)))+(((cj13)*(cj9)*(x2629)))+(((IkReal(-1.00000000000000))*(r11)*(x2622)*(x2628)))+(((IkReal(-1.00000000000000))*(cj14)*(x2620)*(x2631)))+(((x2622)*(x2626)))+(((r12)*(x2627))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x2624)))+(((x2627)*(x2629)))+(((IkReal(-1.00000000000000))*(cj14)*(x2620)*(x2621)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2628)))+(((IkReal(-1.00000000000000))*(r11)*(x2621)*(x2623)))+(((x2625)*(x2626))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2621)))+(((IkReal(-1.00000000000000))*(x2624)*(x2628)))+(((sj13)*(sj9)*(x2629)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2631)))+(((IkReal(-1.00000000000000))*(r01)*(x2621)*(x2623)))+(((cj14)*(r00)*(x2627))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2632=((IkReal(1.00000000000000))*(cj11));
IkReal x2633=((sj11)*(sj14));
IkReal x2634=((r10)*(sj9));
IkReal x2635=((cj9)*(r00));
IkReal x2636=((cj14)*(sj11));
IkReal x2637=((r11)*(sj9));
IkReal x2638=((cj14)*(cj9)*(r01));
if( IKabs(((gconst49)*(((((cj9)*(r01)*(x2636)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(r20)*(sj14)))+(((x2633)*(x2635)))+(((x2633)*(x2634)))+(((x2636)*(x2637))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(sj14)*(x2632)*(x2634)))+(((IkReal(-1.00000000000000))*(sj14)*(x2632)*(x2635)))+(((r21)*(x2636)))+(((IkReal(-1.00000000000000))*(x2632)*(x2638)))+(((r20)*(x2633)))+(((IkReal(-1.00000000000000))*(cj14)*(x2632)*(x2637))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj9)*(r01)*(x2636)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(r20)*(sj14)))+(((x2633)*(x2635)))+(((x2633)*(x2634)))+(((x2636)*(x2637)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(sj14)*(x2632)*(x2634)))+(((IkReal(-1.00000000000000))*(sj14)*(x2632)*(x2635)))+(((r21)*(x2636)))+(((IkReal(-1.00000000000000))*(x2632)*(x2638)))+(((r20)*(x2633)))+(((IkReal(-1.00000000000000))*(cj14)*(x2632)*(x2637)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2639=IKsin(j10);
IkReal x2640=IKcos(j10);
IkReal x2641=((cj13)*(sj14));
IkReal x2642=((cj13)*(cj14));
IkReal x2643=((r10)*(sj9));
IkReal x2644=((IkReal(1.00000000000000))*(cj9));
IkReal x2645=((sj11)*(x2639));
IkReal x2646=((IkReal(1.00000000000000))*(x2640));
IkReal x2647=((cj11)*(x2639));
IkReal x2648=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2649=((cj11)*(x2646));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2646)))+(((IkReal(-1.00000000000000))*(x2647))));
evalcond[1]=((((r21)*(x2641)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2649)))+(((IkReal(-1.00000000000000))*(r20)*(x2642)))+(x2645));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x2648)))+(((IkReal(-1.00000000000000))*(sj14)*(x2643)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2644)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2644)))+(((IkReal(-1.00000000000000))*(x2649)))+(x2645));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2641)*(x2644)))+(((cj9)*(r00)*(x2642)))+(((cj9)*(r02)*(sj13)))+(((sj11)*(x2640)))+(((IkReal(-1.00000000000000))*(x2641)*(x2648)))+(((x2642)*(x2643)))+(((r12)*(sj13)*(sj9)))+(x2647));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2650=((cj11)*(r20));
IkReal x2651=((IkReal(1.00000000000000))*(cj13));
IkReal x2652=((r21)*(sj14));
IkReal x2653=((r22)*(sj13));
IkReal x2654=((r20)*(sj11));
IkReal x2655=((cj14)*(r21));
if( IKabs(((gconst48)*(((((sj14)*(x2650)))+(((IkReal(-1.00000000000000))*(sj11)*(x2651)*(x2652)))+(((cj13)*(cj14)*(x2654)))+(((sj11)*(x2653)))+(((cj11)*(x2655))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj14)*(x2654)))+(((sj11)*(x2655)))+(((IkReal(-1.00000000000000))*(cj14)*(x2650)*(x2651)))+(((IkReal(-1.00000000000000))*(cj11)*(x2653)))+(((cj11)*(cj13)*(x2652))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((sj14)*(x2650)))+(((IkReal(-1.00000000000000))*(sj11)*(x2651)*(x2652)))+(((cj13)*(cj14)*(x2654)))+(((sj11)*(x2653)))+(((cj11)*(x2655)))))), ((gconst48)*(((((sj14)*(x2654)))+(((sj11)*(x2655)))+(((IkReal(-1.00000000000000))*(cj14)*(x2650)*(x2651)))+(((IkReal(-1.00000000000000))*(cj11)*(x2653)))+(((cj11)*(cj13)*(x2652)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2656=IKsin(j10);
IkReal x2657=IKcos(j10);
IkReal x2658=((cj13)*(sj14));
IkReal x2659=((cj13)*(cj14));
IkReal x2660=((r10)*(sj9));
IkReal x2661=((IkReal(1.00000000000000))*(cj9));
IkReal x2662=((sj11)*(x2656));
IkReal x2663=((IkReal(1.00000000000000))*(x2657));
IkReal x2664=((cj11)*(x2656));
IkReal x2665=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2666=((cj11)*(x2663));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2664)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2663))));
evalcond[1]=((((r21)*(x2658)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2666)))+(((IkReal(-1.00000000000000))*(r20)*(x2659)))+(x2662));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x2665)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2661)))+(((IkReal(-1.00000000000000))*(x2666)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2661)))+(x2662)+(((IkReal(-1.00000000000000))*(sj14)*(x2660))));
evalcond[3]=((((x2659)*(x2660)))+(((cj9)*(r00)*(x2659)))+(((sj11)*(x2657)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2658)*(x2665)))+(((IkReal(-1.00000000000000))*(r01)*(x2658)*(x2661)))+(((r12)*(sj13)*(sj9)))+(x2664));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2667=((r00)*(sj9));
IkReal x2668=((IkReal(1.00000000000000))*(sj13));
IkReal x2669=((cj13)*(sj14));
IkReal x2670=((cj9)*(sj14));
IkReal x2671=((cj13)*(r02));
IkReal x2672=((sj13)*(sj14));
IkReal x2673=((r01)*(sj9));
IkReal x2674=((cj9)*(sj13));
IkReal x2675=((IkReal(1.00000000000000))*(cj9));
IkReal x2676=((cj14)*(r10));
IkReal x2677=((cj14)*(npx));
IkReal x2678=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x2669)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x2677)*(x2678)))+(((IkReal(-1.00000000000000))*(npz)*(x2668))));
evalcond[3]=((((sj14)*(x2667)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2675)))+(((IkReal(-1.00000000000000))*(r10)*(x2670)))+(((cj14)*(x2673))));
evalcond[4]=((((r21)*(x2672)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2668)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((npy)*(x2672)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2668)*(x2677))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2668)))+(((r12)*(x2674)))+(((IkReal(-1.00000000000000))*(cj14)*(x2667)*(x2678)))+(((IkReal(-1.00000000000000))*(r11)*(x2669)*(x2675)))+(((cj13)*(cj9)*(x2676)))+(((x2669)*(x2673))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x2672)*(x2673)))+(((IkReal(-1.00000000000000))*(cj14)*(x2667)*(x2668)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2675)))+(((sj9)*(x2671)))+(((IkReal(-1.00000000000000))*(r11)*(x2668)*(x2670)))+(((x2674)*(x2676))));
evalcond[8]=((((sj13)*(sj9)*(x2676)))+(((IkReal(-1.00000000000000))*(r01)*(x2668)*(x2670)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2678)))+(((IkReal(-1.00000000000000))*(x2671)*(x2675)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2668)))+(((cj14)*(r00)*(x2674))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2679=((IkReal(1.00000000000000))*(sj11));
IkReal x2680=((cj14)*(r21));
IkReal x2681=((IkReal(1.00000000000000))*(cj11));
IkReal x2682=((r20)*(sj14));
IkReal x2683=((cj9)*(r00)*(sj14));
IkReal x2684=((cj14)*(r11)*(sj9));
IkReal x2685=((cj14)*(cj9)*(r01));
IkReal x2686=((r10)*(sj14)*(sj9));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2680)*(x2681)))+(((IkReal(-1.00000000000000))*(x2679)*(x2683)))+(((IkReal(-1.00000000000000))*(x2679)*(x2686)))+(((IkReal(-1.00000000000000))*(x2679)*(x2685)))+(((IkReal(-1.00000000000000))*(x2679)*(x2684)))+(((IkReal(-1.00000000000000))*(x2681)*(x2682))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2679)*(x2682)))+(((IkReal(-1.00000000000000))*(x2679)*(x2680)))+(((cj11)*(x2683)))+(((cj11)*(x2684)))+(((cj11)*(x2685)))+(((cj11)*(x2686))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2680)*(x2681)))+(((IkReal(-1.00000000000000))*(x2679)*(x2683)))+(((IkReal(-1.00000000000000))*(x2679)*(x2686)))+(((IkReal(-1.00000000000000))*(x2679)*(x2685)))+(((IkReal(-1.00000000000000))*(x2679)*(x2684)))+(((IkReal(-1.00000000000000))*(x2681)*(x2682)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(x2679)*(x2682)))+(((IkReal(-1.00000000000000))*(x2679)*(x2680)))+(((cj11)*(x2683)))+(((cj11)*(x2684)))+(((cj11)*(x2685)))+(((cj11)*(x2686)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2687=IKsin(j10);
IkReal x2688=IKcos(j10);
IkReal x2689=((cj14)*(sj9));
IkReal x2690=((IkReal(1.00000000000000))*(r11));
IkReal x2691=((cj13)*(sj14));
IkReal x2692=((IkReal(1.00000000000000))*(cj9));
IkReal x2693=((cj13)*(cj14));
IkReal x2694=((cj11)*(x2687));
IkReal x2695=((sj11)*(x2688));
IkReal x2696=((cj11)*(x2688));
IkReal x2697=((sj11)*(x2687));
IkReal x2698=((x2695)+(x2694));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x2698));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2693)))+(((r21)*(x2691)))+(((IkReal(-1.00000000000000))*(x2696)))+(x2697));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2692)))+(((IkReal(-1.00000000000000))*(x2689)*(x2690)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2692)))+(((IkReal(-1.00000000000000))*(x2697)))+(x2696));
evalcond[3]=((((cj9)*(r00)*(x2693)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x2689)))+(((IkReal(-1.00000000000000))*(sj9)*(x2690)*(x2691)))+(((IkReal(-1.00000000000000))*(r01)*(x2691)*(x2692)))+(((r12)*(sj13)*(sj9)))+(x2698));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2699=((cj13)*(sj11));
IkReal x2700=((r21)*(sj14));
IkReal x2701=((cj14)*(r20));
IkReal x2702=((cj11)*(cj13));
IkReal x2703=((r22)*(sj13));
IkReal x2704=((r20)*(sj14));
IkReal x2705=((cj14)*(r21));
if( IKabs(((gconst50)*(((((x2699)*(x2700)))+(((IkReal(-1.00000000000000))*(sj11)*(x2703)))+(((IkReal(-1.00000000000000))*(x2699)*(x2701)))+(((cj11)*(x2705)))+(((cj11)*(x2704))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x2700)*(x2702)))+(((sj11)*(x2704)))+(((sj11)*(x2705)))+(((x2701)*(x2702)))+(((cj11)*(x2703))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((x2699)*(x2700)))+(((IkReal(-1.00000000000000))*(sj11)*(x2703)))+(((IkReal(-1.00000000000000))*(x2699)*(x2701)))+(((cj11)*(x2705)))+(((cj11)*(x2704)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x2700)*(x2702)))+(((sj11)*(x2704)))+(((sj11)*(x2705)))+(((x2701)*(x2702)))+(((cj11)*(x2703)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2706=IKsin(j10);
IkReal x2707=IKcos(j10);
IkReal x2708=((cj14)*(sj9));
IkReal x2709=((IkReal(1.00000000000000))*(r11));
IkReal x2710=((cj13)*(sj14));
IkReal x2711=((IkReal(1.00000000000000))*(cj9));
IkReal x2712=((cj13)*(cj14));
IkReal x2713=((cj11)*(x2706));
IkReal x2714=((sj11)*(x2707));
IkReal x2715=((cj11)*(x2707));
IkReal x2716=((sj11)*(x2706));
IkReal x2717=((x2713)+(x2714));
evalcond[0]=((x2717)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((x2716)+(((IkReal(-1.00000000000000))*(x2715)))+(((IkReal(-1.00000000000000))*(r20)*(x2712)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2710))));
evalcond[2]=((x2715)+(((IkReal(-1.00000000000000))*(x2716)))+(((IkReal(-1.00000000000000))*(x2708)*(x2709)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2711)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2711))));
evalcond[3]=((x2717)+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2712)))+(((IkReal(-1.00000000000000))*(sj9)*(x2709)*(x2710)))+(((IkReal(-1.00000000000000))*(r01)*(x2710)*(x2711)))+(((cj13)*(r10)*(x2708)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2718=((cj9)*(r10));
IkReal x2719=((cj13)*(cj14));
IkReal x2720=((sj14)*(sj9));
IkReal x2721=((IkReal(1.00000000000000))*(sj14));
IkReal x2722=((cj9)*(sj13));
IkReal x2723=((r02)*(sj9));
IkReal x2724=((cj13)*(cj9));
IkReal x2725=((cj14)*(r01));
IkReal x2726=((IkReal(1.00000000000000))*(npx));
IkReal x2727=((cj14)*(sj13));
IkReal x2728=((IkReal(1.00000000000000))*(cj9));
IkReal x2729=((npy)*(sj14));
IkReal x2730=((IkReal(1.00000000000000))*(sj13));
IkReal x2731=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2719)*(x2726)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2730)))+(((cj13)*(x2729))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2718)*(x2721)))+(((sj9)*(x2725)))+(((r00)*(x2720)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2728))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x2726)*(x2727)))+(((sj13)*(x2729)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2725)*(x2728)))+(((IkReal(-1.00000000000000))*(r11)*(x2731)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2721)))+(((IkReal(-1.00000000000000))*(r10)*(x2720))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r11)*(x2721)*(x2724)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2719)))+(((IkReal(-1.00000000000000))*(x2723)*(x2730)))+(((x2718)*(x2719)))+(((r12)*(x2722)))+(((cj13)*(r01)*(x2720))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r11)*(x2721)*(x2722)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2727)))+(((IkReal(-1.00000000000000))*(r12)*(x2724)))+(((r01)*(sj13)*(x2720)))+(((x2718)*(x2727)))+(((cj13)*(x2723))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2732=((cj13)*(sj14));
IkReal x2733=((IkReal(1.00000000000000))*(cj11));
IkReal x2734=((r11)*(sj9));
IkReal x2735=((IkReal(1.00000000000000))*(sj11));
IkReal x2736=((cj13)*(cj14));
IkReal x2737=((cj11)*(sj13));
IkReal x2738=((r12)*(sj9));
IkReal x2739=((sj11)*(sj13));
IkReal x2740=((cj9)*(r02));
IkReal x2741=((cj9)*(r01));
IkReal x2742=((r10)*(sj9));
IkReal x2743=((cj9)*(r00));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x2732)*(x2733)*(x2741)))+(((cj11)*(x2736)*(x2743)))+(((cj11)*(x2736)*(x2742)))+(((IkReal(-1.00000000000000))*(r20)*(x2735)*(x2736)))+(((IkReal(-1.00000000000000))*(x2732)*(x2733)*(x2734)))+(((r21)*(sj11)*(x2732)))+(((x2737)*(x2738)))+(((x2737)*(x2740)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2735))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((cj11)*(r20)*(x2736)))+(((r22)*(x2737)))+(((x2739)*(x2740)))+(((IkReal(-1.00000000000000))*(x2732)*(x2735)*(x2741)))+(((IkReal(-1.00000000000000))*(r21)*(x2732)*(x2733)))+(((sj11)*(x2736)*(x2743)))+(((sj11)*(x2736)*(x2742)))+(((x2738)*(x2739)))+(((IkReal(-1.00000000000000))*(x2732)*(x2734)*(x2735))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(x2732)*(x2733)*(x2741)))+(((cj11)*(x2736)*(x2743)))+(((cj11)*(x2736)*(x2742)))+(((IkReal(-1.00000000000000))*(r20)*(x2735)*(x2736)))+(((IkReal(-1.00000000000000))*(x2732)*(x2733)*(x2734)))+(((r21)*(sj11)*(x2732)))+(((x2737)*(x2738)))+(((x2737)*(x2740)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2735)))))), ((gconst53)*(((((cj11)*(r20)*(x2736)))+(((r22)*(x2737)))+(((x2739)*(x2740)))+(((IkReal(-1.00000000000000))*(x2732)*(x2735)*(x2741)))+(((IkReal(-1.00000000000000))*(r21)*(x2732)*(x2733)))+(((sj11)*(x2736)*(x2743)))+(((sj11)*(x2736)*(x2742)))+(((x2738)*(x2739)))+(((IkReal(-1.00000000000000))*(x2732)*(x2734)*(x2735)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2744=IKsin(j10);
IkReal x2745=IKcos(j10);
IkReal x2746=((IkReal(1.00000000000000))*(sj13));
IkReal x2747=((r11)*(sj9));
IkReal x2748=((cj9)*(r01));
IkReal x2749=((r21)*(sj14));
IkReal x2750=((cj9)*(r02));
IkReal x2751=((sj13)*(sj9));
IkReal x2752=((cj14)*(r10));
IkReal x2753=((IkReal(1.00000000000000))*(cj13));
IkReal x2754=((cj14)*(r20));
IkReal x2755=((cj11)*(x2744));
IkReal x2756=((sj11)*(x2745));
IkReal x2757=((sj14)*(x2753));
IkReal x2758=((sj11)*(x2744));
IkReal x2759=((cj11)*(x2745));
IkReal x2760=((cj14)*(cj9)*(r00));
IkReal x2761=((x2756)+(x2755));
evalcond[0]=((x2758)+(((IkReal(-1.00000000000000))*(x2753)*(x2754)))+(((IkReal(-1.00000000000000))*(x2759)))+(((cj13)*(x2749)))+(((IkReal(-1.00000000000000))*(r22)*(x2746))));
evalcond[1]=((x2761)+(((sj13)*(x2749)))+(((IkReal(-1.00000000000000))*(x2746)*(x2754)))+(((cj13)*(r22))));
evalcond[2]=((x2761)+(((r12)*(x2751)))+(((sj13)*(x2750)))+(((IkReal(-1.00000000000000))*(x2748)*(x2757)))+(((cj13)*(sj9)*(x2752)))+(((cj13)*(x2760)))+(((IkReal(-1.00000000000000))*(x2747)*(x2757))));
evalcond[3]=((x2759)+(((IkReal(-1.00000000000000))*(sj14)*(x2746)*(x2747)))+(((IkReal(-1.00000000000000))*(sj14)*(x2746)*(x2748)))+(((sj13)*(x2760)))+(((IkReal(-1.00000000000000))*(x2750)*(x2753)))+(((IkReal(-1.00000000000000))*(x2758)))+(((x2751)*(x2752)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2753))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2762=((cj13)*(sj11));
IkReal x2763=((r21)*(sj14));
IkReal x2764=((cj11)*(cj13));
IkReal x2765=((cj11)*(sj13));
IkReal x2766=((sj11)*(sj13));
IkReal x2767=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2766)))+(((x2762)*(x2763)))+(((IkReal(-1.00000000000000))*(x2762)*(x2767)))+(((r22)*(x2764)))+(((x2763)*(x2765)))+(((IkReal(-1.00000000000000))*(x2765)*(x2767))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2763)*(x2764)))+(((cj14)*(r20)*(x2764)))+(((r22)*(x2762)))+(((r22)*(x2765)))+(((IkReal(-1.00000000000000))*(x2766)*(x2767)))+(((x2763)*(x2766))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2766)))+(((x2762)*(x2763)))+(((IkReal(-1.00000000000000))*(x2762)*(x2767)))+(((r22)*(x2764)))+(((x2763)*(x2765)))+(((IkReal(-1.00000000000000))*(x2765)*(x2767)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x2763)*(x2764)))+(((cj14)*(r20)*(x2764)))+(((r22)*(x2762)))+(((r22)*(x2765)))+(((IkReal(-1.00000000000000))*(x2766)*(x2767)))+(((x2763)*(x2766)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2768=IKsin(j10);
IkReal x2769=IKcos(j10);
IkReal x2770=((IkReal(1.00000000000000))*(sj13));
IkReal x2771=((r11)*(sj9));
IkReal x2772=((cj9)*(r01));
IkReal x2773=((r21)*(sj14));
IkReal x2774=((cj9)*(r02));
IkReal x2775=((sj13)*(sj9));
IkReal x2776=((cj14)*(r10));
IkReal x2777=((IkReal(1.00000000000000))*(cj13));
IkReal x2778=((cj14)*(r20));
IkReal x2779=((cj11)*(x2768));
IkReal x2780=((sj11)*(x2769));
IkReal x2781=((sj14)*(x2777));
IkReal x2782=((sj11)*(x2768));
IkReal x2783=((cj11)*(x2769));
IkReal x2784=((cj14)*(cj9)*(r00));
IkReal x2785=((x2779)+(x2780));
evalcond[0]=((x2782)+(((IkReal(-1.00000000000000))*(x2777)*(x2778)))+(((cj13)*(x2773)))+(((IkReal(-1.00000000000000))*(x2783)))+(((IkReal(-1.00000000000000))*(r22)*(x2770))));
evalcond[1]=((x2785)+(((IkReal(-1.00000000000000))*(x2770)*(x2778)))+(((sj13)*(x2773)))+(((cj13)*(r22))));
evalcond[2]=((x2785)+(((cj13)*(x2784)))+(((sj13)*(x2774)))+(((cj13)*(sj9)*(x2776)))+(((IkReal(-1.00000000000000))*(x2772)*(x2781)))+(((IkReal(-1.00000000000000))*(x2771)*(x2781)))+(((r12)*(x2775))));
evalcond[3]=((x2783)+(((IkReal(-1.00000000000000))*(sj14)*(x2770)*(x2771)))+(((IkReal(-1.00000000000000))*(sj14)*(x2770)*(x2772)))+(((x2775)*(x2776)))+(((IkReal(-1.00000000000000))*(x2782)))+(((IkReal(-1.00000000000000))*(x2774)*(x2777)))+(((sj13)*(x2784)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2777))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2786=((cj9)*(r10));
IkReal x2787=((cj13)*(cj14));
IkReal x2788=((sj14)*(sj9));
IkReal x2789=((IkReal(1.00000000000000))*(sj14));
IkReal x2790=((cj9)*(sj13));
IkReal x2791=((r02)*(sj9));
IkReal x2792=((cj13)*(cj9));
IkReal x2793=((cj14)*(r01));
IkReal x2794=((IkReal(1.00000000000000))*(npx));
IkReal x2795=((cj14)*(sj13));
IkReal x2796=((IkReal(1.00000000000000))*(cj9));
IkReal x2797=((npy)*(sj14));
IkReal x2798=((IkReal(1.00000000000000))*(sj13));
IkReal x2799=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2798)))+(((IkReal(-1.00000000000000))*(x2787)*(x2794)))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x2797)))+(((IkReal(0.250000000000000))*(cj11))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj9)*(x2793)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2796)))+(((IkReal(-1.00000000000000))*(x2786)*(x2789)))+(((r00)*(x2788))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x2797)))+(((IkReal(0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2789)))+(((IkReal(-1.00000000000000))*(r10)*(x2788)))+(((IkReal(-1.00000000000000))*(x2793)*(x2796)))+(((IkReal(-1.00000000000000))*(r11)*(x2799))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r11)*(x2789)*(x2792)))+(((IkReal(-1.00000000000000))*(x2791)*(x2798)))+(((r12)*(x2790)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2787)))+(((cj13)*(r01)*(x2788)))+(((x2786)*(x2787))));
evalcond[8]=((((x2786)*(x2795)))+(((IkReal(-1.00000000000000))*(r11)*(x2789)*(x2790)))+(((cj13)*(x2791)))+(((r01)*(sj13)*(x2788)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x2795)))+(((IkReal(-1.00000000000000))*(r12)*(x2792))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2800=((cj13)*(sj14));
IkReal x2801=((IkReal(1.00000000000000))*(cj11));
IkReal x2802=((r11)*(sj9));
IkReal x2803=((cj11)*(sj13));
IkReal x2804=((r12)*(sj9));
IkReal x2805=((r10)*(sj9));
IkReal x2806=((sj11)*(sj13));
IkReal x2807=((cj9)*(r02));
IkReal x2808=((IkReal(1.00000000000000))*(sj11));
IkReal x2809=((cj9)*(r01));
IkReal x2810=((cj9)*(r00));
IkReal x2811=((cj13)*(cj14)*(sj11));
IkReal x2812=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst55)*(((((x2810)*(x2812)))+(((IkReal(-1.00000000000000))*(r22)*(x2806)))+(((x2803)*(x2804)))+(((x2803)*(x2807)))+(((r21)*(sj11)*(x2800)))+(((x2805)*(x2812)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)*(x2809)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)*(x2802)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2808))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x2810)*(x2811)))+(((x2804)*(x2806)))+(((IkReal(-1.00000000000000))*(x2800)*(x2802)*(x2808)))+(((IkReal(-1.00000000000000))*(x2800)*(x2808)*(x2809)))+(((IkReal(-1.00000000000000))*(r21)*(x2800)*(x2801)))+(((x2805)*(x2811)))+(((r20)*(x2812)))+(((x2806)*(x2807)))+(((r22)*(x2803))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x2810)*(x2812)))+(((IkReal(-1.00000000000000))*(r22)*(x2806)))+(((x2803)*(x2804)))+(((x2803)*(x2807)))+(((r21)*(sj11)*(x2800)))+(((x2805)*(x2812)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)*(x2809)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)*(x2802)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2808)))))), ((gconst55)*(((((x2810)*(x2811)))+(((x2804)*(x2806)))+(((IkReal(-1.00000000000000))*(x2800)*(x2802)*(x2808)))+(((IkReal(-1.00000000000000))*(x2800)*(x2808)*(x2809)))+(((IkReal(-1.00000000000000))*(r21)*(x2800)*(x2801)))+(((x2805)*(x2811)))+(((r20)*(x2812)))+(((x2806)*(x2807)))+(((r22)*(x2803)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2813=IKsin(j10);
IkReal x2814=IKcos(j10);
IkReal x2815=((IkReal(1.00000000000000))*(sj13));
IkReal x2816=((r11)*(sj9));
IkReal x2817=((cj9)*(r01));
IkReal x2818=((IkReal(1.00000000000000))*(cj11));
IkReal x2819=((r21)*(sj14));
IkReal x2820=((cj9)*(r02));
IkReal x2821=((sj13)*(sj9));
IkReal x2822=((cj14)*(r10));
IkReal x2823=((IkReal(1.00000000000000))*(cj13));
IkReal x2824=((cj14)*(r20));
IkReal x2825=((sj11)*(x2813));
IkReal x2826=((sj14)*(x2823));
IkReal x2827=((sj11)*(x2814));
IkReal x2828=((cj14)*(cj9)*(r00));
IkReal x2829=((x2814)*(x2818));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2815)))+(((cj13)*(x2819)))+(((IkReal(-1.00000000000000))*(x2823)*(x2824)))+(((IkReal(-1.00000000000000))*(x2829)))+(x2825));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2813)*(x2818)))+(((IkReal(-1.00000000000000))*(x2827)))+(((cj13)*(r22)))+(((sj13)*(x2819)))+(((IkReal(-1.00000000000000))*(x2815)*(x2824))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2816)*(x2826)))+(((cj13)*(x2828)))+(((sj13)*(x2820)))+(((IkReal(-1.00000000000000))*(x2817)*(x2826)))+(((cj11)*(x2813)))+(((cj13)*(sj9)*(x2822)))+(x2827)+(((r12)*(x2821))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2820)*(x2823)))+(((x2821)*(x2822)))+(((sj13)*(x2828)))+(((IkReal(-1.00000000000000))*(sj14)*(x2815)*(x2817)))+(((IkReal(-1.00000000000000))*(sj14)*(x2815)*(x2816)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2823)))+(((IkReal(-1.00000000000000))*(x2829)))+(x2825));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2830=((r22)*(sj11));
IkReal x2831=((IkReal(1.00000000000000))*(sj11));
IkReal x2832=((IkReal(1.00000000000000))*(cj11));
IkReal x2833=((cj14)*(r20));
IkReal x2834=((cj13)*(r21)*(sj14));
IkReal x2835=((r21)*(sj13)*(sj14));
if( IKabs(((gconst54)*(((((cj13)*(sj11)*(x2833)))+(((sj13)*(x2830)))+(((cj11)*(cj13)*(r22)))+(((cj11)*(x2835)))+(((IkReal(-1.00000000000000))*(sj13)*(x2832)*(x2833)))+(((IkReal(-1.00000000000000))*(x2831)*(x2834))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2832)))+(((IkReal(-1.00000000000000))*(sj13)*(x2831)*(x2833)))+(((cj13)*(x2830)))+(((cj11)*(x2834)))+(((IkReal(-1.00000000000000))*(cj13)*(x2832)*(x2833)))+(((sj11)*(x2835))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((cj13)*(sj11)*(x2833)))+(((sj13)*(x2830)))+(((cj11)*(cj13)*(r22)))+(((cj11)*(x2835)))+(((IkReal(-1.00000000000000))*(sj13)*(x2832)*(x2833)))+(((IkReal(-1.00000000000000))*(x2831)*(x2834)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2832)))+(((IkReal(-1.00000000000000))*(sj13)*(x2831)*(x2833)))+(((cj13)*(x2830)))+(((cj11)*(x2834)))+(((IkReal(-1.00000000000000))*(cj13)*(x2832)*(x2833)))+(((sj11)*(x2835)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2836=IKsin(j10);
IkReal x2837=IKcos(j10);
IkReal x2838=((IkReal(1.00000000000000))*(sj13));
IkReal x2839=((r11)*(sj9));
IkReal x2840=((cj9)*(r01));
IkReal x2841=((IkReal(1.00000000000000))*(cj11));
IkReal x2842=((r21)*(sj14));
IkReal x2843=((cj9)*(r02));
IkReal x2844=((sj13)*(sj9));
IkReal x2845=((cj14)*(r10));
IkReal x2846=((IkReal(1.00000000000000))*(cj13));
IkReal x2847=((cj14)*(r20));
IkReal x2848=((sj11)*(x2836));
IkReal x2849=((sj14)*(x2846));
IkReal x2850=((sj11)*(x2837));
IkReal x2851=((cj14)*(cj9)*(r00));
IkReal x2852=((x2837)*(x2841));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2846)*(x2847)))+(((cj13)*(x2842)))+(((IkReal(-1.00000000000000))*(r22)*(x2838)))+(x2848)+(((IkReal(-1.00000000000000))*(x2852))));
evalcond[1]=((((sj13)*(x2842)))+(((IkReal(-1.00000000000000))*(x2836)*(x2841)))+(((IkReal(-1.00000000000000))*(x2838)*(x2847)))+(((IkReal(-1.00000000000000))*(x2850)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x2851)))+(((IkReal(-1.00000000000000))*(x2840)*(x2849)))+(((sj13)*(x2843)))+(((r12)*(x2844)))+(((IkReal(-1.00000000000000))*(x2839)*(x2849)))+(((cj11)*(x2836)))+(x2850)+(((cj13)*(sj9)*(x2845))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2843)*(x2846)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2846)))+(((x2844)*(x2845)))+(((IkReal(-1.00000000000000))*(sj14)*(x2838)*(x2839)))+(((sj13)*(x2851)))+(((IkReal(-1.00000000000000))*(sj14)*(x2838)*(x2840)))+(x2848)+(((IkReal(-1.00000000000000))*(x2852))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2853=((r21)*(sj14));
IkReal x2854=((cj12)*(cj13));
IkReal x2855=((sj11)*(sj13));
IkReal x2856=((cj14)*(r20));
IkReal x2857=((IkReal(1.00000000000000))*(sj11));
IkReal x2858=((cj12)*(r22));
IkReal x2859=((IkReal(1.00000000000000))*(cj11));
IkReal x2860=((cj13)*(r22));
IkReal x2861=((sj13)*(x2859));
if( IKabs(((gconst47)*(((((x2855)*(x2858)))+(((sj11)*(x2854)*(x2856)))+(((IkReal(-1.00000000000000))*(x2853)*(x2854)*(x2857)))+(((IkReal(-1.00000000000000))*(x2853)*(x2861)))+(((IkReal(-1.00000000000000))*(x2859)*(x2860)))+(((cj11)*(sj13)*(x2856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((x2855)*(x2856)))+(((IkReal(-1.00000000000000))*(x2854)*(x2856)*(x2859)))+(((IkReal(-1.00000000000000))*(x2857)*(x2860)))+(((IkReal(-1.00000000000000))*(x2853)*(x2855)))+(((IkReal(-1.00000000000000))*(x2858)*(x2861)))+(((cj11)*(x2853)*(x2854))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((x2855)*(x2858)))+(((sj11)*(x2854)*(x2856)))+(((IkReal(-1.00000000000000))*(x2853)*(x2854)*(x2857)))+(((IkReal(-1.00000000000000))*(x2853)*(x2861)))+(((IkReal(-1.00000000000000))*(x2859)*(x2860)))+(((cj11)*(sj13)*(x2856)))))), ((gconst47)*(((((x2855)*(x2856)))+(((IkReal(-1.00000000000000))*(x2854)*(x2856)*(x2859)))+(((IkReal(-1.00000000000000))*(x2857)*(x2860)))+(((IkReal(-1.00000000000000))*(x2853)*(x2855)))+(((IkReal(-1.00000000000000))*(x2858)*(x2861)))+(((cj11)*(x2853)*(x2854)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2862=IKsin(j10);
IkReal x2863=IKcos(j10);
IkReal x2864=((IkReal(1.00000000000000))*(cj13));
IkReal x2865=((cj9)*(r02));
IkReal x2866=((IkReal(1.00000000000000))*(sj13));
IkReal x2867=((r11)*(sj9));
IkReal x2868=((IkReal(1.00000000000000))*(cj14));
IkReal x2869=((cj9)*(r01));
IkReal x2870=((r21)*(sj14));
IkReal x2871=((IkReal(1.00000000000000))*(sj12));
IkReal x2872=((r10)*(sj9));
IkReal x2873=((cj14)*(sj13));
IkReal x2874=((cj14)*(r20));
IkReal x2875=((IkReal(1.00000000000000))*(sj14));
IkReal x2876=((r12)*(sj9));
IkReal x2877=((cj13)*(cj14));
IkReal x2878=((cj9)*(r00));
IkReal x2879=((sj11)*(x2862));
IkReal x2880=((cj11)*(x2862));
IkReal x2881=((sj11)*(x2863));
IkReal x2882=((cj11)*(x2863));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2871)*(x2880)))+(((IkReal(-1.00000000000000))*(x2871)*(x2881)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2866)))+(((IkReal(-1.00000000000000))*(x2864)*(x2874)))+(((IkReal(-1.00000000000000))*(x2882)))+(((cj13)*(x2870)))+(x2879));
evalcond[2]=((((cj12)*(x2881)))+(((cj12)*(x2880)))+(((sj13)*(x2870)))+(((IkReal(-1.00000000000000))*(x2866)*(x2874)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2871)*(x2882)))+(((IkReal(-1.00000000000000))*(x2872)*(x2875)))+(((IkReal(-1.00000000000000))*(x2867)*(x2868)))+(((IkReal(-1.00000000000000))*(x2868)*(x2869)))+(((IkReal(-1.00000000000000))*(x2875)*(x2878)))+(((sj12)*(x2879))));
evalcond[4]=((((x2877)*(x2878)))+(((x2872)*(x2877)))+(((IkReal(-1.00000000000000))*(sj14)*(x2864)*(x2867)))+(((IkReal(-1.00000000000000))*(sj14)*(x2864)*(x2869)))+(((sj13)*(x2876)))+(x2880)+(x2881)+(((sj13)*(x2865))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2864)*(x2865)))+(((IkReal(-1.00000000000000))*(cj12)*(x2879)))+(((x2872)*(x2873)))+(((IkReal(-1.00000000000000))*(x2864)*(x2876)))+(((x2873)*(x2878)))+(((cj12)*(x2882)))+(((IkReal(-1.00000000000000))*(sj14)*(x2866)*(x2869)))+(((IkReal(-1.00000000000000))*(sj14)*(x2866)*(x2867))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2883=((cj11)*(sj12));
IkReal x2884=((r22)*(sj13));
IkReal x2885=((r20)*(sj14));
IkReal x2886=((cj14)*(sj11));
IkReal x2887=((cj13)*(r20));
IkReal x2888=((sj11)*(sj12));
IkReal x2889=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((x2884)*(x2888)))+(((cj11)*(x2885)))+(((cj11)*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2888)*(x2889)))+(((sj12)*(x2886)*(x2887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2883)*(x2887)))+(((r21)*(x2886)))+(((sj11)*(x2885)))+(((IkReal(-1.00000000000000))*(x2883)*(x2884)))+(((x2883)*(x2889))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((x2884)*(x2888)))+(((cj11)*(x2885)))+(((cj11)*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2888)*(x2889)))+(((sj12)*(x2886)*(x2887)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2883)*(x2887)))+(((r21)*(x2886)))+(((sj11)*(x2885)))+(((IkReal(-1.00000000000000))*(x2883)*(x2884)))+(((x2883)*(x2889)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2890=IKsin(j10);
IkReal x2891=IKcos(j10);
IkReal x2892=((IkReal(1.00000000000000))*(cj13));
IkReal x2893=((cj9)*(r02));
IkReal x2894=((IkReal(1.00000000000000))*(sj13));
IkReal x2895=((r11)*(sj9));
IkReal x2896=((IkReal(1.00000000000000))*(cj14));
IkReal x2897=((cj9)*(r01));
IkReal x2898=((r21)*(sj14));
IkReal x2899=((IkReal(1.00000000000000))*(sj12));
IkReal x2900=((r10)*(sj9));
IkReal x2901=((cj14)*(sj13));
IkReal x2902=((cj14)*(r20));
IkReal x2903=((IkReal(1.00000000000000))*(sj14));
IkReal x2904=((r12)*(sj9));
IkReal x2905=((cj13)*(cj14));
IkReal x2906=((cj9)*(r00));
IkReal x2907=((sj11)*(x2890));
IkReal x2908=((cj11)*(x2890));
IkReal x2909=((sj11)*(x2891));
IkReal x2910=((cj11)*(x2891));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2899)*(x2908)))+(((IkReal(-1.00000000000000))*(x2899)*(x2909))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2894)))+(((IkReal(-1.00000000000000))*(x2892)*(x2902)))+(((IkReal(-1.00000000000000))*(x2910)))+(((cj13)*(x2898)))+(x2907));
evalcond[2]=((((sj13)*(x2898)))+(((cj12)*(x2908)))+(((cj12)*(x2909)))+(((IkReal(-1.00000000000000))*(x2894)*(x2902)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2899)*(x2910)))+(((IkReal(-1.00000000000000))*(x2900)*(x2903)))+(((IkReal(-1.00000000000000))*(x2895)*(x2896)))+(((IkReal(-1.00000000000000))*(x2896)*(x2897)))+(((IkReal(-1.00000000000000))*(x2903)*(x2906)))+(((sj12)*(x2907))));
evalcond[4]=((((sj13)*(x2893)))+(((x2905)*(x2906)))+(((x2900)*(x2905)))+(((IkReal(-1.00000000000000))*(sj14)*(x2892)*(x2895)))+(((IkReal(-1.00000000000000))*(sj14)*(x2892)*(x2897)))+(((sj13)*(x2904)))+(x2909)+(x2908));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj12)*(x2907)))+(((x2901)*(x2906)))+(((x2900)*(x2901)))+(((IkReal(-1.00000000000000))*(x2892)*(x2893)))+(((IkReal(-1.00000000000000))*(sj14)*(x2894)*(x2895)))+(((IkReal(-1.00000000000000))*(sj14)*(x2894)*(x2897)))+(((IkReal(-1.00000000000000))*(x2892)*(x2904)))+(((cj12)*(x2910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2911=((cj12)*(sj13));
IkReal x2912=((cj12)*(cj13));
IkReal x2913=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst0)*(((((r12)*(x2911)))+(((cj14)*(r10)*(x2912)))+(((IkReal(-1.00000000000000))*(r11)*(x2912)*(x2913))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj14)*(r00)*(x2912)))+(((IkReal(-1.00000000000000))*(r01)*(x2912)*(x2913)))+(((r02)*(x2911))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst0)*(((((r12)*(x2911)))+(((cj14)*(r10)*(x2912)))+(((IkReal(-1.00000000000000))*(r11)*(x2912)*(x2913)))))), ((gconst0)*(((((cj14)*(r00)*(x2912)))+(((IkReal(-1.00000000000000))*(r01)*(x2912)*(x2913)))+(((r02)*(x2911)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2914=IKsin(j9);
IkReal x2915=IKcos(j9);
IkReal x2916=((IkReal(1.00000000000000))*(sj14));
IkReal x2917=((sj13)*(x2915));
IkReal x2918=((cj13)*(x2914));
IkReal x2919=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2920=((r01)*(x2914));
IkReal x2921=((r10)*(x2915));
IkReal x2922=((sj13)*(x2914));
IkReal x2923=((cj13)*(x2915));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2916)*(x2921)))+(cj12)+(((cj14)*(x2920)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2915)))+(((r00)*(sj14)*(x2914))));
evalcond[1]=((((r12)*(x2917)))+(((cj13)*(cj14)*(x2921)))+(((IkReal(-1.00000000000000))*(r11)*(x2916)*(x2923)))+(((r01)*(sj14)*(x2918)))+(((IkReal(-1.00000000000000))*(x2918)*(x2919)))+(((IkReal(-1.00000000000000))*(r02)*(x2922))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x2916)*(x2917)))+(((cj14)*(r10)*(x2917)))+(((IkReal(-1.00000000000000))*(x2919)*(x2922)))+(((IkReal(-1.00000000000000))*(r12)*(x2923)))+(sj12)+(((r02)*(x2918)))+(((sj13)*(sj14)*(x2920))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2924=((IkReal(1.00000000000000))*(sj13));
IkReal x2925=((cj14)*(sj9));
IkReal x2926=((cj9)*(sj14));
IkReal x2927=((cj13)*(sj9));
IkReal x2928=((sj13)*(sj14));
IkReal x2929=((cj9)*(sj13));
IkReal x2930=((IkReal(1.00000000000000))*(cj13));
IkReal x2931=((cj14)*(r10));
IkReal x2932=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((r00)*(x2932)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((r01)*(x2925)))+(((IkReal(-1.00000000000000))*(r10)*(x2926))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2924)))+(((r21)*(x2928)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2924)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x2928))));
evalcond[4]=((((cj13)*(cj9)*(x2931)))+(((IkReal(-1.00000000000000))*(r11)*(x2926)*(x2930)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2924)))+(((r01)*(sj14)*(x2927)))+(((IkReal(-1.00000000000000))*(r00)*(x2925)*(x2930)))+(((r12)*(x2929))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2929)*(x2931)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2930)))+(((IkReal(-1.00000000000000))*(r11)*(x2924)*(x2926)))+(((r01)*(sj9)*(x2928)))+(((IkReal(-1.00000000000000))*(r00)*(x2924)*(x2925)))+(((r02)*(x2927))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x2924)*(x2926)))+(((IkReal(-1.00000000000000))*(r11)*(x2924)*(x2932)))+(((r10)*(sj13)*(x2925)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2930)))+(((IkReal(-1.00000000000000))*(r12)*(x2927)))+(((cj14)*(r00)*(x2929))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2933=((IkReal(4.00000000000000))*(sj14));
IkReal x2934=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2934)))+(((IkReal(-1.00000000000000))*(npx)*(x2933))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2934)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2933)))+(((IkReal(-0.360000000000000))*(cj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2934)))+(((IkReal(-1.00000000000000))*(npx)*(x2933)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2934)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2933)))+(((IkReal(-0.360000000000000))*(cj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2934)))+(((IkReal(-1.00000000000000))*(npx)*(x2933)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2934)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2933)))+(((IkReal(-0.360000000000000))*(cj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((cj13)*(npy)*(sj14)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2935=((IkReal(1.00000000000000))*(cj11));
IkReal x2936=((r20)*(sj14));
IkReal x2937=((cj14)*(r21));
IkReal x2938=((cj14)*(cj9)*(r01));
IkReal x2939=((r10)*(sj14)*(sj9));
IkReal x2940=((cj9)*(r00)*(sj14));
IkReal x2941=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((sj11)*(x2940)))+(((sj11)*(x2941)))+(((sj11)*(x2939)))+(((sj11)*(x2938)))+(((cj11)*(x2936)))+(((cj11)*(x2937))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2935)*(x2941)))+(((IkReal(-1.00000000000000))*(x2935)*(x2940)))+(((sj11)*(x2936)))+(((sj11)*(x2937)))+(((IkReal(-1.00000000000000))*(x2935)*(x2938)))+(((IkReal(-1.00000000000000))*(x2935)*(x2939))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((sj11)*(x2940)))+(((sj11)*(x2941)))+(((sj11)*(x2939)))+(((sj11)*(x2938)))+(((cj11)*(x2936)))+(((cj11)*(x2937)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2935)*(x2941)))+(((IkReal(-1.00000000000000))*(x2935)*(x2940)))+(((sj11)*(x2936)))+(((sj11)*(x2937)))+(((IkReal(-1.00000000000000))*(x2935)*(x2938)))+(((IkReal(-1.00000000000000))*(x2935)*(x2939)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2942=IKsin(j10);
IkReal x2943=IKcos(j10);
IkReal x2944=((cj13)*(sj14));
IkReal x2945=((cj13)*(cj14));
IkReal x2946=((r10)*(sj9));
IkReal x2947=((IkReal(1.00000000000000))*(cj9));
IkReal x2948=((sj11)*(x2942));
IkReal x2949=((IkReal(1.00000000000000))*(x2943));
IkReal x2950=((cj11)*(x2942));
IkReal x2951=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2952=((cj11)*(x2949));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2950)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2949))));
evalcond[1]=((((r21)*(x2944)))+(((IkReal(-1.00000000000000))*(x2952)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2945)))+(x2948));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2952)))+(((IkReal(-1.00000000000000))*(sj14)*(x2946)))+(((IkReal(-1.00000000000000))*(cj14)*(x2951)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2947)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2947)))+(x2948));
evalcond[3]=((((sj11)*(x2943)))+(((x2945)*(x2946)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2944)*(x2951)))+(((IkReal(-1.00000000000000))*(r01)*(x2944)*(x2947)))+(((cj9)*(r00)*(x2945)))+(x2950)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2953=((r20)*(sj14));
IkReal x2954=((IkReal(1.00000000000000))*(cj13));
IkReal x2955=((cj14)*(r20));
IkReal x2956=((r21)*(sj14));
IkReal x2957=((r22)*(sj13));
IkReal x2958=((cj14)*(r21));
if( IKabs(((gconst56)*(((((sj11)*(x2957)))+(((cj13)*(sj11)*(x2955)))+(((cj11)*(x2958)))+(((cj11)*(x2953)))+(((IkReal(-1.00000000000000))*(sj11)*(x2954)*(x2956))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2957)))+(((sj11)*(x2958)))+(((sj11)*(x2953)))+(((cj11)*(cj13)*(x2956)))+(((IkReal(-1.00000000000000))*(cj11)*(x2954)*(x2955))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((sj11)*(x2957)))+(((cj13)*(sj11)*(x2955)))+(((cj11)*(x2958)))+(((cj11)*(x2953)))+(((IkReal(-1.00000000000000))*(sj11)*(x2954)*(x2956)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2957)))+(((sj11)*(x2958)))+(((sj11)*(x2953)))+(((cj11)*(cj13)*(x2956)))+(((IkReal(-1.00000000000000))*(cj11)*(x2954)*(x2955)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2959=IKsin(j10);
IkReal x2960=IKcos(j10);
IkReal x2961=((cj13)*(sj14));
IkReal x2962=((cj13)*(cj14));
IkReal x2963=((r10)*(sj9));
IkReal x2964=((IkReal(1.00000000000000))*(cj9));
IkReal x2965=((sj11)*(x2959));
IkReal x2966=((IkReal(1.00000000000000))*(x2960));
IkReal x2967=((cj11)*(x2959));
IkReal x2968=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2969=((cj11)*(x2966));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2967)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2966))));
evalcond[1]=((((r21)*(x2961)))+(((IkReal(-1.00000000000000))*(r20)*(x2962)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2969)))+(x2965));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2963)))+(((IkReal(-1.00000000000000))*(x2969)))+(((IkReal(-1.00000000000000))*(cj14)*(x2968)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2964)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2964)))+(x2965));
evalcond[3]=((((sj11)*(x2960)))+(((cj9)*(r02)*(sj13)))+(((x2962)*(x2963)))+(((IkReal(-1.00000000000000))*(x2961)*(x2968)))+(((IkReal(-1.00000000000000))*(r01)*(x2961)*(x2964)))+(x2967)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r00)*(x2962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2970=((IkReal(1.00000000000000))*(sj13));
IkReal x2971=((cj14)*(sj9));
IkReal x2972=((cj9)*(sj14));
IkReal x2973=((cj13)*(sj9));
IkReal x2974=((sj13)*(sj14));
IkReal x2975=((cj9)*(sj13));
IkReal x2976=((IkReal(1.00000000000000))*(cj13));
IkReal x2977=((cj14)*(r10));
IkReal x2978=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(x2971)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((r00)*(x2978)))+(((IkReal(-1.00000000000000))*(r10)*(x2972))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2970)))+(((cj13)*(r22)))+(((r21)*(x2974))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((npy)*(x2974)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2970)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x2972)*(x2976)))+(((cj13)*(cj9)*(x2977)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2970)))+(((r12)*(x2975)))+(((IkReal(-1.00000000000000))*(r00)*(x2971)*(x2976)))+(((r01)*(sj14)*(x2973))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r02)*(x2973)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2976)))+(((x2975)*(x2977)))+(((r01)*(sj9)*(x2974)))+(((IkReal(-1.00000000000000))*(r00)*(x2970)*(x2971)))+(((IkReal(-1.00000000000000))*(r11)*(x2970)*(x2972))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2976)))+(((r10)*(sj13)*(x2971)))+(((cj14)*(r00)*(x2975)))+(((IkReal(-1.00000000000000))*(r01)*(x2970)*(x2972)))+(((IkReal(-1.00000000000000))*(r12)*(x2973)))+(((IkReal(-1.00000000000000))*(r11)*(x2970)*(x2978))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2979=((IkReal(4.00000000000000))*(sj14));
IkReal x2980=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((npx)*(x2979)))+(((npy)*(x2980))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2979)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2980))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npx)*(x2979)))+(((npy)*(x2980)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2979)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2980)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npx)*(x2979)))+(((npy)*(x2980)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2979)))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2980)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((cj13)*(npy)*(sj14)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2981=((IkReal(1.00000000000000))*(sj11));
IkReal x2982=((cj14)*(r21));
IkReal x2983=((IkReal(1.00000000000000))*(cj11));
IkReal x2984=((r20)*(sj14));
IkReal x2985=((cj9)*(r00)*(sj14));
IkReal x2986=((cj14)*(r11)*(sj9));
IkReal x2987=((cj14)*(cj9)*(r01));
IkReal x2988=((r10)*(sj14)*(sj9));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2982)*(x2983)))+(((IkReal(-1.00000000000000))*(x2981)*(x2987)))+(((IkReal(-1.00000000000000))*(x2981)*(x2988)))+(((IkReal(-1.00000000000000))*(x2981)*(x2985)))+(((IkReal(-1.00000000000000))*(x2981)*(x2986)))+(((IkReal(-1.00000000000000))*(x2983)*(x2984))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj11)*(x2988)))+(((cj11)*(x2987)))+(((cj11)*(x2986)))+(((cj11)*(x2985)))+(((IkReal(-1.00000000000000))*(x2981)*(x2982)))+(((IkReal(-1.00000000000000))*(x2981)*(x2984))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(x2982)*(x2983)))+(((IkReal(-1.00000000000000))*(x2981)*(x2987)))+(((IkReal(-1.00000000000000))*(x2981)*(x2988)))+(((IkReal(-1.00000000000000))*(x2981)*(x2985)))+(((IkReal(-1.00000000000000))*(x2981)*(x2986)))+(((IkReal(-1.00000000000000))*(x2983)*(x2984)))))), ((gconst59)*(((((cj11)*(x2988)))+(((cj11)*(x2987)))+(((cj11)*(x2986)))+(((cj11)*(x2985)))+(((IkReal(-1.00000000000000))*(x2981)*(x2982)))+(((IkReal(-1.00000000000000))*(x2981)*(x2984)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2989=IKsin(j10);
IkReal x2990=IKcos(j10);
IkReal x2991=((cj14)*(sj9));
IkReal x2992=((IkReal(1.00000000000000))*(r11));
IkReal x2993=((cj13)*(sj14));
IkReal x2994=((IkReal(1.00000000000000))*(cj9));
IkReal x2995=((cj13)*(cj14));
IkReal x2996=((cj11)*(x2989));
IkReal x2997=((sj11)*(x2990));
IkReal x2998=((cj11)*(x2990));
IkReal x2999=((sj11)*(x2989));
IkReal x3000=((x2996)+(x2997));
evalcond[0]=((((cj14)*(r21)))+(x3000)+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2998)))+(((r21)*(x2993)))+(((IkReal(-1.00000000000000))*(r20)*(x2995)))+(x2999));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2994)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2994)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2999)))+(((IkReal(-1.00000000000000))*(x2991)*(x2992)))+(x2998));
evalcond[3]=((x3000)+(((IkReal(-1.00000000000000))*(r01)*(x2993)*(x2994)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2995)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x2992)*(x2993)))+(((cj13)*(r10)*(x2991))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3001=((cj13)*(sj11));
IkReal x3002=((r21)*(sj14));
IkReal x3003=((cj14)*(r20));
IkReal x3004=((cj11)*(cj13));
IkReal x3005=((r22)*(sj13));
IkReal x3006=((r20)*(sj14));
IkReal x3007=((cj14)*(r21));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(sj11)*(x3005)))+(((cj11)*(x3007)))+(((cj11)*(x3006)))+(((IkReal(-1.00000000000000))*(x3001)*(x3003)))+(((x3001)*(x3002))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((sj11)*(x3006)))+(((sj11)*(x3007)))+(((IkReal(-1.00000000000000))*(x3002)*(x3004)))+(((cj11)*(x3005)))+(((x3003)*(x3004))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(sj11)*(x3005)))+(((cj11)*(x3007)))+(((cj11)*(x3006)))+(((IkReal(-1.00000000000000))*(x3001)*(x3003)))+(((x3001)*(x3002)))))), ((gconst58)*(((((sj11)*(x3006)))+(((sj11)*(x3007)))+(((IkReal(-1.00000000000000))*(x3002)*(x3004)))+(((cj11)*(x3005)))+(((x3003)*(x3004)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3008=IKsin(j10);
IkReal x3009=IKcos(j10);
IkReal x3010=((cj14)*(sj9));
IkReal x3011=((IkReal(1.00000000000000))*(r11));
IkReal x3012=((cj13)*(sj14));
IkReal x3013=((IkReal(1.00000000000000))*(cj9));
IkReal x3014=((cj13)*(cj14));
IkReal x3015=((cj11)*(x3008));
IkReal x3016=((sj11)*(x3009));
IkReal x3017=((cj11)*(x3009));
IkReal x3018=((sj11)*(x3008));
IkReal x3019=((x3016)+(x3015));
evalcond[0]=((((cj14)*(r21)))+(x3019)+(((r20)*(sj14))));
evalcond[1]=((x3018)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3014)))+(((r21)*(x3012)))+(((IkReal(-1.00000000000000))*(x3017))));
evalcond[2]=((x3017)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3013)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3013)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3010)*(x3011)))+(((IkReal(-1.00000000000000))*(x3018))));
evalcond[3]=((((cj9)*(r00)*(x3014)))+(x3019)+(((IkReal(-1.00000000000000))*(sj9)*(x3011)*(x3012)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x3012)*(x3013)))+(((cj13)*(r10)*(x3010)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3020=((cj13)*(sj9));
IkReal x3021=((r01)*(sj14));
IkReal x3022=((cj9)*(sj13));
IkReal x3023=((sj13)*(sj9));
IkReal x3024=((cj14)*(r01));
IkReal x3025=((cj14)*(r10));
IkReal x3026=((cj13)*(cj9));
IkReal x3027=((IkReal(1.00000000000000))*(cj9));
IkReal x3028=((sj14)*(sj9));
IkReal x3029=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3030=((sj14)*(x3027));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(x3028)))+(((sj9)*(x3024)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3027)))+(((IkReal(-1.00000000000000))*(r10)*(x3030))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x3029)))+(((IkReal(-1.00000000000000))*(r00)*(x3030)))+(((IkReal(-1.00000000000000))*(x3024)*(x3027)))+(((IkReal(-1.00000000000000))*(r10)*(x3028))));
evalcond[5]=((((r12)*(x3022)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3026)))+(((x3020)*(x3021)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3020)))+(((x3025)*(x3026)))+(((IkReal(-1.00000000000000))*(r02)*(x3023))));
evalcond[6]=((((r02)*(x3020)))+(((x3021)*(x3023)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3022)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3023)))+(((IkReal(-1.00000000000000))*(r12)*(x3026)))+(((x3022)*(x3025))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3031=((IkReal(4.00000000000000))*(cj13));
IkReal x3032=((npy)*(sj14));
IkReal x3033=((cj14)*(npx));
IkReal x3034=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3033)*(x3034)))+(((x3032)*(x3034)))+(((npz)*(x3031))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3034)))+(((x3031)*(x3033)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3033)*(x3034)))+(((x3032)*(x3034)))+(((npz)*(x3031)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3034)))+(((x3031)*(x3033)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3033)*(x3034)))+(((x3032)*(x3034)))+(((npz)*(x3031)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3034)))+(((x3031)*(x3033)))+(((IkReal(-1.00000000000000))*(x3031)*(x3032)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3035=((IkReal(1.00000000000000))*(sj13));
IkReal x3036=((cj14)*(npx));
IkReal x3037=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3035)))+(((IkReal(-1.00000000000000))*(cj13)*(x3036)))+(((cj13)*(x3037))));
evalcond[1]=((IkReal(0.0300000000000000))+(((sj13)*(x3037)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(-1.00000000000000))*(x3035)*(x3036)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3038=((cj13)*(sj14));
IkReal x3039=((IkReal(1.00000000000000))*(cj11));
IkReal x3040=((r11)*(sj9));
IkReal x3041=((cj11)*(sj13));
IkReal x3042=((r12)*(sj9));
IkReal x3043=((cj9)*(r00));
IkReal x3044=((sj11)*(sj13));
IkReal x3045=((cj9)*(r02));
IkReal x3046=((cj9)*(r01));
IkReal x3047=((IkReal(1.00000000000000))*(sj11));
IkReal x3048=((r10)*(sj9));
IkReal x3049=((cj13)*(cj14)*(sj11));
IkReal x3050=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst61)*(((((x3048)*(x3050)))+(((IkReal(-1.00000000000000))*(r22)*(x3044)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)*(x3040)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)*(x3046)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3047)))+(((x3043)*(x3050)))+(((r21)*(sj11)*(x3038)))+(((x3041)*(x3042)))+(((x3041)*(x3045))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((r22)*(x3041)))+(((x3043)*(x3049)))+(((x3042)*(x3044)))+(((IkReal(-1.00000000000000))*(x3038)*(x3040)*(x3047)))+(((IkReal(-1.00000000000000))*(x3038)*(x3046)*(x3047)))+(((IkReal(-1.00000000000000))*(r21)*(x3038)*(x3039)))+(((x3048)*(x3049)))+(((x3044)*(x3045)))+(((r20)*(x3050))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((x3048)*(x3050)))+(((IkReal(-1.00000000000000))*(r22)*(x3044)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)*(x3040)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)*(x3046)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3047)))+(((x3043)*(x3050)))+(((r21)*(sj11)*(x3038)))+(((x3041)*(x3042)))+(((x3041)*(x3045)))))), ((gconst61)*(((((r22)*(x3041)))+(((x3043)*(x3049)))+(((x3042)*(x3044)))+(((IkReal(-1.00000000000000))*(x3038)*(x3040)*(x3047)))+(((IkReal(-1.00000000000000))*(x3038)*(x3046)*(x3047)))+(((IkReal(-1.00000000000000))*(r21)*(x3038)*(x3039)))+(((x3048)*(x3049)))+(((x3044)*(x3045)))+(((r20)*(x3050)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3051=IKsin(j10);
IkReal x3052=IKcos(j10);
IkReal x3053=((IkReal(1.00000000000000))*(sj13));
IkReal x3054=((r11)*(sj9));
IkReal x3055=((cj9)*(r01));
IkReal x3056=((r21)*(sj14));
IkReal x3057=((cj9)*(r02));
IkReal x3058=((sj13)*(sj9));
IkReal x3059=((cj14)*(r10));
IkReal x3060=((IkReal(1.00000000000000))*(cj13));
IkReal x3061=((cj14)*(r20));
IkReal x3062=((cj11)*(x3051));
IkReal x3063=((sj11)*(x3052));
IkReal x3064=((sj14)*(x3060));
IkReal x3065=((sj11)*(x3051));
IkReal x3066=((cj11)*(x3052));
IkReal x3067=((cj14)*(cj9)*(r00));
IkReal x3068=((x3063)+(x3062));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3066)))+(((IkReal(-1.00000000000000))*(x3060)*(x3061)))+(x3065)+(((cj13)*(x3056)))+(((IkReal(-1.00000000000000))*(r22)*(x3053))));
evalcond[1]=((((sj13)*(x3056)))+(x3068)+(((IkReal(-1.00000000000000))*(x3053)*(x3061)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x3067)))+(((sj13)*(x3057)))+(((IkReal(-1.00000000000000))*(x3054)*(x3064)))+(x3068)+(((r12)*(x3058)))+(((IkReal(-1.00000000000000))*(x3055)*(x3064)))+(((cj13)*(sj9)*(x3059))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3065)))+(x3066)+(((IkReal(-1.00000000000000))*(sj14)*(x3053)*(x3054)))+(((IkReal(-1.00000000000000))*(sj14)*(x3053)*(x3055)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3060)))+(((sj13)*(x3067)))+(((x3058)*(x3059)))+(((IkReal(-1.00000000000000))*(x3057)*(x3060))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3069=((cj13)*(sj11));
IkReal x3070=((r21)*(sj14));
IkReal x3071=((cj11)*(cj13));
IkReal x3072=((sj11)*(sj13));
IkReal x3073=((cj11)*(sj13));
IkReal x3074=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x3073)*(x3074)))+(((r22)*(x3071)))+(((IkReal(-1.00000000000000))*(x3069)*(x3074)))+(((x3070)*(x3073)))+(((x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(r22)*(x3072))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(((r22)*(x3069)))+(((r22)*(x3073)))+(((x3070)*(x3072)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((cj14)*(r20)*(x3071))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(x3073)*(x3074)))+(((r22)*(x3071)))+(((IkReal(-1.00000000000000))*(x3069)*(x3074)))+(((x3070)*(x3073)))+(((x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(r22)*(x3072)))))), ((gconst60)*(((((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(((r22)*(x3069)))+(((r22)*(x3073)))+(((x3070)*(x3072)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((cj14)*(r20)*(x3071)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3075=IKsin(j10);
IkReal x3076=IKcos(j10);
IkReal x3077=((IkReal(1.00000000000000))*(sj13));
IkReal x3078=((r11)*(sj9));
IkReal x3079=((cj9)*(r01));
IkReal x3080=((r21)*(sj14));
IkReal x3081=((cj9)*(r02));
IkReal x3082=((sj13)*(sj9));
IkReal x3083=((cj14)*(r10));
IkReal x3084=((IkReal(1.00000000000000))*(cj13));
IkReal x3085=((cj14)*(r20));
IkReal x3086=((cj11)*(x3075));
IkReal x3087=((sj11)*(x3076));
IkReal x3088=((sj14)*(x3084));
IkReal x3089=((sj11)*(x3075));
IkReal x3090=((cj11)*(x3076));
IkReal x3091=((cj14)*(cj9)*(r00));
IkReal x3092=((x3087)+(x3086));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3077)))+(x3089)+(((cj13)*(x3080)))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((IkReal(-1.00000000000000))*(x3090))));
evalcond[1]=((x3092)+(((sj13)*(x3080)))+(((IkReal(-1.00000000000000))*(x3077)*(x3085)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3079)*(x3088)))+(x3092)+(((r12)*(x3082)))+(((sj13)*(x3081)))+(((IkReal(-1.00000000000000))*(x3078)*(x3088)))+(((cj13)*(sj9)*(x3083)))+(((cj13)*(x3091))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3077)*(x3078)))+(((IkReal(-1.00000000000000))*(sj14)*(x3077)*(x3079)))+(x3090)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3084)))+(((x3082)*(x3083)))+(((IkReal(-1.00000000000000))*(x3089)))+(((sj13)*(x3091)))+(((IkReal(-1.00000000000000))*(x3081)*(x3084))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3093=((cj13)*(sj9));
IkReal x3094=((r01)*(sj14));
IkReal x3095=((cj9)*(sj13));
IkReal x3096=((sj13)*(sj9));
IkReal x3097=((cj14)*(r01));
IkReal x3098=((cj14)*(r10));
IkReal x3099=((cj13)*(cj9));
IkReal x3100=((IkReal(1.00000000000000))*(cj9));
IkReal x3101=((sj14)*(sj9));
IkReal x3102=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3103=((sj14)*(x3100));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3103)))+(((sj9)*(x3097)))+(((r00)*(x3101)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3100))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x3101)))+(((IkReal(-1.00000000000000))*(r11)*(x3102)))+(((IkReal(-1.00000000000000))*(r00)*(x3103)))+(((IkReal(-1.00000000000000))*(x3097)*(x3100))));
evalcond[5]=((((x3098)*(x3099)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3099)))+(((IkReal(-1.00000000000000))*(r02)*(x3096)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3093)))+(((x3093)*(x3094)))+(((r12)*(x3095))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3095)))+(((IkReal(-1.00000000000000))*(r12)*(x3099)))+(((r02)*(x3093)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3096)))+(((x3095)*(x3098)))+(((x3094)*(x3096))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3104=((IkReal(4.00000000000000))*(cj13));
IkReal x3105=((npy)*(sj14));
IkReal x3106=((cj14)*(npx));
IkReal x3107=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3104)))+(((IkReal(-1.00000000000000))*(x3105)*(x3107)))+(((x3106)*(x3107)))+(((IkReal(-0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3104)*(x3105)))+(((npz)*(x3107)))+(((x3104)*(x3106))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3104)))+(((IkReal(-1.00000000000000))*(x3105)*(x3107)))+(((x3106)*(x3107)))+(((IkReal(-0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3104)*(x3105)))+(((npz)*(x3107)))+(((x3104)*(x3106)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3104)))+(((IkReal(-1.00000000000000))*(x3105)*(x3107)))+(((x3106)*(x3107)))+(((IkReal(-0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3104)*(x3105)))+(((npz)*(x3107)))+(((x3104)*(x3106)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3108=((IkReal(1.00000000000000))*(sj13));
IkReal x3109=((cj14)*(npx));
IkReal x3110=((npy)*(sj14));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x3110)))+(((IkReal(-1.00000000000000))*(npz)*(x3108)))+(((IkReal(-1.00000000000000))*(cj13)*(x3109))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((sj13)*(x3110)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3108)*(x3109)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3111=((cj13)*(sj14));
IkReal x3112=((IkReal(1.00000000000000))*(cj11));
IkReal x3113=((r11)*(sj9));
IkReal x3114=((IkReal(1.00000000000000))*(sj11));
IkReal x3115=((cj13)*(cj14));
IkReal x3116=((cj11)*(sj13));
IkReal x3117=((r12)*(sj9));
IkReal x3118=((sj11)*(sj13));
IkReal x3119=((cj9)*(r02));
IkReal x3120=((cj9)*(r01));
IkReal x3121=((r10)*(sj9));
IkReal x3122=((cj9)*(r00));
if( IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r20)*(x3114)*(x3115)))+(((cj11)*(x3115)*(x3121)))+(((cj11)*(x3115)*(x3122)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3114)))+(((IkReal(-1.00000000000000))*(x3111)*(x3112)*(x3113)))+(((r21)*(sj11)*(x3111)))+(((x3116)*(x3117)))+(((x3116)*(x3119)))+(((IkReal(-1.00000000000000))*(x3111)*(x3112)*(x3120))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((cj11)*(r20)*(x3115)))+(((r22)*(x3116)))+(((x3118)*(x3119)))+(((IkReal(-1.00000000000000))*(r21)*(x3111)*(x3112)))+(((sj11)*(x3115)*(x3121)))+(((sj11)*(x3115)*(x3122)))+(((IkReal(-1.00000000000000))*(x3111)*(x3113)*(x3114)))+(((IkReal(-1.00000000000000))*(x3111)*(x3114)*(x3120)))+(((x3117)*(x3118))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((IkReal(-1.00000000000000))*(r20)*(x3114)*(x3115)))+(((cj11)*(x3115)*(x3121)))+(((cj11)*(x3115)*(x3122)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3114)))+(((IkReal(-1.00000000000000))*(x3111)*(x3112)*(x3113)))+(((r21)*(sj11)*(x3111)))+(((x3116)*(x3117)))+(((x3116)*(x3119)))+(((IkReal(-1.00000000000000))*(x3111)*(x3112)*(x3120)))))), ((gconst63)*(((((cj11)*(r20)*(x3115)))+(((r22)*(x3116)))+(((x3118)*(x3119)))+(((IkReal(-1.00000000000000))*(r21)*(x3111)*(x3112)))+(((sj11)*(x3115)*(x3121)))+(((sj11)*(x3115)*(x3122)))+(((IkReal(-1.00000000000000))*(x3111)*(x3113)*(x3114)))+(((IkReal(-1.00000000000000))*(x3111)*(x3114)*(x3120)))+(((x3117)*(x3118)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3123=IKsin(j10);
IkReal x3124=IKcos(j10);
IkReal x3125=((IkReal(1.00000000000000))*(sj13));
IkReal x3126=((r11)*(sj9));
IkReal x3127=((cj9)*(r01));
IkReal x3128=((IkReal(1.00000000000000))*(cj11));
IkReal x3129=((r21)*(sj14));
IkReal x3130=((cj9)*(r02));
IkReal x3131=((sj13)*(sj9));
IkReal x3132=((cj14)*(r10));
IkReal x3133=((IkReal(1.00000000000000))*(cj13));
IkReal x3134=((cj14)*(r20));
IkReal x3135=((sj11)*(x3123));
IkReal x3136=((sj14)*(x3133));
IkReal x3137=((sj11)*(x3124));
IkReal x3138=((cj14)*(cj9)*(r00));
IkReal x3139=((x3124)*(x3128));
evalcond[0]=((x3135)+(((cj13)*(x3129)))+(((IkReal(-1.00000000000000))*(x3133)*(x3134)))+(((IkReal(-1.00000000000000))*(r22)*(x3125)))+(((IkReal(-1.00000000000000))*(x3139))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3125)*(x3134)))+(((IkReal(-1.00000000000000))*(x3137)))+(((sj13)*(x3129)))+(((IkReal(-1.00000000000000))*(x3123)*(x3128)))+(((cj13)*(r22))));
evalcond[2]=((x3137)+(((cj13)*(x3138)))+(((cj13)*(sj9)*(x3132)))+(((sj13)*(x3130)))+(((cj11)*(x3123)))+(((r12)*(x3131)))+(((IkReal(-1.00000000000000))*(x3126)*(x3136)))+(((IkReal(-1.00000000000000))*(x3127)*(x3136))));
evalcond[3]=((x3135)+(((x3131)*(x3132)))+(((IkReal(-1.00000000000000))*(x3130)*(x3133)))+(((sj13)*(x3138)))+(((IkReal(-1.00000000000000))*(sj14)*(x3125)*(x3127)))+(((IkReal(-1.00000000000000))*(sj14)*(x3125)*(x3126)))+(((IkReal(-1.00000000000000))*(x3139)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3133))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3140=((cj13)*(r22));
IkReal x3141=((IkReal(1.00000000000000))*(sj11));
IkReal x3142=((IkReal(1.00000000000000))*(cj11));
IkReal x3143=((r22)*(sj13));
IkReal x3144=((cj14)*(r20));
IkReal x3145=((cj13)*(r21)*(sj14));
IkReal x3146=((r21)*(sj13)*(sj14));
if( IKabs(((gconst62)*(((((cj11)*(x3140)))+(((cj11)*(x3146)))+(((IkReal(-1.00000000000000))*(sj13)*(x3142)*(x3144)))+(((IkReal(-1.00000000000000))*(x3141)*(x3145)))+(((sj11)*(x3143)))+(((cj13)*(sj11)*(x3144))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(cj13)*(x3142)*(x3144)))+(((cj11)*(x3145)))+(((IkReal(-1.00000000000000))*(x3142)*(x3143)))+(((IkReal(-1.00000000000000))*(sj13)*(x3141)*(x3144)))+(((sj11)*(x3140)))+(((sj11)*(x3146))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((cj11)*(x3140)))+(((cj11)*(x3146)))+(((IkReal(-1.00000000000000))*(sj13)*(x3142)*(x3144)))+(((IkReal(-1.00000000000000))*(x3141)*(x3145)))+(((sj11)*(x3143)))+(((cj13)*(sj11)*(x3144)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(cj13)*(x3142)*(x3144)))+(((cj11)*(x3145)))+(((IkReal(-1.00000000000000))*(x3142)*(x3143)))+(((IkReal(-1.00000000000000))*(sj13)*(x3141)*(x3144)))+(((sj11)*(x3140)))+(((sj11)*(x3146)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3147=IKsin(j10);
IkReal x3148=IKcos(j10);
IkReal x3149=((IkReal(1.00000000000000))*(sj13));
IkReal x3150=((r11)*(sj9));
IkReal x3151=((cj9)*(r01));
IkReal x3152=((IkReal(1.00000000000000))*(cj11));
IkReal x3153=((r21)*(sj14));
IkReal x3154=((cj9)*(r02));
IkReal x3155=((sj13)*(sj9));
IkReal x3156=((cj14)*(r10));
IkReal x3157=((IkReal(1.00000000000000))*(cj13));
IkReal x3158=((cj14)*(r20));
IkReal x3159=((sj11)*(x3147));
IkReal x3160=((sj14)*(x3157));
IkReal x3161=((sj11)*(x3148));
IkReal x3162=((cj14)*(cj9)*(r00));
IkReal x3163=((x3148)*(x3152));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3157)*(x3158)))+(x3159)+(((IkReal(-1.00000000000000))*(r22)*(x3149)))+(((cj13)*(x3153)))+(((IkReal(-1.00000000000000))*(x3163))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3161)))+(((IkReal(-1.00000000000000))*(x3149)*(x3158)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x3147)*(x3152)))+(((sj13)*(x3153))));
evalcond[2]=((x3161)+(((IkReal(-1.00000000000000))*(x3150)*(x3160)))+(((cj11)*(x3147)))+(((r12)*(x3155)))+(((cj13)*(sj9)*(x3156)))+(((cj13)*(x3162)))+(((IkReal(-1.00000000000000))*(x3151)*(x3160)))+(((sj13)*(x3154))));
evalcond[3]=((((sj13)*(x3162)))+(x3159)+(((x3155)*(x3156)))+(((IkReal(-1.00000000000000))*(sj14)*(x3149)*(x3151)))+(((IkReal(-1.00000000000000))*(sj14)*(x3149)*(x3150)))+(((IkReal(-1.00000000000000))*(x3154)*(x3157)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3157)))+(((IkReal(-1.00000000000000))*(x3163))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3164=((IkReal(4.00000000000000))*(cj13));
IkReal x3165=((npy)*(sj14));
IkReal x3166=((IkReal(4.00000000000000))*(sj13));
IkReal x3167=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x3164)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x3166)*(x3167)))+(((x3165)*(x3166))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x3166)))+(((IkReal(-1.00000000000000))*(x3164)*(x3165)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3164)*(x3167))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x3164)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x3166)*(x3167)))+(((x3165)*(x3166)))))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x3166)))+(((IkReal(-1.00000000000000))*(x3164)*(x3165)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3164)*(x3167)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((npz)*(x3164)))+(((IkReal(0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x3166)*(x3167)))+(((x3165)*(x3166)))))), ((IkReal(-0.940000000000000))+(((npz)*(x3166)))+(((IkReal(-1.00000000000000))*(x3164)*(x3165)))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3164)*(x3167)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3168=IKsin(j11);
IkReal x3169=((IkReal(1.00000000000000))*(sj13));
IkReal x3170=((cj14)*(npx));
IkReal x3171=((npy)*(sj14));
IkReal x3172=((IkReal(0.250000000000000))*(x3168));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj12)))+(((sj12)*(x3172)))+(((cj14)*(npy)))+(((IkReal(-0.0300000000000000))*(sj12)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((cj13)*(x3171)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3169)))+(((IkReal(-1.00000000000000))*(cj13)*(x3170))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3169)*(x3170)))+(((IkReal(0.0950000000000000))*(sj12)))+(((sj13)*(x3171)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj12)*(x3172))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3173=((r00)*(sj9));
IkReal x3174=((IkReal(1.00000000000000))*(sj13));
IkReal x3175=((cj13)*(sj14));
IkReal x3176=((cj9)*(sj14));
IkReal x3177=((cj13)*(r02));
IkReal x3178=((sj13)*(sj14));
IkReal x3179=((r01)*(sj9));
IkReal x3180=((cj9)*(sj13));
IkReal x3181=((IkReal(1.00000000000000))*(cj9));
IkReal x3182=((cj14)*(r10));
IkReal x3183=((cj14)*(npx));
IkReal x3184=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3174)))+(((IkReal(-1.00000000000000))*(x3183)*(x3184)))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3175))));
evalcond[3]=((((sj14)*(x3173)))+(((IkReal(-1.00000000000000))*(r10)*(x3176)))+(((cj14)*(x3179)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3181))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3174)))+(((r21)*(x3178)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3174)*(x3183)))+(((npy)*(x3178))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x3173)*(x3184)))+(((IkReal(-1.00000000000000))*(r11)*(x3175)*(x3181)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3174)))+(((r12)*(x3180)))+(((cj13)*(cj9)*(x3182)))+(((x3175)*(x3179))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x3177)))+(((x3180)*(x3182)))+(((x3178)*(x3179)))+(((IkReal(-1.00000000000000))*(r11)*(x3174)*(x3176)))+(((IkReal(-1.00000000000000))*(cj14)*(x3173)*(x3174)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3181))));
evalcond[8]=((((cj14)*(r00)*(x3180)))+(((IkReal(-1.00000000000000))*(x3177)*(x3181)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3174)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3184)))+(((IkReal(-1.00000000000000))*(r01)*(x3174)*(x3176)))+(((sj13)*(sj9)*(x3182))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3185=((IkReal(1.00000000000000))*(cj11));
IkReal x3186=((sj11)*(sj14));
IkReal x3187=((r10)*(sj9));
IkReal x3188=((cj9)*(r00));
IkReal x3189=((cj14)*(sj11));
IkReal x3190=((r11)*(sj9));
IkReal x3191=((cj14)*(cj9)*(r01));
if( IKabs(((gconst49)*(((((cj9)*(r01)*(x3189)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(r20)*(sj14)))+(((x3186)*(x3188)))+(((x3186)*(x3187)))+(((x3189)*(x3190))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x3185)*(x3191)))+(((IkReal(-1.00000000000000))*(sj14)*(x3185)*(x3187)))+(((IkReal(-1.00000000000000))*(sj14)*(x3185)*(x3188)))+(((r20)*(x3186)))+(((IkReal(-1.00000000000000))*(cj14)*(x3185)*(x3190)))+(((r21)*(x3189))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj9)*(r01)*(x3189)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(r20)*(sj14)))+(((x3186)*(x3188)))+(((x3186)*(x3187)))+(((x3189)*(x3190)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x3185)*(x3191)))+(((IkReal(-1.00000000000000))*(sj14)*(x3185)*(x3187)))+(((IkReal(-1.00000000000000))*(sj14)*(x3185)*(x3188)))+(((r20)*(x3186)))+(((IkReal(-1.00000000000000))*(cj14)*(x3185)*(x3190)))+(((r21)*(x3189)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3192=IKsin(j10);
IkReal x3193=IKcos(j10);
IkReal x3194=((cj13)*(sj14));
IkReal x3195=((cj13)*(cj14));
IkReal x3196=((r10)*(sj9));
IkReal x3197=((IkReal(1.00000000000000))*(cj9));
IkReal x3198=((sj11)*(x3192));
IkReal x3199=((IkReal(1.00000000000000))*(x3193));
IkReal x3200=((cj11)*(x3192));
IkReal x3201=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3202=((cj11)*(x3199));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x3199)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3200))));
evalcond[1]=((x3198)+(((r21)*(x3194)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3202)))+(((IkReal(-1.00000000000000))*(r20)*(x3195))));
evalcond[2]=((x3198)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3197)))+(((IkReal(-1.00000000000000))*(sj14)*(x3196)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3197)))+(((IkReal(-1.00000000000000))*(x3202)))+(((IkReal(-1.00000000000000))*(cj14)*(x3201))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3194)*(x3201)))+(((IkReal(-1.00000000000000))*(r01)*(x3194)*(x3197)))+(((cj9)*(r02)*(sj13)))+(x3200)+(((x3195)*(x3196)))+(((sj11)*(x3193)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r00)*(x3195))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3203=((cj11)*(r20));
IkReal x3204=((IkReal(1.00000000000000))*(cj13));
IkReal x3205=((r21)*(sj14));
IkReal x3206=((r22)*(sj13));
IkReal x3207=((r20)*(sj11));
IkReal x3208=((cj14)*(r21));
if( IKabs(((gconst48)*(((((sj11)*(x3206)))+(((sj14)*(x3203)))+(((cj13)*(cj14)*(x3207)))+(((cj11)*(x3208)))+(((IkReal(-1.00000000000000))*(sj11)*(x3204)*(x3205))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj11)*(x3208)))+(((sj14)*(x3207)))+(((IkReal(-1.00000000000000))*(cj11)*(x3206)))+(((cj11)*(cj13)*(x3205)))+(((IkReal(-1.00000000000000))*(cj14)*(x3203)*(x3204))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((sj11)*(x3206)))+(((sj14)*(x3203)))+(((cj13)*(cj14)*(x3207)))+(((cj11)*(x3208)))+(((IkReal(-1.00000000000000))*(sj11)*(x3204)*(x3205)))))), ((gconst48)*(((((sj11)*(x3208)))+(((sj14)*(x3207)))+(((IkReal(-1.00000000000000))*(cj11)*(x3206)))+(((cj11)*(cj13)*(x3205)))+(((IkReal(-1.00000000000000))*(cj14)*(x3203)*(x3204)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3209=IKsin(j10);
IkReal x3210=IKcos(j10);
IkReal x3211=((cj13)*(sj14));
IkReal x3212=((cj13)*(cj14));
IkReal x3213=((r10)*(sj9));
IkReal x3214=((IkReal(1.00000000000000))*(cj9));
IkReal x3215=((sj11)*(x3209));
IkReal x3216=((IkReal(1.00000000000000))*(x3210));
IkReal x3217=((cj11)*(x3209));
IkReal x3218=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3219=((cj11)*(x3216));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3217)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3216))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3212)))+(x3215)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3219)))+(((r21)*(x3211))));
evalcond[2]=((x3215)+(((IkReal(-1.00000000000000))*(cj14)*(x3218)))+(((IkReal(-1.00000000000000))*(x3219)))+(((IkReal(-1.00000000000000))*(sj14)*(x3213)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3214)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3214))));
evalcond[3]=((((x3212)*(x3213)))+(((IkReal(-1.00000000000000))*(r01)*(x3211)*(x3214)))+(((IkReal(-1.00000000000000))*(x3211)*(x3218)))+(((sj11)*(x3210)))+(((cj9)*(r02)*(sj13)))+(x3217)+(((cj9)*(r00)*(x3212)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3220=((r00)*(sj9));
IkReal x3221=((IkReal(1.00000000000000))*(sj13));
IkReal x3222=((cj13)*(sj14));
IkReal x3223=((cj9)*(sj14));
IkReal x3224=((cj13)*(r02));
IkReal x3225=((sj13)*(sj14));
IkReal x3226=((r01)*(sj9));
IkReal x3227=((cj9)*(sj13));
IkReal x3228=((IkReal(1.00000000000000))*(cj9));
IkReal x3229=((cj14)*(r10));
IkReal x3230=((cj14)*(npx));
IkReal x3231=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x3222)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x3230)*(x3231)))+(((IkReal(-1.00000000000000))*(npz)*(x3221))));
evalcond[3]=((((cj14)*(x3226)))+(((IkReal(-1.00000000000000))*(r10)*(x3223)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3228)))+(((sj14)*(x3220))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3221)))+(((r21)*(x3225)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((npy)*(x3225)))+(((IkReal(-1.00000000000000))*(x3221)*(x3230)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((r12)*(x3227)))+(((x3222)*(x3226)))+(((cj13)*(cj9)*(x3229)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3221)))+(((IkReal(-1.00000000000000))*(cj14)*(x3220)*(x3231)))+(((IkReal(-1.00000000000000))*(r11)*(x3222)*(x3228))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(x3220)*(x3221)))+(((x3227)*(x3229)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3228)))+(((x3225)*(x3226)))+(((IkReal(-1.00000000000000))*(r11)*(x3221)*(x3223)))+(((sj9)*(x3224))));
evalcond[8]=((((sj13)*(sj9)*(x3229)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3231)))+(((cj14)*(r00)*(x3227)))+(((IkReal(-1.00000000000000))*(x3224)*(x3228)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3221)))+(((IkReal(-1.00000000000000))*(r01)*(x3221)*(x3223))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3232=((IkReal(1.00000000000000))*(sj11));
IkReal x3233=((cj14)*(r21));
IkReal x3234=((IkReal(1.00000000000000))*(cj11));
IkReal x3235=((r20)*(sj14));
IkReal x3236=((cj9)*(r00)*(sj14));
IkReal x3237=((cj14)*(r11)*(sj9));
IkReal x3238=((cj14)*(cj9)*(r01));
IkReal x3239=((r10)*(sj14)*(sj9));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3233)*(x3234)))+(((IkReal(-1.00000000000000))*(x3232)*(x3239)))+(((IkReal(-1.00000000000000))*(x3232)*(x3238)))+(((IkReal(-1.00000000000000))*(x3232)*(x3236)))+(((IkReal(-1.00000000000000))*(x3232)*(x3237)))+(((IkReal(-1.00000000000000))*(x3234)*(x3235))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj11)*(x3236)))+(((cj11)*(x3237)))+(((cj11)*(x3238)))+(((cj11)*(x3239)))+(((IkReal(-1.00000000000000))*(x3232)*(x3233)))+(((IkReal(-1.00000000000000))*(x3232)*(x3235))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x3233)*(x3234)))+(((IkReal(-1.00000000000000))*(x3232)*(x3239)))+(((IkReal(-1.00000000000000))*(x3232)*(x3238)))+(((IkReal(-1.00000000000000))*(x3232)*(x3236)))+(((IkReal(-1.00000000000000))*(x3232)*(x3237)))+(((IkReal(-1.00000000000000))*(x3234)*(x3235)))))), ((gconst51)*(((((cj11)*(x3236)))+(((cj11)*(x3237)))+(((cj11)*(x3238)))+(((cj11)*(x3239)))+(((IkReal(-1.00000000000000))*(x3232)*(x3233)))+(((IkReal(-1.00000000000000))*(x3232)*(x3235)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3240=IKsin(j10);
IkReal x3241=IKcos(j10);
IkReal x3242=((cj14)*(sj9));
IkReal x3243=((IkReal(1.00000000000000))*(r11));
IkReal x3244=((cj13)*(sj14));
IkReal x3245=((IkReal(1.00000000000000))*(cj9));
IkReal x3246=((cj13)*(cj14));
IkReal x3247=((cj11)*(x3240));
IkReal x3248=((sj11)*(x3241));
IkReal x3249=((cj11)*(x3241));
IkReal x3250=((sj11)*(x3240));
IkReal x3251=((x3248)+(x3247));
evalcond[0]=((((cj14)*(r21)))+(x3251)+(((r20)*(sj14))));
evalcond[1]=((((r21)*(x3244)))+(((IkReal(-1.00000000000000))*(x3249)))+(((IkReal(-1.00000000000000))*(r20)*(x3246)))+(x3250)+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((x3249)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3245)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3245)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3250)))+(((IkReal(-1.00000000000000))*(x3242)*(x3243))));
evalcond[3]=((((cj9)*(r00)*(x3246)))+(((cj9)*(r02)*(sj13)))+(x3251)+(((IkReal(-1.00000000000000))*(sj9)*(x3243)*(x3244)))+(((cj13)*(r10)*(x3242)))+(((IkReal(-1.00000000000000))*(r01)*(x3244)*(x3245)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3252=((cj13)*(sj11));
IkReal x3253=((r21)*(sj14));
IkReal x3254=((cj14)*(r20));
IkReal x3255=((cj11)*(cj13));
IkReal x3256=((r22)*(sj13));
IkReal x3257=((r20)*(sj14));
IkReal x3258=((cj14)*(r21));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x3252)*(x3254)))+(((cj11)*(x3258)))+(((cj11)*(x3257)))+(((x3252)*(x3253)))+(((IkReal(-1.00000000000000))*(sj11)*(x3256))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x3257)))+(((sj11)*(x3258)))+(((cj11)*(x3256)))+(((IkReal(-1.00000000000000))*(x3253)*(x3255)))+(((x3254)*(x3255))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(x3252)*(x3254)))+(((cj11)*(x3258)))+(((cj11)*(x3257)))+(((x3252)*(x3253)))+(((IkReal(-1.00000000000000))*(sj11)*(x3256)))))), ((gconst50)*(((((sj11)*(x3257)))+(((sj11)*(x3258)))+(((cj11)*(x3256)))+(((IkReal(-1.00000000000000))*(x3253)*(x3255)))+(((x3254)*(x3255)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3259=IKsin(j10);
IkReal x3260=IKcos(j10);
IkReal x3261=((cj14)*(sj9));
IkReal x3262=((IkReal(1.00000000000000))*(r11));
IkReal x3263=((cj13)*(sj14));
IkReal x3264=((IkReal(1.00000000000000))*(cj9));
IkReal x3265=((cj13)*(cj14));
IkReal x3266=((cj11)*(x3259));
IkReal x3267=((sj11)*(x3260));
IkReal x3268=((cj11)*(x3260));
IkReal x3269=((sj11)*(x3259));
IkReal x3270=((x3267)+(x3266));
evalcond[0]=((((cj14)*(r21)))+(x3270)+(((r20)*(sj14))));
evalcond[1]=((((r21)*(x3263)))+(((IkReal(-1.00000000000000))*(x3268)))+(x3269)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3265))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3261)*(x3262)))+(((IkReal(-1.00000000000000))*(x3269)))+(x3268)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3264)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3264))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3263)*(x3264)))+(((cj9)*(r02)*(sj13)))+(x3270)+(((cj9)*(r00)*(x3265)))+(((cj13)*(r10)*(x3261)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x3262)*(x3263))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3271=((cj9)*(r10));
IkReal x3272=((cj13)*(cj14));
IkReal x3273=((sj14)*(sj9));
IkReal x3274=((IkReal(1.00000000000000))*(sj14));
IkReal x3275=((cj9)*(sj13));
IkReal x3276=((r02)*(sj9));
IkReal x3277=((cj13)*(cj9));
IkReal x3278=((cj14)*(r01));
IkReal x3279=((IkReal(1.00000000000000))*(npx));
IkReal x3280=((cj14)*(sj13));
IkReal x3281=((IkReal(1.00000000000000))*(cj9));
IkReal x3282=((npy)*(sj14));
IkReal x3283=((IkReal(1.00000000000000))*(sj13));
IkReal x3284=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3283)))+(((IkReal(-1.00000000000000))*(x3272)*(x3279)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x3282))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x3273)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3281)))+(((sj9)*(x3278)))+(((IkReal(-1.00000000000000))*(x3271)*(x3274))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x3279)*(x3280)))+(((sj13)*(x3282)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3274)))+(((IkReal(-1.00000000000000))*(r10)*(x3273)))+(((IkReal(-1.00000000000000))*(x3278)*(x3281)))+(((IkReal(-1.00000000000000))*(r11)*(x3284))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3272)))+(((cj13)*(r01)*(x3273)))+(((IkReal(-1.00000000000000))*(x3276)*(x3283)))+(((IkReal(-1.00000000000000))*(r11)*(x3274)*(x3277)))+(((r12)*(x3275)))+(((x3271)*(x3272))));
evalcond[8]=((((cj13)*(x3276)))+(((IkReal(-1.00000000000000))*(r12)*(x3277)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3280)))+(((r01)*(sj13)*(x3273)))+(((IkReal(-1.00000000000000))*(r11)*(x3274)*(x3275)))+(((x3271)*(x3280))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3285=((cj13)*(sj14));
IkReal x3286=((IkReal(1.00000000000000))*(cj11));
IkReal x3287=((r11)*(sj9));
IkReal x3288=((IkReal(1.00000000000000))*(sj11));
IkReal x3289=((cj13)*(cj14));
IkReal x3290=((cj11)*(sj13));
IkReal x3291=((r12)*(sj9));
IkReal x3292=((sj11)*(sj13));
IkReal x3293=((cj9)*(r02));
IkReal x3294=((cj9)*(r01));
IkReal x3295=((r10)*(sj9));
IkReal x3296=((cj9)*(r00));
if( IKabs(((gconst53)*(((((r21)*(sj11)*(x3285)))+(((IkReal(-1.00000000000000))*(x3285)*(x3286)*(x3287)))+(((IkReal(-1.00000000000000))*(x3285)*(x3286)*(x3294)))+(((x3290)*(x3293)))+(((x3290)*(x3291)))+(((cj11)*(x3289)*(x3295)))+(((cj11)*(x3289)*(x3296)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3288)))+(((IkReal(-1.00000000000000))*(r20)*(x3288)*(x3289))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((sj11)*(x3289)*(x3295)))+(((sj11)*(x3289)*(x3296)))+(((x3292)*(x3293)))+(((x3291)*(x3292)))+(((r22)*(x3290)))+(((IkReal(-1.00000000000000))*(x3285)*(x3288)*(x3294)))+(((IkReal(-1.00000000000000))*(r21)*(x3285)*(x3286)))+(((IkReal(-1.00000000000000))*(x3285)*(x3287)*(x3288)))+(((cj11)*(r20)*(x3289))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((r21)*(sj11)*(x3285)))+(((IkReal(-1.00000000000000))*(x3285)*(x3286)*(x3287)))+(((IkReal(-1.00000000000000))*(x3285)*(x3286)*(x3294)))+(((x3290)*(x3293)))+(((x3290)*(x3291)))+(((cj11)*(x3289)*(x3295)))+(((cj11)*(x3289)*(x3296)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3288)))+(((IkReal(-1.00000000000000))*(r20)*(x3288)*(x3289)))))), ((gconst53)*(((((sj11)*(x3289)*(x3295)))+(((sj11)*(x3289)*(x3296)))+(((x3292)*(x3293)))+(((x3291)*(x3292)))+(((r22)*(x3290)))+(((IkReal(-1.00000000000000))*(x3285)*(x3288)*(x3294)))+(((IkReal(-1.00000000000000))*(r21)*(x3285)*(x3286)))+(((IkReal(-1.00000000000000))*(x3285)*(x3287)*(x3288)))+(((cj11)*(r20)*(x3289)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3297=IKsin(j10);
IkReal x3298=IKcos(j10);
IkReal x3299=((IkReal(1.00000000000000))*(sj13));
IkReal x3300=((r11)*(sj9));
IkReal x3301=((cj9)*(r01));
IkReal x3302=((r21)*(sj14));
IkReal x3303=((cj9)*(r02));
IkReal x3304=((sj13)*(sj9));
IkReal x3305=((cj14)*(r10));
IkReal x3306=((IkReal(1.00000000000000))*(cj13));
IkReal x3307=((cj14)*(r20));
IkReal x3308=((cj11)*(x3297));
IkReal x3309=((sj11)*(x3298));
IkReal x3310=((sj14)*(x3306));
IkReal x3311=((sj11)*(x3297));
IkReal x3312=((cj11)*(x3298));
IkReal x3313=((cj14)*(cj9)*(r00));
IkReal x3314=((x3308)+(x3309));
evalcond[0]=((x3311)+(((IkReal(-1.00000000000000))*(r22)*(x3299)))+(((IkReal(-1.00000000000000))*(x3306)*(x3307)))+(((cj13)*(x3302)))+(((IkReal(-1.00000000000000))*(x3312))));
evalcond[1]=((x3314)+(((IkReal(-1.00000000000000))*(x3299)*(x3307)))+(((cj13)*(r22)))+(((sj13)*(x3302))));
evalcond[2]=((((cj13)*(sj9)*(x3305)))+(x3314)+(((cj13)*(x3313)))+(((r12)*(x3304)))+(((IkReal(-1.00000000000000))*(x3301)*(x3310)))+(((IkReal(-1.00000000000000))*(x3300)*(x3310)))+(((sj13)*(x3303))));
evalcond[3]=((x3312)+(((x3304)*(x3305)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3306)))+(((IkReal(-1.00000000000000))*(x3311)))+(((IkReal(-1.00000000000000))*(sj14)*(x3299)*(x3300)))+(((IkReal(-1.00000000000000))*(sj14)*(x3299)*(x3301)))+(((IkReal(-1.00000000000000))*(x3303)*(x3306)))+(((sj13)*(x3313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3315=((cj13)*(sj11));
IkReal x3316=((r21)*(sj14));
IkReal x3317=((cj11)*(cj13));
IkReal x3318=((cj11)*(sj13));
IkReal x3319=((sj11)*(sj13));
IkReal x3320=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((x3316)*(x3318)))+(((IkReal(-1.00000000000000))*(r22)*(x3319)))+(((x3315)*(x3316)))+(((r22)*(x3317)))+(((IkReal(-1.00000000000000))*(x3318)*(x3320)))+(((IkReal(-1.00000000000000))*(x3315)*(x3320))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((x3316)*(x3319)))+(((IkReal(-1.00000000000000))*(x3316)*(x3317)))+(((IkReal(-1.00000000000000))*(x3319)*(x3320)))+(((r22)*(x3315)))+(((r22)*(x3318)))+(((cj14)*(r20)*(x3317))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((x3316)*(x3318)))+(((IkReal(-1.00000000000000))*(r22)*(x3319)))+(((x3315)*(x3316)))+(((r22)*(x3317)))+(((IkReal(-1.00000000000000))*(x3318)*(x3320)))+(((IkReal(-1.00000000000000))*(x3315)*(x3320)))))), ((gconst52)*(((((x3316)*(x3319)))+(((IkReal(-1.00000000000000))*(x3316)*(x3317)))+(((IkReal(-1.00000000000000))*(x3319)*(x3320)))+(((r22)*(x3315)))+(((r22)*(x3318)))+(((cj14)*(r20)*(x3317)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3321=IKsin(j10);
IkReal x3322=IKcos(j10);
IkReal x3323=((IkReal(1.00000000000000))*(sj13));
IkReal x3324=((r11)*(sj9));
IkReal x3325=((cj9)*(r01));
IkReal x3326=((r21)*(sj14));
IkReal x3327=((cj9)*(r02));
IkReal x3328=((sj13)*(sj9));
IkReal x3329=((cj14)*(r10));
IkReal x3330=((IkReal(1.00000000000000))*(cj13));
IkReal x3331=((cj14)*(r20));
IkReal x3332=((cj11)*(x3321));
IkReal x3333=((sj11)*(x3322));
IkReal x3334=((sj14)*(x3330));
IkReal x3335=((sj11)*(x3321));
IkReal x3336=((cj11)*(x3322));
IkReal x3337=((cj14)*(cj9)*(r00));
IkReal x3338=((x3333)+(x3332));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3330)*(x3331)))+(x3335)+(((IkReal(-1.00000000000000))*(x3336)))+(((IkReal(-1.00000000000000))*(r22)*(x3323)))+(((cj13)*(x3326))));
evalcond[1]=((x3338)+(((IkReal(-1.00000000000000))*(x3323)*(x3331)))+(((sj13)*(x3326)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3328)))+(x3338)+(((cj13)*(x3337)))+(((sj13)*(x3327)))+(((IkReal(-1.00000000000000))*(x3324)*(x3334)))+(((cj13)*(sj9)*(x3329)))+(((IkReal(-1.00000000000000))*(x3325)*(x3334))));
evalcond[3]=((((x3328)*(x3329)))+(((IkReal(-1.00000000000000))*(sj14)*(x3323)*(x3324)))+(((IkReal(-1.00000000000000))*(sj14)*(x3323)*(x3325)))+(((sj13)*(x3337)))+(x3336)+(((IkReal(-1.00000000000000))*(x3335)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3330)))+(((IkReal(-1.00000000000000))*(x3327)*(x3330))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3339=((cj9)*(r10));
IkReal x3340=((cj13)*(cj14));
IkReal x3341=((sj14)*(sj9));
IkReal x3342=((IkReal(1.00000000000000))*(sj14));
IkReal x3343=((cj9)*(sj13));
IkReal x3344=((r02)*(sj9));
IkReal x3345=((cj13)*(cj9));
IkReal x3346=((cj14)*(r01));
IkReal x3347=((IkReal(1.00000000000000))*(npx));
IkReal x3348=((cj14)*(sj13));
IkReal x3349=((IkReal(1.00000000000000))*(cj9));
IkReal x3350=((npy)*(sj14));
IkReal x3351=((IkReal(1.00000000000000))*(sj13));
IkReal x3352=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x3340)*(x3347)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x3351)))+(((cj13)*(x3350))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r00)*(x3341)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3349)))+(((sj9)*(x3346)))+(((IkReal(-1.00000000000000))*(x3339)*(x3342))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((sj13)*(x3350)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3346)*(x3349)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3342)))+(((IkReal(-1.00000000000000))*(r11)*(x3352)))+(((IkReal(-1.00000000000000))*(r10)*(x3341))));
evalcond[7]=((((cj13)*(r01)*(x3341)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3340)))+(((IkReal(-1.00000000000000))*(x3344)*(x3351)))+(((IkReal(-1.00000000000000))*(r11)*(x3342)*(x3345)))+(((x3339)*(x3340)))+(((r12)*(x3343))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3348)))+(((IkReal(-1.00000000000000))*(r12)*(x3345)))+(((cj13)*(x3344)))+(((r01)*(sj13)*(x3341)))+(((IkReal(-1.00000000000000))*(r11)*(x3342)*(x3343)))+(((x3339)*(x3348))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3353=((cj13)*(sj14));
IkReal x3354=((IkReal(1.00000000000000))*(cj11));
IkReal x3355=((r11)*(sj9));
IkReal x3356=((cj11)*(sj13));
IkReal x3357=((r12)*(sj9));
IkReal x3358=((r10)*(sj9));
IkReal x3359=((sj11)*(sj13));
IkReal x3360=((cj9)*(r02));
IkReal x3361=((IkReal(1.00000000000000))*(sj11));
IkReal x3362=((cj9)*(r01));
IkReal x3363=((cj9)*(r00));
IkReal x3364=((cj13)*(cj14)*(sj11));
IkReal x3365=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst55)*(((((x3356)*(x3360)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)*(x3362)))+(((x3363)*(x3365)))+(((IkReal(-1.00000000000000))*(r22)*(x3359)))+(((x3358)*(x3365)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3361)))+(((x3356)*(x3357)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)*(x3355)))+(((r21)*(sj11)*(x3353))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x3363)*(x3364)))+(((IkReal(-1.00000000000000))*(x3353)*(x3355)*(x3361)))+(((IkReal(-1.00000000000000))*(x3353)*(x3361)*(x3362)))+(((x3358)*(x3364)))+(((r20)*(x3365)))+(((x3359)*(x3360)))+(((IkReal(-1.00000000000000))*(r21)*(x3353)*(x3354)))+(((x3357)*(x3359)))+(((r22)*(x3356))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x3356)*(x3360)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)*(x3362)))+(((x3363)*(x3365)))+(((IkReal(-1.00000000000000))*(r22)*(x3359)))+(((x3358)*(x3365)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3361)))+(((x3356)*(x3357)))+(((IkReal(-1.00000000000000))*(x3353)*(x3354)*(x3355)))+(((r21)*(sj11)*(x3353)))))), ((gconst55)*(((((x3363)*(x3364)))+(((IkReal(-1.00000000000000))*(x3353)*(x3355)*(x3361)))+(((IkReal(-1.00000000000000))*(x3353)*(x3361)*(x3362)))+(((x3358)*(x3364)))+(((r20)*(x3365)))+(((x3359)*(x3360)))+(((IkReal(-1.00000000000000))*(r21)*(x3353)*(x3354)))+(((x3357)*(x3359)))+(((r22)*(x3356)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3366=IKsin(j10);
IkReal x3367=IKcos(j10);
IkReal x3368=((IkReal(1.00000000000000))*(sj13));
IkReal x3369=((r11)*(sj9));
IkReal x3370=((cj9)*(r01));
IkReal x3371=((IkReal(1.00000000000000))*(cj11));
IkReal x3372=((r21)*(sj14));
IkReal x3373=((cj9)*(r02));
IkReal x3374=((sj13)*(sj9));
IkReal x3375=((cj14)*(r10));
IkReal x3376=((IkReal(1.00000000000000))*(cj13));
IkReal x3377=((cj14)*(r20));
IkReal x3378=((sj11)*(x3366));
IkReal x3379=((sj14)*(x3376));
IkReal x3380=((sj11)*(x3367));
IkReal x3381=((cj14)*(cj9)*(r00));
IkReal x3382=((x3367)*(x3371));
evalcond[0]=((x3378)+(((IkReal(-1.00000000000000))*(r22)*(x3368)))+(((cj13)*(x3372)))+(((IkReal(-1.00000000000000))*(x3376)*(x3377)))+(((IkReal(-1.00000000000000))*(x3382))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3366)*(x3371)))+(((IkReal(-1.00000000000000))*(x3380)))+(((sj13)*(x3372)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x3368)*(x3377))));
evalcond[2]=((((r12)*(x3374)))+(((cj13)*(sj9)*(x3375)))+(x3380)+(((IkReal(-1.00000000000000))*(x3370)*(x3379)))+(((cj13)*(x3381)))+(((sj13)*(x3373)))+(((IkReal(-1.00000000000000))*(x3369)*(x3379)))+(((cj11)*(x3366))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3368)*(x3369)))+(((IkReal(-1.00000000000000))*(x3373)*(x3376)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3376)))+(x3378)+(((IkReal(-1.00000000000000))*(sj14)*(x3368)*(x3370)))+(((x3374)*(x3375)))+(((IkReal(-1.00000000000000))*(x3382)))+(((sj13)*(x3381))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3383=((r22)*(sj11));
IkReal x3384=((IkReal(1.00000000000000))*(sj11));
IkReal x3385=((IkReal(1.00000000000000))*(cj11));
IkReal x3386=((cj14)*(r20));
IkReal x3387=((cj13)*(r21)*(sj14));
IkReal x3388=((r21)*(sj13)*(sj14));
if( IKabs(((gconst54)*(((((cj13)*(sj11)*(x3386)))+(((IkReal(-1.00000000000000))*(x3384)*(x3387)))+(((IkReal(-1.00000000000000))*(sj13)*(x3385)*(x3386)))+(((cj11)*(cj13)*(r22)))+(((sj13)*(x3383)))+(((cj11)*(x3388))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(sj13)*(x3384)*(x3386)))+(((sj11)*(x3388)))+(((IkReal(-1.00000000000000))*(cj13)*(x3385)*(x3386)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3385)))+(((cj13)*(x3383)))+(((cj11)*(x3387))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((cj13)*(sj11)*(x3386)))+(((IkReal(-1.00000000000000))*(x3384)*(x3387)))+(((IkReal(-1.00000000000000))*(sj13)*(x3385)*(x3386)))+(((cj11)*(cj13)*(r22)))+(((sj13)*(x3383)))+(((cj11)*(x3388)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(sj13)*(x3384)*(x3386)))+(((sj11)*(x3388)))+(((IkReal(-1.00000000000000))*(cj13)*(x3385)*(x3386)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3385)))+(((cj13)*(x3383)))+(((cj11)*(x3387)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3389=IKsin(j10);
IkReal x3390=IKcos(j10);
IkReal x3391=((IkReal(1.00000000000000))*(sj13));
IkReal x3392=((r11)*(sj9));
IkReal x3393=((cj9)*(r01));
IkReal x3394=((IkReal(1.00000000000000))*(cj11));
IkReal x3395=((r21)*(sj14));
IkReal x3396=((cj9)*(r02));
IkReal x3397=((sj13)*(sj9));
IkReal x3398=((cj14)*(r10));
IkReal x3399=((IkReal(1.00000000000000))*(cj13));
IkReal x3400=((cj14)*(r20));
IkReal x3401=((sj11)*(x3389));
IkReal x3402=((sj14)*(x3399));
IkReal x3403=((sj11)*(x3390));
IkReal x3404=((cj14)*(cj9)*(r00));
IkReal x3405=((x3390)*(x3394));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3391)))+(((IkReal(-1.00000000000000))*(x3399)*(x3400)))+(x3401)+(((cj13)*(x3395)))+(((IkReal(-1.00000000000000))*(x3405))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3403)))+(((IkReal(-1.00000000000000))*(x3389)*(x3394)))+(((sj13)*(x3395)))+(((IkReal(-1.00000000000000))*(x3391)*(x3400)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3392)*(x3402)))+(x3403)+(((cj13)*(sj9)*(x3398)))+(((cj13)*(x3404)))+(((sj13)*(x3396)))+(((r12)*(x3397)))+(((IkReal(-1.00000000000000))*(x3393)*(x3402)))+(((cj11)*(x3389))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3396)*(x3399)))+(x3401)+(((IkReal(-1.00000000000000))*(sj14)*(x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(sj14)*(x3391)*(x3393)))+(((sj13)*(x3404)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3399)))+(((x3397)*(x3398)))+(((IkReal(-1.00000000000000))*(x3405))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3406=((r21)*(sj14));
IkReal x3407=((cj12)*(cj13));
IkReal x3408=((sj11)*(sj13));
IkReal x3409=((cj14)*(r20));
IkReal x3410=((IkReal(1.00000000000000))*(sj11));
IkReal x3411=((cj12)*(r22));
IkReal x3412=((IkReal(1.00000000000000))*(cj11));
IkReal x3413=((cj13)*(r22));
IkReal x3414=((sj13)*(x3412));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3412)*(x3413)))+(((x3408)*(x3411)))+(((IkReal(-1.00000000000000))*(x3406)*(x3407)*(x3410)))+(((sj11)*(x3407)*(x3409)))+(((cj11)*(sj13)*(x3409)))+(((IkReal(-1.00000000000000))*(x3406)*(x3414))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((x3408)*(x3409)))+(((IkReal(-1.00000000000000))*(x3407)*(x3409)*(x3412)))+(((IkReal(-1.00000000000000))*(x3406)*(x3408)))+(((IkReal(-1.00000000000000))*(x3411)*(x3414)))+(((cj11)*(x3406)*(x3407)))+(((IkReal(-1.00000000000000))*(x3410)*(x3413))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3412)*(x3413)))+(((x3408)*(x3411)))+(((IkReal(-1.00000000000000))*(x3406)*(x3407)*(x3410)))+(((sj11)*(x3407)*(x3409)))+(((cj11)*(sj13)*(x3409)))+(((IkReal(-1.00000000000000))*(x3406)*(x3414)))))), ((gconst47)*(((((x3408)*(x3409)))+(((IkReal(-1.00000000000000))*(x3407)*(x3409)*(x3412)))+(((IkReal(-1.00000000000000))*(x3406)*(x3408)))+(((IkReal(-1.00000000000000))*(x3411)*(x3414)))+(((cj11)*(x3406)*(x3407)))+(((IkReal(-1.00000000000000))*(x3410)*(x3413)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3415=IKsin(j10);
IkReal x3416=IKcos(j10);
IkReal x3417=((IkReal(1.00000000000000))*(cj13));
IkReal x3418=((cj9)*(r02));
IkReal x3419=((IkReal(1.00000000000000))*(sj13));
IkReal x3420=((r11)*(sj9));
IkReal x3421=((IkReal(1.00000000000000))*(cj14));
IkReal x3422=((cj9)*(r01));
IkReal x3423=((r21)*(sj14));
IkReal x3424=((IkReal(1.00000000000000))*(sj12));
IkReal x3425=((r10)*(sj9));
IkReal x3426=((cj14)*(sj13));
IkReal x3427=((cj14)*(r20));
IkReal x3428=((IkReal(1.00000000000000))*(sj14));
IkReal x3429=((r12)*(sj9));
IkReal x3430=((cj13)*(cj14));
IkReal x3431=((cj9)*(r00));
IkReal x3432=((sj11)*(x3415));
IkReal x3433=((cj11)*(x3415));
IkReal x3434=((sj11)*(x3416));
IkReal x3435=((cj11)*(x3416));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3424)*(x3434)))+(((IkReal(-1.00000000000000))*(x3424)*(x3433))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3419)))+(((cj13)*(x3423)))+(((IkReal(-1.00000000000000))*(x3417)*(x3427)))+(x3432)+(((IkReal(-1.00000000000000))*(x3435))));
evalcond[2]=((((sj13)*(x3423)))+(((cj12)*(x3434)))+(((cj12)*(x3433)))+(((IkReal(-1.00000000000000))*(x3419)*(x3427)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3428)*(x3431)))+(((IkReal(-1.00000000000000))*(x3420)*(x3421)))+(((sj12)*(x3432)))+(((IkReal(-1.00000000000000))*(x3424)*(x3435)))+(((IkReal(-1.00000000000000))*(x3425)*(x3428)))+(((IkReal(-1.00000000000000))*(x3421)*(x3422))));
evalcond[4]=((((x3425)*(x3430)))+(((sj13)*(x3429)))+(((x3430)*(x3431)))+(x3433)+(x3434)+(((sj13)*(x3418)))+(((IkReal(-1.00000000000000))*(sj14)*(x3417)*(x3422)))+(((IkReal(-1.00000000000000))*(sj14)*(x3417)*(x3420))));
evalcond[5]=((((x3425)*(x3426)))+(((cj12)*(x3435)))+(((IkReal(-1.00000000000000))*(x3417)*(x3429)))+(((IkReal(-1.00000000000000))*(cj12)*(x3432)))+(((IkReal(-1.00000000000000))*(sj14)*(x3419)*(x3422)))+(((IkReal(-1.00000000000000))*(sj14)*(x3419)*(x3420)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))+(((x3426)*(x3431))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3436=((cj11)*(sj12));
IkReal x3437=((r22)*(sj13));
IkReal x3438=((r20)*(sj14));
IkReal x3439=((cj14)*(sj11));
IkReal x3440=((cj13)*(r20));
IkReal x3441=((sj11)*(sj12));
IkReal x3442=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3441)*(x3442)))+(((cj11)*(x3438)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x3439)*(x3440)))+(((x3437)*(x3441))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x3436)*(x3440)))+(((IkReal(-1.00000000000000))*(x3436)*(x3437)))+(((x3436)*(x3442)))+(((r21)*(x3439)))+(((sj11)*(x3438))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x3441)*(x3442)))+(((cj11)*(x3438)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x3439)*(x3440)))+(((x3437)*(x3441)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x3436)*(x3440)))+(((IkReal(-1.00000000000000))*(x3436)*(x3437)))+(((x3436)*(x3442)))+(((r21)*(x3439)))+(((sj11)*(x3438)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3443=IKsin(j10);
IkReal x3444=IKcos(j10);
IkReal x3445=((IkReal(1.00000000000000))*(cj13));
IkReal x3446=((cj9)*(r02));
IkReal x3447=((IkReal(1.00000000000000))*(sj13));
IkReal x3448=((r11)*(sj9));
IkReal x3449=((IkReal(1.00000000000000))*(cj14));
IkReal x3450=((cj9)*(r01));
IkReal x3451=((r21)*(sj14));
IkReal x3452=((IkReal(1.00000000000000))*(sj12));
IkReal x3453=((r10)*(sj9));
IkReal x3454=((cj14)*(sj13));
IkReal x3455=((cj14)*(r20));
IkReal x3456=((IkReal(1.00000000000000))*(sj14));
IkReal x3457=((r12)*(sj9));
IkReal x3458=((cj13)*(cj14));
IkReal x3459=((cj9)*(r00));
IkReal x3460=((sj11)*(x3443));
IkReal x3461=((cj11)*(x3443));
IkReal x3462=((sj11)*(x3444));
IkReal x3463=((cj11)*(x3444));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3452)*(x3462)))+(((IkReal(-1.00000000000000))*(x3452)*(x3461))));
evalcond[1]=((((cj13)*(x3451)))+(x3460)+(((IkReal(-1.00000000000000))*(x3445)*(x3455)))+(((IkReal(-1.00000000000000))*(x3463)))+(((IkReal(-1.00000000000000))*(r22)*(x3447))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3447)*(x3455)))+(((cj12)*(x3462)))+(((cj12)*(x3461)))+(((sj13)*(x3451)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3453)*(x3456)))+(((sj12)*(x3460)))+(((IkReal(-1.00000000000000))*(x3452)*(x3463)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(x3449)*(x3450)))+(((IkReal(-1.00000000000000))*(x3456)*(x3459))));
evalcond[4]=((((x3453)*(x3458)))+(((IkReal(-1.00000000000000))*(sj14)*(x3445)*(x3448)))+(((IkReal(-1.00000000000000))*(sj14)*(x3445)*(x3450)))+(x3462)+(x3461)+(((x3458)*(x3459)))+(((sj13)*(x3457)))+(((sj13)*(x3446))));
evalcond[5]=((((x3453)*(x3454)))+(((cj12)*(x3463)))+(((IkReal(-1.00000000000000))*(cj12)*(x3460)))+(((IkReal(-1.00000000000000))*(x3445)*(x3457)))+(((IkReal(-1.00000000000000))*(x3445)*(x3446)))+(((x3454)*(x3459)))+(((IkReal(-1.00000000000000))*(sj14)*(x3447)*(x3450)))+(((IkReal(-1.00000000000000))*(sj14)*(x3447)*(x3448))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3464=((IkReal(4.00000000000000))*(sj14));
IkReal x3465=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3465)))+(((IkReal(-1.00000000000000))*(npx)*(x3464))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3465)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3464))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3465)))+(((IkReal(-1.00000000000000))*(npx)*(x3464)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3465)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3464)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-0.380000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3465)))+(((IkReal(-1.00000000000000))*(npx)*(x3464)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3465)))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3464)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3466=IKsin(j11);
IkReal x3467=((IkReal(1.00000000000000))*(sj13));
IkReal x3468=((cj14)*(npx));
IkReal x3469=((npy)*(sj14));
IkReal x3470=((IkReal(0.250000000000000))*(x3466));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj12)))+(((sj12)*(x3470)))+(((cj14)*(npy)))+(((IkReal(-0.0300000000000000))*(sj12)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x3469)))+(((IkReal(-1.00000000000000))*(npz)*(x3467)))+(((IkReal(-1.00000000000000))*(cj13)*(x3468))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3467)*(x3468)))+(((IkReal(0.0950000000000000))*(sj12)))+(((sj13)*(x3469)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x3470)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11))))));
dummyeval[0]=((((sj12)*((sj11)*(sj11))))+(((sj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3471=((r00)*(sj9));
IkReal x3472=((IkReal(1.00000000000000))*(sj13));
IkReal x3473=((cj13)*(sj14));
IkReal x3474=((cj9)*(sj14));
IkReal x3475=((cj13)*(r02));
IkReal x3476=((sj13)*(sj14));
IkReal x3477=((r01)*(sj9));
IkReal x3478=((cj9)*(sj13));
IkReal x3479=((IkReal(1.00000000000000))*(cj9));
IkReal x3480=((cj14)*(r10));
IkReal x3481=((cj14)*(npx));
IkReal x3482=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3481)*(x3482)))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3473)))+(((IkReal(-1.00000000000000))*(npz)*(x3472))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3479)))+(((IkReal(-1.00000000000000))*(r10)*(x3474)))+(((cj14)*(x3477)))+(((sj14)*(x3471))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3472)))+(((r21)*(x3476)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(x3472)*(x3481)))+(((npy)*(x3476)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((x3473)*(x3477)))+(((r12)*(x3478)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3472)))+(((IkReal(-1.00000000000000))*(r11)*(x3473)*(x3479)))+(((IkReal(-1.00000000000000))*(cj14)*(x3471)*(x3482)))+(((cj13)*(cj9)*(x3480))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x3475)))+(((x3476)*(x3477)))+(((IkReal(-1.00000000000000))*(cj14)*(x3471)*(x3472)))+(((x3478)*(x3480)))+(((IkReal(-1.00000000000000))*(r11)*(x3472)*(x3474)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3479))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3482)))+(((cj14)*(r00)*(x3478)))+(((sj13)*(sj9)*(x3480)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3472)))+(((IkReal(-1.00000000000000))*(x3475)*(x3479)))+(((IkReal(-1.00000000000000))*(r01)*(x3472)*(x3474))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3483=((IkReal(1.00000000000000))*(cj11));
IkReal x3484=((sj11)*(sj14));
IkReal x3485=((r10)*(sj9));
IkReal x3486=((cj9)*(r00));
IkReal x3487=((cj14)*(sj11));
IkReal x3488=((r11)*(sj9));
IkReal x3489=((cj14)*(cj9)*(r01));
if( IKabs(((gconst49)*(((((x3484)*(x3486)))+(((x3484)*(x3485)))+(((cj11)*(cj14)*(r21)))+(((x3487)*(x3488)))+(((cj11)*(r20)*(sj14)))+(((cj9)*(r01)*(x3487))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x3483)*(x3489)))+(((IkReal(-1.00000000000000))*(cj14)*(x3483)*(x3488)))+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3486)))+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3485)))+(((r20)*(x3484)))+(((r21)*(x3487))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((x3484)*(x3486)))+(((x3484)*(x3485)))+(((cj11)*(cj14)*(r21)))+(((x3487)*(x3488)))+(((cj11)*(r20)*(sj14)))+(((cj9)*(r01)*(x3487)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x3483)*(x3489)))+(((IkReal(-1.00000000000000))*(cj14)*(x3483)*(x3488)))+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3486)))+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3485)))+(((r20)*(x3484)))+(((r21)*(x3487)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3490=IKsin(j10);
IkReal x3491=IKcos(j10);
IkReal x3492=((cj13)*(sj14));
IkReal x3493=((cj13)*(cj14));
IkReal x3494=((r10)*(sj9));
IkReal x3495=((IkReal(1.00000000000000))*(cj9));
IkReal x3496=((sj11)*(x3490));
IkReal x3497=((IkReal(1.00000000000000))*(x3491));
IkReal x3498=((cj11)*(x3490));
IkReal x3499=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3500=((cj11)*(x3497));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3497)))+(((IkReal(-1.00000000000000))*(x3498))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3500)))+(x3496)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3493)))+(((r21)*(x3492))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x3499)))+(((IkReal(-1.00000000000000))*(x3500)))+(x3496)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3495)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3495)))+(((IkReal(-1.00000000000000))*(sj14)*(x3494))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3492)*(x3495)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x3493)))+(x3498)+(((IkReal(-1.00000000000000))*(x3492)*(x3499)))+(((sj11)*(x3491)))+(((x3493)*(x3494)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3501=((cj11)*(r20));
IkReal x3502=((IkReal(1.00000000000000))*(cj13));
IkReal x3503=((r21)*(sj14));
IkReal x3504=((r22)*(sj13));
IkReal x3505=((r20)*(sj11));
IkReal x3506=((cj14)*(r21));
if( IKabs(((gconst48)*(((((cj13)*(cj14)*(x3505)))+(((IkReal(-1.00000000000000))*(sj11)*(x3502)*(x3503)))+(((cj11)*(x3506)))+(((sj14)*(x3501)))+(((sj11)*(x3504))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x3504)))+(((IkReal(-1.00000000000000))*(cj14)*(x3501)*(x3502)))+(((sj14)*(x3505)))+(((sj11)*(x3506)))+(((cj11)*(cj13)*(x3503))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((cj13)*(cj14)*(x3505)))+(((IkReal(-1.00000000000000))*(sj11)*(x3502)*(x3503)))+(((cj11)*(x3506)))+(((sj14)*(x3501)))+(((sj11)*(x3504)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x3504)))+(((IkReal(-1.00000000000000))*(cj14)*(x3501)*(x3502)))+(((sj14)*(x3505)))+(((sj11)*(x3506)))+(((cj11)*(cj13)*(x3503)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3507=IKsin(j10);
IkReal x3508=IKcos(j10);
IkReal x3509=((cj13)*(sj14));
IkReal x3510=((cj13)*(cj14));
IkReal x3511=((r10)*(sj9));
IkReal x3512=((IkReal(1.00000000000000))*(cj9));
IkReal x3513=((sj11)*(x3507));
IkReal x3514=((IkReal(1.00000000000000))*(x3508));
IkReal x3515=((cj11)*(x3507));
IkReal x3516=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3517=((cj11)*(x3514));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3514)))+(((IkReal(-1.00000000000000))*(x3515))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3517)))+(x3513)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3509)))+(((IkReal(-1.00000000000000))*(r20)*(x3510))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3512)))+(((IkReal(-1.00000000000000))*(x3517)))+(x3513)+(((IkReal(-1.00000000000000))*(sj14)*(x3511)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3512)))+(((IkReal(-1.00000000000000))*(cj14)*(x3516))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3509)*(x3516)))+(((x3510)*(x3511)))+(((cj9)*(r02)*(sj13)))+(x3515)+(((IkReal(-1.00000000000000))*(r01)*(x3509)*(x3512)))+(((cj9)*(r00)*(x3510)))+(((sj11)*(x3508)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3518=((r00)*(sj9));
IkReal x3519=((IkReal(1.00000000000000))*(sj13));
IkReal x3520=((cj13)*(sj14));
IkReal x3521=((cj9)*(sj14));
IkReal x3522=((cj13)*(r02));
IkReal x3523=((sj13)*(sj14));
IkReal x3524=((r01)*(sj9));
IkReal x3525=((cj9)*(sj13));
IkReal x3526=((IkReal(1.00000000000000))*(cj9));
IkReal x3527=((cj14)*(r10));
IkReal x3528=((cj14)*(npx));
IkReal x3529=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3519)))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3520)))+(((IkReal(-1.00000000000000))*(x3528)*(x3529))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3526)))+(((cj14)*(x3524)))+(((sj14)*(x3518)))+(((IkReal(-1.00000000000000))*(r10)*(x3521))));
evalcond[4]=((((r21)*(x3523)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3519)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(x3519)*(x3528)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x3523))));
evalcond[6]=((((cj13)*(cj9)*(x3527)))+(((r12)*(x3525)))+(((IkReal(-1.00000000000000))*(r11)*(x3520)*(x3526)))+(((x3520)*(x3524)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3519)))+(((IkReal(-1.00000000000000))*(cj14)*(x3518)*(x3529))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x3525)*(x3527)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3526)))+(((sj9)*(x3522)))+(((x3523)*(x3524)))+(((IkReal(-1.00000000000000))*(r11)*(x3519)*(x3521)))+(((IkReal(-1.00000000000000))*(cj14)*(x3518)*(x3519))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3522)*(x3526)))+(((IkReal(-1.00000000000000))*(r01)*(x3519)*(x3521)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3519)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3529)))+(((sj13)*(sj9)*(x3527)))+(((cj14)*(r00)*(x3525))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3530=((IkReal(1.00000000000000))*(sj11));
IkReal x3531=((cj14)*(r21));
IkReal x3532=((IkReal(1.00000000000000))*(cj11));
IkReal x3533=((r20)*(sj14));
IkReal x3534=((cj9)*(r00)*(sj14));
IkReal x3535=((cj14)*(r11)*(sj9));
IkReal x3536=((cj14)*(cj9)*(r01));
IkReal x3537=((r10)*(sj14)*(sj9));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3531)*(x3532)))+(((IkReal(-1.00000000000000))*(x3530)*(x3535)))+(((IkReal(-1.00000000000000))*(x3530)*(x3534)))+(((IkReal(-1.00000000000000))*(x3530)*(x3537)))+(((IkReal(-1.00000000000000))*(x3530)*(x3536)))+(((IkReal(-1.00000000000000))*(x3532)*(x3533))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj11)*(x3535)))+(((cj11)*(x3534)))+(((cj11)*(x3537)))+(((cj11)*(x3536)))+(((IkReal(-1.00000000000000))*(x3530)*(x3531)))+(((IkReal(-1.00000000000000))*(x3530)*(x3533))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x3531)*(x3532)))+(((IkReal(-1.00000000000000))*(x3530)*(x3535)))+(((IkReal(-1.00000000000000))*(x3530)*(x3534)))+(((IkReal(-1.00000000000000))*(x3530)*(x3537)))+(((IkReal(-1.00000000000000))*(x3530)*(x3536)))+(((IkReal(-1.00000000000000))*(x3532)*(x3533)))))), ((gconst51)*(((((cj11)*(x3535)))+(((cj11)*(x3534)))+(((cj11)*(x3537)))+(((cj11)*(x3536)))+(((IkReal(-1.00000000000000))*(x3530)*(x3531)))+(((IkReal(-1.00000000000000))*(x3530)*(x3533)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3538=IKsin(j10);
IkReal x3539=IKcos(j10);
IkReal x3540=((cj14)*(sj9));
IkReal x3541=((IkReal(1.00000000000000))*(r11));
IkReal x3542=((cj13)*(sj14));
IkReal x3543=((IkReal(1.00000000000000))*(cj9));
IkReal x3544=((cj13)*(cj14));
IkReal x3545=((cj11)*(x3538));
IkReal x3546=((sj11)*(x3539));
IkReal x3547=((cj11)*(x3539));
IkReal x3548=((sj11)*(x3538));
IkReal x3549=((x3545)+(x3546));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3549));
evalcond[1]=((((r21)*(x3542)))+(x3548)+(((IkReal(-1.00000000000000))*(r20)*(x3544)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3547))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3543)))+(x3547)+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3548)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3543)))+(((IkReal(-1.00000000000000))*(x3540)*(x3541))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(x3549)+(((cj9)*(r00)*(x3544)))+(((IkReal(-1.00000000000000))*(r01)*(x3542)*(x3543)))+(((IkReal(-1.00000000000000))*(sj9)*(x3541)*(x3542)))+(((cj13)*(r10)*(x3540)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3550=((cj13)*(sj11));
IkReal x3551=((r21)*(sj14));
IkReal x3552=((cj14)*(r20));
IkReal x3553=((cj11)*(cj13));
IkReal x3554=((r22)*(sj13));
IkReal x3555=((r20)*(sj14));
IkReal x3556=((cj14)*(r21));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x3554)))+(((IkReal(-1.00000000000000))*(x3550)*(x3552)))+(((cj11)*(x3556)))+(((cj11)*(x3555)))+(((x3550)*(x3551))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x3555)))+(((sj11)*(x3556)))+(((x3552)*(x3553)))+(((cj11)*(x3554)))+(((IkReal(-1.00000000000000))*(x3551)*(x3553))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x3554)))+(((IkReal(-1.00000000000000))*(x3550)*(x3552)))+(((cj11)*(x3556)))+(((cj11)*(x3555)))+(((x3550)*(x3551)))))), ((gconst50)*(((((sj11)*(x3555)))+(((sj11)*(x3556)))+(((x3552)*(x3553)))+(((cj11)*(x3554)))+(((IkReal(-1.00000000000000))*(x3551)*(x3553)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3557=IKsin(j10);
IkReal x3558=IKcos(j10);
IkReal x3559=((cj14)*(sj9));
IkReal x3560=((IkReal(1.00000000000000))*(r11));
IkReal x3561=((cj13)*(sj14));
IkReal x3562=((IkReal(1.00000000000000))*(cj9));
IkReal x3563=((cj13)*(cj14));
IkReal x3564=((cj11)*(x3557));
IkReal x3565=((sj11)*(x3558));
IkReal x3566=((cj11)*(x3558));
IkReal x3567=((sj11)*(x3557));
IkReal x3568=((x3564)+(x3565));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3568));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3563)))+(x3567)+(((r21)*(x3561)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3566))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3562)))+(x3566)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3562)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3559)*(x3560)))+(((IkReal(-1.00000000000000))*(x3567))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(x3568)+(((IkReal(-1.00000000000000))*(r01)*(x3561)*(x3562)))+(((cj13)*(r10)*(x3559)))+(((cj9)*(r00)*(x3563)))+(((IkReal(-1.00000000000000))*(sj9)*(x3560)*(x3561)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3569=((cj9)*(r10));
IkReal x3570=((cj13)*(cj14));
IkReal x3571=((sj14)*(sj9));
IkReal x3572=((IkReal(1.00000000000000))*(sj14));
IkReal x3573=((cj9)*(sj13));
IkReal x3574=((r02)*(sj9));
IkReal x3575=((cj13)*(cj9));
IkReal x3576=((cj14)*(r01));
IkReal x3577=((IkReal(1.00000000000000))*(npx));
IkReal x3578=((cj14)*(sj13));
IkReal x3579=((IkReal(1.00000000000000))*(cj9));
IkReal x3580=((npy)*(sj14));
IkReal x3581=((IkReal(1.00000000000000))*(sj13));
IkReal x3582=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3581)))+(((IkReal(0.250000000000000))*(cj11)))+(((cj13)*(x3580)))+(((IkReal(-1.00000000000000))*(x3570)*(x3577))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x3571)))+(((sj9)*(x3576)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3579)))+(((IkReal(-1.00000000000000))*(x3569)*(x3572))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((sj13)*(x3580)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3577)*(x3578))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3572)))+(((IkReal(-1.00000000000000))*(x3576)*(x3579)))+(((IkReal(-1.00000000000000))*(r10)*(x3571)))+(((IkReal(-1.00000000000000))*(r11)*(x3582))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3574)*(x3581)))+(((IkReal(-1.00000000000000))*(r11)*(x3572)*(x3575)))+(((x3569)*(x3570)))+(((r12)*(x3573)))+(((cj13)*(r01)*(x3571)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3570))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r11)*(x3572)*(x3573)))+(((r01)*(sj13)*(x3571)))+(((x3569)*(x3578)))+(((IkReal(-1.00000000000000))*(r12)*(x3575)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3578)))+(((cj13)*(x3574))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3583=((cj13)*(sj14));
IkReal x3584=((IkReal(1.00000000000000))*(cj11));
IkReal x3585=((r11)*(sj9));
IkReal x3586=((IkReal(1.00000000000000))*(sj11));
IkReal x3587=((cj13)*(cj14));
IkReal x3588=((cj11)*(sj13));
IkReal x3589=((r12)*(sj9));
IkReal x3590=((sj11)*(sj13));
IkReal x3591=((cj9)*(r02));
IkReal x3592=((cj9)*(r01));
IkReal x3593=((r10)*(sj9));
IkReal x3594=((cj9)*(r00));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3586)))+(((r21)*(sj11)*(x3583)))+(((x3588)*(x3589)))+(((IkReal(-1.00000000000000))*(r20)*(x3586)*(x3587)))+(((x3588)*(x3591)))+(((cj11)*(x3587)*(x3593)))+(((cj11)*(x3587)*(x3594)))+(((IkReal(-1.00000000000000))*(x3583)*(x3584)*(x3592)))+(((IkReal(-1.00000000000000))*(x3583)*(x3584)*(x3585))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((sj11)*(x3587)*(x3594)))+(((sj11)*(x3587)*(x3593)))+(((x3589)*(x3590)))+(((cj11)*(r20)*(x3587)))+(((x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(x3583)*(x3586)*(x3592)))+(((IkReal(-1.00000000000000))*(x3583)*(x3585)*(x3586)))+(((IkReal(-1.00000000000000))*(r21)*(x3583)*(x3584)))+(((r22)*(x3588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3586)))+(((r21)*(sj11)*(x3583)))+(((x3588)*(x3589)))+(((IkReal(-1.00000000000000))*(r20)*(x3586)*(x3587)))+(((x3588)*(x3591)))+(((cj11)*(x3587)*(x3593)))+(((cj11)*(x3587)*(x3594)))+(((IkReal(-1.00000000000000))*(x3583)*(x3584)*(x3592)))+(((IkReal(-1.00000000000000))*(x3583)*(x3584)*(x3585)))))), ((gconst53)*(((((sj11)*(x3587)*(x3594)))+(((sj11)*(x3587)*(x3593)))+(((x3589)*(x3590)))+(((cj11)*(r20)*(x3587)))+(((x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(x3583)*(x3586)*(x3592)))+(((IkReal(-1.00000000000000))*(x3583)*(x3585)*(x3586)))+(((IkReal(-1.00000000000000))*(r21)*(x3583)*(x3584)))+(((r22)*(x3588)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3595=IKsin(j10);
IkReal x3596=IKcos(j10);
IkReal x3597=((IkReal(1.00000000000000))*(sj13));
IkReal x3598=((r11)*(sj9));
IkReal x3599=((cj9)*(r01));
IkReal x3600=((r21)*(sj14));
IkReal x3601=((cj9)*(r02));
IkReal x3602=((sj13)*(sj9));
IkReal x3603=((cj14)*(r10));
IkReal x3604=((IkReal(1.00000000000000))*(cj13));
IkReal x3605=((cj14)*(r20));
IkReal x3606=((cj11)*(x3595));
IkReal x3607=((sj11)*(x3596));
IkReal x3608=((sj14)*(x3604));
IkReal x3609=((sj11)*(x3595));
IkReal x3610=((cj11)*(x3596));
IkReal x3611=((cj14)*(cj9)*(r00));
IkReal x3612=((x3607)+(x3606));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3597)))+(((IkReal(-1.00000000000000))*(x3610)))+(x3609)+(((cj13)*(x3600)))+(((IkReal(-1.00000000000000))*(x3604)*(x3605))));
evalcond[1]=((((sj13)*(x3600)))+(x3612)+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x3597)*(x3605))));
evalcond[2]=((((sj13)*(x3601)))+(((IkReal(-1.00000000000000))*(x3598)*(x3608)))+(x3612)+(((cj13)*(x3611)))+(((IkReal(-1.00000000000000))*(x3599)*(x3608)))+(((cj13)*(sj9)*(x3603)))+(((r12)*(x3602))));
evalcond[3]=((((sj13)*(x3611)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3604)))+(((IkReal(-1.00000000000000))*(x3601)*(x3604)))+(((IkReal(-1.00000000000000))*(x3609)))+(x3610)+(((x3602)*(x3603)))+(((IkReal(-1.00000000000000))*(sj14)*(x3597)*(x3598)))+(((IkReal(-1.00000000000000))*(sj14)*(x3597)*(x3599))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3613=((cj13)*(sj11));
IkReal x3614=((r21)*(sj14));
IkReal x3615=((cj11)*(cj13));
IkReal x3616=((cj11)*(sj13));
IkReal x3617=((sj11)*(sj13));
IkReal x3618=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3616)*(x3618)))+(((IkReal(-1.00000000000000))*(r22)*(x3617)))+(((x3613)*(x3614)))+(((r22)*(x3615)))+(((IkReal(-1.00000000000000))*(x3613)*(x3618)))+(((x3614)*(x3616))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((cj14)*(r20)*(x3615)))+(((IkReal(-1.00000000000000))*(x3617)*(x3618)))+(((r22)*(x3613)))+(((r22)*(x3616)))+(((IkReal(-1.00000000000000))*(x3614)*(x3615)))+(((x3614)*(x3617))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x3616)*(x3618)))+(((IkReal(-1.00000000000000))*(r22)*(x3617)))+(((x3613)*(x3614)))+(((r22)*(x3615)))+(((IkReal(-1.00000000000000))*(x3613)*(x3618)))+(((x3614)*(x3616)))))), ((gconst52)*(((((cj14)*(r20)*(x3615)))+(((IkReal(-1.00000000000000))*(x3617)*(x3618)))+(((r22)*(x3613)))+(((r22)*(x3616)))+(((IkReal(-1.00000000000000))*(x3614)*(x3615)))+(((x3614)*(x3617)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3619=IKsin(j10);
IkReal x3620=IKcos(j10);
IkReal x3621=((IkReal(1.00000000000000))*(sj13));
IkReal x3622=((r11)*(sj9));
IkReal x3623=((cj9)*(r01));
IkReal x3624=((r21)*(sj14));
IkReal x3625=((cj9)*(r02));
IkReal x3626=((sj13)*(sj9));
IkReal x3627=((cj14)*(r10));
IkReal x3628=((IkReal(1.00000000000000))*(cj13));
IkReal x3629=((cj14)*(r20));
IkReal x3630=((cj11)*(x3619));
IkReal x3631=((sj11)*(x3620));
IkReal x3632=((sj14)*(x3628));
IkReal x3633=((sj11)*(x3619));
IkReal x3634=((cj11)*(x3620));
IkReal x3635=((cj14)*(cj9)*(r00));
IkReal x3636=((x3630)+(x3631));
evalcond[0]=((((cj13)*(x3624)))+(x3633)+(((IkReal(-1.00000000000000))*(x3628)*(x3629)))+(((IkReal(-1.00000000000000))*(x3634)))+(((IkReal(-1.00000000000000))*(r22)*(x3621))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3621)*(x3629)))+(x3636)+(((sj13)*(x3624)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x3627)))+(x3636)+(((sj13)*(x3625)))+(((r12)*(x3626)))+(((cj13)*(x3635)))+(((IkReal(-1.00000000000000))*(x3623)*(x3632)))+(((IkReal(-1.00000000000000))*(x3622)*(x3632))));
evalcond[3]=((((sj13)*(x3635)))+(((x3626)*(x3627)))+(((IkReal(-1.00000000000000))*(x3625)*(x3628)))+(((IkReal(-1.00000000000000))*(sj14)*(x3621)*(x3623)))+(((IkReal(-1.00000000000000))*(sj14)*(x3621)*(x3622)))+(x3634)+(((IkReal(-1.00000000000000))*(x3633)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3628))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3637=((cj9)*(r10));
IkReal x3638=((cj13)*(cj14));
IkReal x3639=((sj14)*(sj9));
IkReal x3640=((IkReal(1.00000000000000))*(sj14));
IkReal x3641=((cj9)*(sj13));
IkReal x3642=((r02)*(sj9));
IkReal x3643=((cj13)*(cj9));
IkReal x3644=((cj14)*(r01));
IkReal x3645=((IkReal(1.00000000000000))*(npx));
IkReal x3646=((cj14)*(sj13));
IkReal x3647=((IkReal(1.00000000000000))*(cj9));
IkReal x3648=((npy)*(sj14));
IkReal x3649=((IkReal(1.00000000000000))*(sj13));
IkReal x3650=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x3649)))+(((cj13)*(x3648)))+(((IkReal(-1.00000000000000))*(x3638)*(x3645))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj9)*(x3644)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3647)))+(((IkReal(-1.00000000000000))*(x3637)*(x3640)))+(((r00)*(x3639))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x3645)*(x3646)))+(((cj13)*(npz)))+(((sj13)*(x3648)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3640)))+(((IkReal(-1.00000000000000))*(x3644)*(x3647)))+(((IkReal(-1.00000000000000))*(r11)*(x3650)))+(((IkReal(-1.00000000000000))*(r10)*(x3639))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r11)*(x3640)*(x3643)))+(((r12)*(x3641)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3638)))+(((x3637)*(x3638)))+(((cj13)*(r01)*(x3639)))+(((IkReal(-1.00000000000000))*(x3642)*(x3649))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r11)*(x3640)*(x3641)))+(((cj13)*(x3642)))+(((x3637)*(x3646)))+(((IkReal(-1.00000000000000))*(r12)*(x3643)))+(((IkReal(-1.00000000000000))*(r00)*(sj9)*(x3646)))+(((r01)*(sj13)*(x3639))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj11)*(sj11))))+(((IkReal(-1.00000000000000))*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3651=((cj13)*(sj14));
IkReal x3652=((IkReal(1.00000000000000))*(cj11));
IkReal x3653=((r11)*(sj9));
IkReal x3654=((cj11)*(sj13));
IkReal x3655=((r12)*(sj9));
IkReal x3656=((r10)*(sj9));
IkReal x3657=((sj11)*(sj13));
IkReal x3658=((cj9)*(r02));
IkReal x3659=((IkReal(1.00000000000000))*(sj11));
IkReal x3660=((cj9)*(r01));
IkReal x3661=((cj9)*(r00));
IkReal x3662=((cj13)*(cj14)*(sj11));
IkReal x3663=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x3651)*(x3652)*(x3653)))+(((x3656)*(x3663)))+(((IkReal(-1.00000000000000))*(r22)*(x3657)))+(((IkReal(-1.00000000000000))*(x3651)*(x3652)*(x3660)))+(((r21)*(sj11)*(x3651)))+(((x3654)*(x3658)))+(((x3654)*(x3655)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3659)))+(((x3661)*(x3663))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x3651)*(x3652)))+(((x3656)*(x3662)))+(((IkReal(-1.00000000000000))*(x3651)*(x3653)*(x3659)))+(((x3657)*(x3658)))+(((r20)*(x3663)))+(((x3655)*(x3657)))+(((IkReal(-1.00000000000000))*(x3651)*(x3659)*(x3660)))+(((x3661)*(x3662)))+(((r22)*(x3654))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(x3651)*(x3652)*(x3653)))+(((x3656)*(x3663)))+(((IkReal(-1.00000000000000))*(r22)*(x3657)))+(((IkReal(-1.00000000000000))*(x3651)*(x3652)*(x3660)))+(((r21)*(sj11)*(x3651)))+(((x3654)*(x3658)))+(((x3654)*(x3655)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3659)))+(((x3661)*(x3663)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x3651)*(x3652)))+(((x3656)*(x3662)))+(((IkReal(-1.00000000000000))*(x3651)*(x3653)*(x3659)))+(((x3657)*(x3658)))+(((r20)*(x3663)))+(((x3655)*(x3657)))+(((IkReal(-1.00000000000000))*(x3651)*(x3659)*(x3660)))+(((x3661)*(x3662)))+(((r22)*(x3654)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3664=IKsin(j10);
IkReal x3665=IKcos(j10);
IkReal x3666=((IkReal(1.00000000000000))*(sj13));
IkReal x3667=((r11)*(sj9));
IkReal x3668=((cj9)*(r01));
IkReal x3669=((IkReal(1.00000000000000))*(cj11));
IkReal x3670=((r21)*(sj14));
IkReal x3671=((cj9)*(r02));
IkReal x3672=((sj13)*(sj9));
IkReal x3673=((cj14)*(r10));
IkReal x3674=((IkReal(1.00000000000000))*(cj13));
IkReal x3675=((cj14)*(r20));
IkReal x3676=((sj11)*(x3664));
IkReal x3677=((sj14)*(x3674));
IkReal x3678=((sj11)*(x3665));
IkReal x3679=((cj14)*(cj9)*(r00));
IkReal x3680=((x3665)*(x3669));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3680)))+(((cj13)*(x3670)))+(x3676)+(((IkReal(-1.00000000000000))*(r22)*(x3666)))+(((IkReal(-1.00000000000000))*(x3674)*(x3675))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3664)*(x3669)))+(((sj13)*(x3670)))+(((IkReal(-1.00000000000000))*(x3678)))+(((IkReal(-1.00000000000000))*(x3666)*(x3675)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x3673)))+(((r12)*(x3672)))+(((cj13)*(x3679)))+(x3678)+(((IkReal(-1.00000000000000))*(x3667)*(x3677)))+(((sj13)*(x3671)))+(((cj11)*(x3664)))+(((IkReal(-1.00000000000000))*(x3668)*(x3677))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3671)*(x3674)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3674)))+(((IkReal(-1.00000000000000))*(x3680)))+(x3676)+(((sj13)*(x3679)))+(((IkReal(-1.00000000000000))*(sj14)*(x3666)*(x3667)))+(((IkReal(-1.00000000000000))*(sj14)*(x3666)*(x3668)))+(((x3672)*(x3673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3681=((r22)*(sj11));
IkReal x3682=((IkReal(1.00000000000000))*(sj11));
IkReal x3683=((IkReal(1.00000000000000))*(cj11));
IkReal x3684=((cj14)*(r20));
IkReal x3685=((cj13)*(r21)*(sj14));
IkReal x3686=((r21)*(sj13)*(sj14));
if( IKabs(((gconst54)*(((((cj11)*(x3686)))+(((IkReal(-1.00000000000000))*(x3682)*(x3685)))+(((cj11)*(cj13)*(r22)))+(((sj13)*(x3681)))+(((IkReal(-1.00000000000000))*(sj13)*(x3683)*(x3684)))+(((cj13)*(sj11)*(x3684))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((cj11)*(x3685)))+(((cj13)*(x3681)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3683)))+(((sj11)*(x3686)))+(((IkReal(-1.00000000000000))*(cj13)*(x3683)*(x3684)))+(((IkReal(-1.00000000000000))*(sj13)*(x3682)*(x3684))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((cj11)*(x3686)))+(((IkReal(-1.00000000000000))*(x3682)*(x3685)))+(((cj11)*(cj13)*(r22)))+(((sj13)*(x3681)))+(((IkReal(-1.00000000000000))*(sj13)*(x3683)*(x3684)))+(((cj13)*(sj11)*(x3684)))))), ((gconst54)*(((((cj11)*(x3685)))+(((cj13)*(x3681)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3683)))+(((sj11)*(x3686)))+(((IkReal(-1.00000000000000))*(cj13)*(x3683)*(x3684)))+(((IkReal(-1.00000000000000))*(sj13)*(x3682)*(x3684)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3687=IKsin(j10);
IkReal x3688=IKcos(j10);
IkReal x3689=((IkReal(1.00000000000000))*(sj13));
IkReal x3690=((r11)*(sj9));
IkReal x3691=((cj9)*(r01));
IkReal x3692=((IkReal(1.00000000000000))*(cj11));
IkReal x3693=((r21)*(sj14));
IkReal x3694=((cj9)*(r02));
IkReal x3695=((sj13)*(sj9));
IkReal x3696=((cj14)*(r10));
IkReal x3697=((IkReal(1.00000000000000))*(cj13));
IkReal x3698=((cj14)*(r20));
IkReal x3699=((sj11)*(x3687));
IkReal x3700=((sj14)*(x3697));
IkReal x3701=((sj11)*(x3688));
IkReal x3702=((cj14)*(cj9)*(r00));
IkReal x3703=((x3688)*(x3692));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3689)))+(((IkReal(-1.00000000000000))*(x3703)))+(x3699)+(((IkReal(-1.00000000000000))*(x3697)*(x3698)))+(((cj13)*(x3693))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3689)*(x3698)))+(((sj13)*(x3693)))+(((IkReal(-1.00000000000000))*(x3687)*(x3692)))+(((IkReal(-1.00000000000000))*(x3701)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x3687)))+(((cj13)*(x3702)))+(((sj13)*(x3694)))+(((IkReal(-1.00000000000000))*(x3690)*(x3700)))+(x3701)+(((IkReal(-1.00000000000000))*(x3691)*(x3700)))+(((cj13)*(sj9)*(x3696)))+(((r12)*(x3695))));
evalcond[3]=((((sj13)*(x3702)))+(((x3695)*(x3696)))+(((IkReal(-1.00000000000000))*(sj14)*(x3689)*(x3691)))+(((IkReal(-1.00000000000000))*(sj14)*(x3689)*(x3690)))+(((IkReal(-1.00000000000000))*(x3703)))+(x3699)+(((IkReal(-1.00000000000000))*(x3694)*(x3697)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3697))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3704=((r21)*(sj14));
IkReal x3705=((cj12)*(cj13));
IkReal x3706=((sj11)*(sj13));
IkReal x3707=((cj14)*(r20));
IkReal x3708=((IkReal(1.00000000000000))*(sj11));
IkReal x3709=((cj12)*(r22));
IkReal x3710=((IkReal(1.00000000000000))*(cj11));
IkReal x3711=((cj13)*(r22));
IkReal x3712=((sj13)*(x3710));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3704)*(x3712)))+(((IkReal(-1.00000000000000))*(x3710)*(x3711)))+(((cj11)*(sj13)*(x3707)))+(((IkReal(-1.00000000000000))*(x3704)*(x3705)*(x3708)))+(((sj11)*(x3705)*(x3707)))+(((x3706)*(x3709))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj11)*(x3704)*(x3705)))+(((IkReal(-1.00000000000000))*(x3705)*(x3707)*(x3710)))+(((IkReal(-1.00000000000000))*(x3709)*(x3712)))+(((IkReal(-1.00000000000000))*(x3708)*(x3711)))+(((IkReal(-1.00000000000000))*(x3704)*(x3706)))+(((x3706)*(x3707))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3704)*(x3712)))+(((IkReal(-1.00000000000000))*(x3710)*(x3711)))+(((cj11)*(sj13)*(x3707)))+(((IkReal(-1.00000000000000))*(x3704)*(x3705)*(x3708)))+(((sj11)*(x3705)*(x3707)))+(((x3706)*(x3709)))))), ((gconst47)*(((((cj11)*(x3704)*(x3705)))+(((IkReal(-1.00000000000000))*(x3705)*(x3707)*(x3710)))+(((IkReal(-1.00000000000000))*(x3709)*(x3712)))+(((IkReal(-1.00000000000000))*(x3708)*(x3711)))+(((IkReal(-1.00000000000000))*(x3704)*(x3706)))+(((x3706)*(x3707)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3713=IKsin(j10);
IkReal x3714=IKcos(j10);
IkReal x3715=((IkReal(1.00000000000000))*(cj13));
IkReal x3716=((cj9)*(r02));
IkReal x3717=((IkReal(1.00000000000000))*(sj13));
IkReal x3718=((r11)*(sj9));
IkReal x3719=((IkReal(1.00000000000000))*(cj14));
IkReal x3720=((cj9)*(r01));
IkReal x3721=((r21)*(sj14));
IkReal x3722=((IkReal(1.00000000000000))*(sj12));
IkReal x3723=((r10)*(sj9));
IkReal x3724=((cj14)*(sj13));
IkReal x3725=((cj14)*(r20));
IkReal x3726=((IkReal(1.00000000000000))*(sj14));
IkReal x3727=((r12)*(sj9));
IkReal x3728=((cj13)*(cj14));
IkReal x3729=((cj9)*(r00));
IkReal x3730=((sj11)*(x3713));
IkReal x3731=((cj11)*(x3713));
IkReal x3732=((sj11)*(x3714));
IkReal x3733=((cj11)*(x3714));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3722)*(x3731)))+(((IkReal(-1.00000000000000))*(x3722)*(x3732))));
evalcond[1]=((((cj13)*(x3721)))+(x3730)+(((IkReal(-1.00000000000000))*(x3733)))+(((IkReal(-1.00000000000000))*(r22)*(x3717)))+(((IkReal(-1.00000000000000))*(x3715)*(x3725))));
evalcond[2]=((((sj13)*(x3721)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x3717)*(x3725)))+(((cj12)*(x3731)))+(((cj12)*(x3732))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3726)*(x3729)))+(((IkReal(-1.00000000000000))*(x3723)*(x3726)))+(((IkReal(-1.00000000000000))*(x3719)*(x3720)))+(((IkReal(-1.00000000000000))*(x3722)*(x3733)))+(((sj12)*(x3730)))+(((IkReal(-1.00000000000000))*(x3718)*(x3719))));
evalcond[4]=((x3732)+(x3731)+(((IkReal(-1.00000000000000))*(sj14)*(x3715)*(x3718)))+(((IkReal(-1.00000000000000))*(sj14)*(x3715)*(x3720)))+(((x3723)*(x3728)))+(((sj13)*(x3727)))+(((x3728)*(x3729)))+(((sj13)*(x3716))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3715)*(x3716)))+(((x3724)*(x3729)))+(((IkReal(-1.00000000000000))*(sj14)*(x3717)*(x3720)))+(((IkReal(-1.00000000000000))*(cj12)*(x3730)))+(((IkReal(-1.00000000000000))*(sj14)*(x3717)*(x3718)))+(((x3723)*(x3724)))+(((cj12)*(x3733)))+(((IkReal(-1.00000000000000))*(x3715)*(x3727))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3734=((cj11)*(sj12));
IkReal x3735=((r22)*(sj13));
IkReal x3736=((r20)*(sj14));
IkReal x3737=((cj14)*(sj11));
IkReal x3738=((cj13)*(r20));
IkReal x3739=((sj11)*(sj12));
IkReal x3740=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3735)*(x3739)))+(((cj11)*(x3736)))+(((sj12)*(x3737)*(x3738)))+(((IkReal(-1.00000000000000))*(x3739)*(x3740))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj11)*(x3736)))+(((x3734)*(x3740)))+(((IkReal(-1.00000000000000))*(x3734)*(x3735)))+(((IkReal(-1.00000000000000))*(cj14)*(x3734)*(x3738)))+(((r21)*(x3737))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3735)*(x3739)))+(((cj11)*(x3736)))+(((sj12)*(x3737)*(x3738)))+(((IkReal(-1.00000000000000))*(x3739)*(x3740)))))), ((gconst46)*(((((sj11)*(x3736)))+(((x3734)*(x3740)))+(((IkReal(-1.00000000000000))*(x3734)*(x3735)))+(((IkReal(-1.00000000000000))*(cj14)*(x3734)*(x3738)))+(((r21)*(x3737)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3741=IKsin(j10);
IkReal x3742=IKcos(j10);
IkReal x3743=((IkReal(1.00000000000000))*(cj13));
IkReal x3744=((cj9)*(r02));
IkReal x3745=((IkReal(1.00000000000000))*(sj13));
IkReal x3746=((r11)*(sj9));
IkReal x3747=((IkReal(1.00000000000000))*(cj14));
IkReal x3748=((cj9)*(r01));
IkReal x3749=((r21)*(sj14));
IkReal x3750=((IkReal(1.00000000000000))*(sj12));
IkReal x3751=((r10)*(sj9));
IkReal x3752=((cj14)*(sj13));
IkReal x3753=((cj14)*(r20));
IkReal x3754=((IkReal(1.00000000000000))*(sj14));
IkReal x3755=((r12)*(sj9));
IkReal x3756=((cj13)*(cj14));
IkReal x3757=((cj9)*(r00));
IkReal x3758=((sj11)*(x3741));
IkReal x3759=((cj11)*(x3741));
IkReal x3760=((sj11)*(x3742));
IkReal x3761=((cj11)*(x3742));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3750)*(x3759)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3750)*(x3760))));
evalcond[1]=((((cj13)*(x3749)))+(((IkReal(-1.00000000000000))*(r22)*(x3745)))+(((IkReal(-1.00000000000000))*(x3743)*(x3753)))+(((IkReal(-1.00000000000000))*(x3761)))+(x3758));
evalcond[2]=((((cj12)*(x3759)))+(((IkReal(-1.00000000000000))*(x3745)*(x3753)))+(((cj12)*(x3760)))+(((sj13)*(x3749)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3746)*(x3747)))+(((IkReal(-1.00000000000000))*(x3747)*(x3748)))+(((IkReal(-1.00000000000000))*(x3754)*(x3757)))+(((IkReal(-1.00000000000000))*(x3751)*(x3754)))+(((IkReal(-1.00000000000000))*(x3750)*(x3761)))+(((sj12)*(x3758))));
evalcond[4]=((((x3751)*(x3756)))+(((IkReal(-1.00000000000000))*(sj14)*(x3743)*(x3746)))+(((IkReal(-1.00000000000000))*(sj14)*(x3743)*(x3748)))+(x3760)+(x3759)+(((x3756)*(x3757)))+(((sj13)*(x3755)))+(((sj13)*(x3744))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3743)*(x3755)))+(((x3751)*(x3752)))+(((IkReal(-1.00000000000000))*(x3743)*(x3744)))+(((IkReal(-1.00000000000000))*(sj14)*(x3745)*(x3746)))+(((IkReal(-1.00000000000000))*(sj14)*(x3745)*(x3748)))+(((x3752)*(x3757)))+(((IkReal(-1.00000000000000))*(cj12)*(x3758)))+(((cj12)*(x3761))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - NextageOpen (53b6c6feea19292c552a263dfc45aa26)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
